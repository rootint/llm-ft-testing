 Okay, what we're going to talk about today is how to apply and succeed at YC. In my capacity as the head of admissions, I go around the world and I give talks and I meet folks that are applying and I answer lots of questions. And so I think I have a decent internal model of the kinds of questions that people have and the kinds of things that people get hung up on. And so I'm going to do my best to anticipate what you're probably thinking about and try to answer those to the best of my ability. All right. So why is it even worth applying to YC? People ask this question a fair amount of time. And I would argue that the very act of completing the application forces you to think about stuff that you should definitely think about. For instance, you know, what are we building? What is different about what we're doing than other options on the market? Who are your competitors? That's a good one to ask. Here's one that sometimes people don't talk about before filling out the application. What is your equity split? You'd be surprised. People often have never had that conversation. And so the very act of going through and doing an application and working with your co-founder to answer all these things, I would argue is an extremely good idea. And regardless of whether you do YC again, you should ask yourselves all of these questions. And if you find a bunch of murkiness where you can't answer them, that's usually a sign that you should be discussing this more. And so right off the bat, I recommend going and answering the questions. I think it's a good idea. Another thing is if you are watching this very presentation, there is a good chance that YC is a great fit for you. There's lots of people that apply, and they don't really know what YC is, and they Googled how to get free money on the internet or something. Trust me, I read these applications. And it's clear that they don't exactly understand what YC is and what it's all about. They just want money, right? That is not you. You are here. You have been participating in this. There's lots of context that you have about YC. And so that out of the gate means you're going to be much better prepared to fill out this application and that you're a great fit for the sort of company that we would want to fund. Okay? Another thing is I think a lot about what you should be doing as a founder in terms of cost-benefit analysis on time. There's a lot of things that seem like a good use of time that are not a good use of time. And there's a lot of things that may not seem like a good use of time that are an excellent use of time. And so I'd argue filling out an application should really only take you, I don't know, two or three hours. And the potential upside is quite huge versus other ways you can spend two or three hours where the upside is not much at all. So let's talk a little bit about how you create luck. And this is sort of like a meta point outside of the application thing. But great founders create luck. And there's ways that you can create luck in your life that increase the chances that you will get lucky. And the way you get lucky is you set yourself up to be lucky as often as possible. And so if you can set yourself up so that every single day of your life, you have a shot at something really fortunate happening to you, the odds that something really fortunate will happen to you is like super high. And I would argue applying to YC is definitely one of those things, right? I answer questions and invariably people will probably ask me questions at the end of this that are some kind of a complicated way of being like, of you talking yourself out of why you should do it for some reason. That is not a great way to create luck. And the fact is you're going to set yourself up to be rejected all the time as a founder, right? You get customers, your customers unsubscribe from your service, your customers are not happy, you're going to try to recruit people that may not work. You're going to be told no all the time. And so if you set yourself up so that you never hear no and that you never get negative feedback, it's just like you're not going to set yourself up to actually be successful. So this is an example of when I talk to people when I'm on the road, a lot of the questions or concerns that people have all stem from this, which is they're afraid of what happens if they don't get in. And so they don't even bother to take the chance. And again, regardless of YC in this particular topic, I really think this is a good trait for you to develop as a founder. We work on this in the program with people of really encouraging people to not be so afraid of getting told no and systematically trying to set yourself up for good things to happen to you as much as possible. Right? And so this is just another of those situations. So let's talk about some of the reasons that people don't apply. This one is very common. I am too early. There is no such thing as too early. We fund people sometimes in the extreme case, people have changed their idea between when they get invited to interviews and when they get to the interview. That's an extreme case. That's pretty early. We also fund people that end up pivoting mid-batch. And so that means they've been working on their startup like a negative number of days, right? That is clearly not too early also. And so again, there's a lot of ideas around there that like the right way to apply to YC is to wait till you have a certain amount of stuff. Someone asked me a question, what's the right amount of MRR to get into YC? And like, holy cow, the answer is zero, right? That doesn't mean you will definitely get it every time, clearly. But any kind of roadblock you put for yourself that you're too early, I would argue, is your own self-constrained roadblock, not something that's coming from us. Conversely, people think they are too far along. And this one is great because it's like there's like this ideal point between too early and too late that is like last, you know, a week or something. And otherwise, you're too far on either extreme. Most likely you're not too far along. We have folks, every batch that come in, we have folks that, man, had over a million dollars in annual recurring revenue. Folks that have had 20 or 30 employees, folks that have raised a fair amount of money, like whatever metric by which you think you're too far. And again, maybe you are genuinely too far because you've got 1,000 employees or something. The odds are, though, most of the people that ask this question, it's because they are launched or they have a little bit of revenue and they're like, oh, wow, we don't need YC. We got it all figured out. And again, our data and the folks that we worked with suggest that you are most likely not too far along, depending on your circumstance. So if that is the idea, don't put the barrier into yourself on why you're not going to apply just because you think you're too far along. I'm too experienced. This is where either you just, oh, yeah, I went to business school or I've done a startup before. Okay, that's fine. But all you're doing is limiting possibilities there. And there's lots of folks that are super experienced Justin Kahn did YC three times and is now the founder of Atrium and he gets something out of it every time and clearly he's very experienced and I would argue much more experienced than many people that think this about themselves so again this is just creating barriers for yourself this is a common one there's something specific about my company that YC just doesn't get and usually the way that I answer this is by listing all the types of companies that we fund. It is too long and too boring to list here. So I will not attempt to list them all. But look, whatever industry you're in, whatever you're doing, most likely we fund something kind of like it or equally crazy to that. And we really like crazy and weird things. And again, what do you make crazy and weird? I don't know. We funded nuclear fission and nuclear fusion startups and supersonic jet startups. And like, I don't know, all sorts of crazy biotech stuff. So there's, it's unlikely that we're just going to be like, wow, that's, that's too weird for us. Maybe you're, maybe you are that one, but most likely this is a barrier you're putting in for yourself. This one's also really common. People think if you do YC, you have to live in the Bay Area forever. That is not true. A huge percentage of the people that we fund, you know, you do the program here, but that's three months and you go and do whatever you want, right? So if you're super worried about like, wow, I just love New York City. That's my home. I want to be in New York City. Okay. That doesn't preclude you from wanting to apply to YC. Okay. There's more. I'll go through these quicker. I'm a solo founder. Okay. That's not a reason not to apply. It's just, again, maybe you're afraid of rejection or you know that we encourage you to have co-founders. That doesn't mean, that's not a reason to not apply to YC. I've already applied to YC once before. I'll address this later. But just because you didn't get in once in no way means that you won't do it again. So that's like not a good reason. I've already raised some money. I don't know the stats off the top of my head, but a huge percentage of last batch had already raised a few, you know, on the order of six figures. And there's definitely some seven figures as well. And so in no way does it preclude you from applying to YC. It's in fact extremely common. Finally, there's competitors. Sometimes they're, you know, if you're doing like a self-driving car startup or a scooter startup or something, there's other folks that we funded in the space. We fund folks in the same space all the time. This does not preclude us from funding you, nor is a good reason to not apply. Okay. nor is a good reason to not apply. Okay. There's not many, but I do think there is a couple of good reasons to not apply. One is you have the kind of business that is either not anticipated to be fast growing enough nor in your ambition is something that ever makes sense to raise venture capital for. And if that does not make sense for you, then yeah, you probably shouldn't apply to YC. Like you should not raise any venture capital. You should make the growth rate work for you and make the business model that works for you. And that's A-OK. Right? So no sweat. That's a good reason. The other thing is you're just not sure you want to work on this very long. All right. That's also a valid reason. We're used to working with people a very long time. And so if you just wanna do something for a few months or put this on your resume, then yeah, that's a fair reason to not apply. How to apply? Okay, this is really straightforward. There's a website. You go to the website and you follow the instructions. It's okay to apply early or late, depending on your circumstances. As Jeff said, It's okay to apply early or late depending on your circumstances as Jeff said There are It's slightly harder to get in early or late and that's just because we're not that's not our primary time to be cycling through things But if that's what if those are the circumstances you're in you should definitely apply This is a very common email question we get is hey, it's two weeks after the deadline Can I still apply guess what the answer to that question is? It's a very quick yes. But people want to ask. They want permission. And again, this is a recurring theme about founders. You need to learn. You don't have to ask permission for everything. You don't need our approval to do everything. There's a website. If there's a button where you can apply, you should totally apply. You don't need to email us, have us say yes, and then do it. That is an unnecessary step, right? So just keep that in mind. And you can just email us. And again, most of these questions are just people asking, should I apply? And our answer is almost invariably yes. But if you want to ask us, you can. There's the email address. So let's talk about what makes a good application. The first one, I promise this is not redundant. This matters, and it's because I read so many applications, I have a very good idea of what they actually look like. And I realize that this talk will go on the internet, and many of the things that I say will be reflected back. Like, I'm creating a feedback loop for the things that I read. And so things I'm putting in here are actually meant, like, I want these ideas to get dispersed, of people knowing what makes a good application because I think that will make my job easier right so this is very intentional the first thing is that you'd be shocked how many people don't actually fill out the dang thing properly like sloppy sloppy sloppy right there's like whole areas where they don't answer the question whatsoever they don't put in URLs they don't fill out their bio I don't know it's again it's not a very long application. You'll see yourself. But it is shocking to me what a high percentage of the time people just don't fill the dang thing out or put in lots of errors and it's just not great. Think about it about applying for a job or any other kind of professional thing. Lack of professionalism here, not equated with success. So just fill it out. It's that simple. And that's why I'm leading with this is you would be shocked how few people follow this direction. Maybe they think it's like a lottery ticket where they put it in an application, even if it's a bad one, they might get in. No, humans read these things. I read these things and I appreciate it if you fill out the application. The second thing is the founder video. You would be shocked how many people don't follow the dang directions. There's directions on how to do the founder video, i.e. it should be a minute long. All the founders should be in the video. And people don't do that. We get the 20 minute like spirit journey video where I don't even know what they're talking. You know, it's just like, it goes, it's yeah. Or like sometimes I've seen like an hour 20, I've seen some weird stuff, but like the 20 minute spirit journey video, not super helpful. And I'm not, it's really hard to sit there and watch something for 20 minutes. One minute is a perfect amount of time. We give you examples. Those examples are great videos. Be like that video. It's also really good to have the entire founding team in the video. People are always like, hey, I'm here, and I'm in the airport, and my co-founder isn't here, so here's my video. And I think that's fine if that's what you have to do. But maybe just waiting a couple of days till you can be with your co-founder to do the video would be a good idea. Because my theory is a lot of times when people don't follow the directions. It may be because their co-founder doesn't know they're applying to YC. Like there's all these things under the hood where the lack of the co-founder in the video speaks volumes. And so maybe you have a great reason why your co-founder is in the video, but I would suggest it, right? And it's in the directions. So I'm not telling you anything that's not in the directions. I'm not telling you anything that's not in the directions. I'm just letting you know, yes, we watch these things. And yes, it's valuable. And if you just follow the directions, then we're going to be super happy. And when it's like either there's no video or the video is weird. Another thing that people do a lot is they put in like an unrelated video of a product demo that they made with one of those free tools where there's no humans in it. I can't even describe it. But anyway, there's a whole genre of things that people put in there that are not remotely following directions. So please follow the directions. I swear it matters. Clarity of thought. This is a good application. It's easy to understand what they're talking about. And it doesn't mean you write tons and tons and tons of words. Tons of words can definitely has a diminishing return where we don't know what you're talking about And it's I just can't understand what the application is saying Also clarity on who's building the product it's remarkably obfuscated to even figure out what's going on and who's even building the thing Like you'll see what the founders are and you'll kind of see what they're working on But it's really hard to tell who's building it and so just having it be very crisp of who's building it on, but it's really hard to tell who's building it. And so just having it be very crisp of who's building it, again, this would put you way better than average if you just do these things. It's so simple, right? So good applications do these. Let's talk about clarity because this is definitely something that is worth talking about. Great applications that I read, the application, when I read an application and I know when I read it, they're gonna get in, they're super easy for me to read. It does not require a lot of work. It doesn't feel boring or painful. It just reads like with no effort whatsoever. And it's because I understand there's no jargon and everything just adds up and it's a great narrative. And it's like, wow, what a great application. And you move on. It's very quick. Weak applications obfuscate. They obfuscate everything. What is your idea? Obfuscated. Who's on the team? Who's writing the code? Obfuscated. How does it work? I have no idea. What is the state of the company? Are you launched? Do you have users? You have revenue, but you're not launched? What is that? Basically, it's like a puzzle. When I'm reading one of these applications, it's like a brain teaser where I'm trying to figure out what's going on. And I promise this doesn't help. I think a lot of the times that people obfuscate is they either think that that's what we want to read or we like buzzwords or we like this stuff. Or they're trying to hide something where it's not, where like the revenue is actually their personal salary, but it's not revenue for the company. But they're putting it in there because they think they should have revenue. Like stuff like that. And so we'll ask questions sometimes to figure this out. that. And so we'll ask questions sometimes to figure this out, but there's such a clear delineation for me as an application reader about someone that is clearly communicating in a very crisp way versus where it's this brain teaser and I'm trying to pull out, or it's just like tons of work for me to pull out the key facts from the application. Okay. And I think this is broadly applicable if you're trying to convince someone to buy your products, or you're trying to convince someone to work with you, or you're trying to convince an investor to invest in your startup, and they don't even understand what you're talking about, you have already lost, right? Simply going for coherent understanding should always be the first thing you do before you're trying to sell someone, right? So if I don't understand what the heck is going on in your application, it doesn't even get to the point where it's like, hey, should we fund this company or not? We just don't know what's going on. And you will notice that other people will check out, like if you're trying to pitch your thing to someone and they can't follow you, there's no way you're getting them to yes. And so I just think this is such a broadly applicable skill and something that we work on a lot in the batch is simply being clear and making sure the other party knows what you're doing first and then selling them comes second once they actually understand what you're doing. So I put in a few examples here. So here's some examples of really great descriptions from real YC applications, from real YC companies that got in. And so here's a company called Remix. And this is the entirety of their answer to this question. There's not more. This is it. I don't know. I'm not going to read it out loud. But it's, what, three sentences? And I read that and I know exactly what they do and I know who wants it. And that's it. Great. Seems valuable, right? This requires so little mental effort to pull out what Remix is and what they're doing and who it's for that I'm like, great. Like takes two seconds to read. Okay. Here's another one for a company called Tetra Science. Also excellent. We're a software platform that connects scientific tools to the cloud. It allows scientists to access their lab device from anywhere, blah, blah, blah. And we make a small hardware module which connects those labs to the web. That's it. That's great, that's what we wanna read. See, super crisp, understandable, no jargon, answers all the key That's it. That's great. That's what we want to read. See? Super crisp, understandable, no jargon, answers all the key questions. Notice they're not trying to sell us on any of this. They're just explaining what it is. And that's why this is so great, is it's super coherent, super clear. Here's another example from GitLab when they applied to YC. And they explain exactly what it is, the history of the company. And they also add in really impressive facts right at the top. Over 100,000 organizations use it, including thousands of programmers at Apple. All right, that's good. Glad they put that in there, right? And it's right at the top, super crisp, right? So this is, when we read these applications, it's very clear what they do. And we're like, wow, tell me more. Like, I understand what you're doing. Here's an example of a bad one. And I didn't pull this from a real application. I wrote this myself. And I wrote this based on many of the applications I read. You know what I'm saying? I didn't have to think too hard to write what a bad description is. And it keeps going. I couldn't fit it on the slide. It keeps going for pages. And this isn't even an exaggeration. This is what a lot of applications are like. And I understand. I have empathy for the people that apply with stuff like this. Because I think that they think that this is what we want. Or they think that if they use enough jargon or buzzwords, that we will get confused and fund them or something. You know, it's like stunning us, like, oh, I don't know. Blockchain, okay, yes. Instead, this is arduous work that makes me like wanna go take a break. I'm like, okay, well, I'm done. Like I read one of these and I need to go like get a breath of fresh air. This is a really hard to read. It's really hard to understand what's going on. And I still don't know. I read this and I've learned nothing. I still don't know what this company does even after reading the application. And so please don't apply with stuff like this. It's not helping. Makes sense? Yeah. And do you see the crisp difference between this and the good examples? Yeah. Okay. Great applications tell a story. So here's the things that I would want to pull out of an application that I was reading. Who is on the team? So this is who we are. This is what we're working on. This is why we're working on it. This is how we got the idea, something like that. This is what we've accomplished thus far. Even if that's, hey, we haven't done much. That's okay. I still want to figure that out. And this is why we're going to make this work. And that's pretty much it. These are the things that I, when I read an application that I'm trying to pull out of it, and there's nothing fancy here. And if you make me work really, really, really hard to figure this out, that's a sign of not a great application. But if this just flows out without taking any effort whatsoever, then that's a good application. Nothing fancy here, right? And if you've ever hired people and read resumes before, it's kind of the same deal, right? You just look at a resume and you're like, okay, cool. There's some key things you're looking for. And then you're like, sounds good. And you move on, right? A resume that takes tons and tons and tons of work to make sense of is probably not a great resume. Okay, here's my number one tip to applicants on what would help. Make it clear that there's at least one person on the team who can make the thing that you are working on. And notice I'm being a little vague in that language because this is not just software. This means any kind of technology that you bring to bear. So if you are building a cure for cancer, you clearly are not going to have any programmers on that team, nor would you be expected to do so. But it would certainly be good if you're working on a cure to cancer to have some sort of scientist on that team. Does that make sense? Same thing, hardware, you know, our nuclear companies, there were no programmers that were the founders of the nuclear companies, but you would hope to see a couple of folks with PhDs in something related to the nuclear field, right? So some sort of domain expertise. And the reason is we fund lots of startups. And if you have all these great ideas and no one on the team can actually do it, you're going to have a hard time. And so just having a really good sense, both in the application and in general, I would recommend having someone on the team that can do it is highly recommended and changeable. Sometimes there's folks where the team is not, say you are working on something in software and there aren't folks that have the credentials or background where there are known software experts. That's A-OK. We still fund folks like this, but the burden of proof is on them to prove they can do it. I can think of an example of a company where it was like a self-taught programmer that was so excited and wanted to do their idea so badly that they went and built the prototype themselves. And it was in the application like, here, I built this myself. Great. They got in. Right? this myself. Great. They got in, right? And it's because the burden of proof, not just like, let me take your word for it, but you were able to show, even though you don't have a background of an established software engineer, you built a prototype and you brought it to market and you proved it. And so that's a good way to think about if you're in this status of having a currently non-technical team of just simply backing up the fact that you can bring the market you can bring the product to bear whether that's from a team whether that's you learning from yourself whether it's a friend helping with a prototype just some evidence that you can bring the product to market is highly recommended and like last note here is obfuscating this doesn't help. So sometimes people make it very vague who built the product or where the prototype came from or who's gonna build it. And I don't recommend obfuscating this. I think having to be super crisp on who is making the thing that you're working on is highly recommended. If you have an application that actually follows the directions really well and is well written and does the video stuff correctly, and you have one or more folks that can build the thing that you want to build, and there's some evidence that you're serious about it. And what I mean by that is just like a lot of times people apply and it's clear they did it kind of on a whim and they're not actually serious about it whatsoever. It comes across. If there's just some evidence that you really want to do this, that's recommended. So if you meet those things, you get about a four times higher odds to get an interview, right? Like if you're doing this stuff, getting an interview is not that crazy hard. And if you're not, if you fail all these criteria, then yeah, the odds are pretty slim. And so it's as simple as this, that this is what it looks like to get an interview, is that you meet these criteria. And again, it's pretty straightforward and transparent. OK? Let's talk about applying more than once. Okay. About a third of last batch were companies that applied already in the past and didn't get in. And so the reason I say this is it's not bad to apply and not get in. That doesn't ruin your odds. If anything, it helps you. The way it helps you is that your next application shows progress. If you apply and don't get in and you apply again and you show progress, I look at that when I'm reading the applications, and I know we all do, and we're like, wow, way to go. They really went and did it. Like, I'm so psyched. Like, they went from an unlaunched idea, and then the next application they launched it. Wow, great job. You know, like we're impressed. And this is another thing to think about is as application readers, we're like on your side. We're not looking at reasons to pick something apart. We're looking for evidence that like you're serious and that like things are going well and you're trying really hard. And so when you see someone expend real effort and make real progress, application, application, that's such a strong signal, right? And this is why you see such a huge percentage of the folks that that do I see are folks that have applied in the past Right is because it is such a strong positive signal One thing I wanted to mention is that you It's basically impossible to network your way into YC The whole reason why C was created was to make it easy for people that had no network to start a startup and get help and raise money. And so the idea of having this website where you can apply, and then you do a 10-minute interview, and then you get funded was really out there and weird. I remember when YC launched. I was not working here. So we don't expect anyone to have a network. We don't expect anyone to network with us. One note on this is a lot of, I get the sense it's not a lot of people, but some people attempt to cold email us a lot or do other things that are sort of stalkerish a lot. And that does not help. We don't expect you to have done that. And the vast, vast, vast, vast, vast majority of people that get in are complete strangers we have never met before. That's the entire system here is funding complete strangers. And my guess is your time is better spent actually making your startup better than trying to do some weird stuff to get attention. We always have these really crazy attention-seeking things that happen. And I can assure you, we don't enjoy those things. Again, what do I mean? People email, they physically mail us weird stuff sometimes. I'm like, that's not great. So some people put a lot of effort into this, not a lot of people, but some people do. And like, that's not great. Right? So sometimes, so some people put a lot of effort into this, not a lot of people, but some people do. And I'm just letting you know that this is not a good use of time, nor expected in any way. And that's not how YC is set up. Another thing to think about is sometimes there are people that you know that are in the network, say alumni or other people, and they will give you well-intentioned bad advice. For instance, oh, don't apply until you have 5K MRR or, oh, you know, let me, I'm really tight with the YC partners, so let me put in a good word for you. Like, you should be very skeptical of this stuff. Self-appointed people that are giving you well-intentioned advice that's essentially putting up barriers between you and the process. I would just be like really wary of that. I'm sure it's coming from a good place. But again, a lot of times when I answer questions for people at applying, some of the weirder ideas come from people that are vaguely in the network. And so if someone's telling you you're too early or too far along or something something something I would be Fairly skeptical right and again. You don't need a network to get in so Expecting the network to give you all the perfect device is not always great Real real quick point. This is not about YC, but this last topic I think of it watch out for predatory advisors. So in the entertainment industry, there's lots of people that want to be famous. There's lots of people that want to be recording artists or they want to be actors or directors. There's a huge supply of them. And one of the things of starting out in the entertainment industry is you meet all of these people that claim to have great connections and they're somehow going to extract value from these poor naive people and it's really sad. And this exists for sure in the tech industry where there are people that will just ask for equity or cash compensation and claim all this stuff and promise you the world. And it's kind of a drag to see this exist. And so I just want to encourage everyone to be very wary of people like this and to do research. And that means Googling them. If they claim fantastic things, look into that. Do diligence on other people they worked with in the past. There's just like a whole variety of people that claim to help you break into Silicon Valley that I think is pretty dubious. And there are some legit things in there, but just like in the entertainment industry for every, I don't know, 10 people that claim they can get you a meeting with the head of all the labels to get you a record deal, you know, nine of those are probably lying, you know? So keep in mind, the best way to have great things happen is to build a great startup, and then great folks will find you, and to be a little wary of some of the folks that are looking for people just like you that are trying to break in. All right. So let's talk about interviews. If you get invited to interviews, they last 10 minutes. The interviews are in person. We expect the full founding team to be there. There's usually three to four people from YC in the interview. And the questions are usually very basic. And what we're trying to do is just understand the nuts and bolts of the business. It's nothing fancy. Just like I was saying about the application process, people are surprised to learn that there's nothing too fancy here. There's no trick questions. There's no really expert stuff. We're just trying to understand really basic things like, oh, are you launched? Well, how are you getting users? Okay, what is the next step for the company? How do you see this getting big? These are all very, very basic questions and we're simply trying to understand the stuff right versus yeah actually let me go to the next one so there's a lot on the internet about how to prepare for interviews and I think a lot of it is a little wrong and the reason it's wrong is I think it sets up the mentality that a YC interview is this adversarial thing that it's your job to beat, right? It's like the interviewers are your opponents and your job is to go in there and like stun them and confuse them. And then if you fool us good enough, then we will fund you. And I think that that is wrong. And again, I read this whole genre of blog posts because they're entertaining to me. And I think it's usually people that didn't get in that write that. And so I understand how it can feel adversarial if you didn't get in. And it's also more exciting to write a blog post about this really exciting interview. And it was like, they were grilling me so hard and I like had to think on the fly. Like that's more exciting than, yeah, we had a kind of a boring conversation about my business. Right. And so I want you, this is a good thing for any kind of working with investors. I want you to put yourself in the shoes of the person on the other side of the table, which is what are we trying to get out of the interview? Imagine you were interviewing a company. What would you be looking for? You'd be looking for basic answers to your question. And you'd be looking for having a pleasant conversation that this is someone that you want to work with and that you're excited to embark on their journey with them. Right? And so a lot of what I'm looking for in an interview is like, can I have a productive conversation with this person? And if someone goes in there and like spits out this like memorized paragraph of text about AI something, that's like weird. That's not like an organic conversation of someone you might want to work with. That's someone going in there that clearly read way too many blog posts and spent way too much time preparing and is like kind of not understanding the context of the conversation, which is, hey, like let's have a conversation about your company. Instead, they're just like spouting nonsense at us. Okay. And I feel like that's a consequence of people reading too many blog posts about this adversarial process. Because the fact is when we fund a company, we are now working really closely with that company forever. The founders in your group, they get your cell phone number. They call you all the time. They text you all the time. Like these become people that are really important member of your life. And the people that I fund, like this lasts a long time. And so I just want you to know from our perspective, we're just trying to get a feel of like, okay, like are we ready to really work with this company and get super involved? And so, you know, have that compassion for the people on the other side of the table versus making it really like a strange situation where it feels unnecessarily, I don't know, memorized and painful for us on the other side of the table. And again, like, I think sometimes people try to manipulate the process, and I don't. If we get any hint that you're trying to do something weird, again, that's not a great, that doesn't engender trust. I think that's the word. We're looking for trustworthiness in a sense that we're getting to know the real you in those things. So let's talk about a successful interview. Interviews do go really fast, and they're intense. And the reason they're fast and intense is we're trying to pull all the information out of you quickly, and there's not a ton of time. And so it's not an attempt to trip you up. It's simply that that's how much time we have, and we're trying to learn as much as we can. Successful interviews, the founders demonstrate a mastery of their own business. They can talk about what they're working on. They know their own numbers. They know how many users they have. They know what their plans are. They know what their equity split is. Like all the things that are in the application, they are like, yeah, I can talk about that. Like, oh, I have a question. When you said this about that in your application, what did you mean? Oh, yeah, I have an answer to that. Like, we're just looking for you to clarify things that we may not have understood from the application. And so there's no such thing as a correct answer. This is not a quiz show. This is not a beat the interviewers at their own game. This is a legit, we're just trying to understand what you're doing. Another thing is we know how risky this is and we know how slim the odds are in an interview are to succeed. And so if you come in there being like, everything's great, everything's perfect. I have it all figured out. I'm confident. Like we're definitely going to be successful. I promise. Like, okay, that's not actually good. Like it denotes a lack of self-awareness. And so again, if you over practice for these things and you think your job is to come in there and tell us how you have everything figured out and you're a genius and your whole team is geniuses and like, it's like, you cannot lose. Not a great sign in an interview, right? So a good idea of what is hard about the business and what the challenges are is expected and recommended versus the things where you do have, you know, where you do know what you're doing. Does that make sense? So yeah, like overconfidence, not necessarily a great. You don't see this in successful interviews. You see self-aware founders. If you are interviewed and not selected, we send an email with some feedback. Usually the feedback is focused on a single thing, which is what we are most concerned about or not convinced about in the interview. And it's pretty transparent and straightforward. And if you take that feedback and you go work on it and you apply next batch and you show how you either disprove the feedback or addressed it, that is highly recommended and that's totally a great way to get into YC. You see what I'm saying? Like sometimes people get these emails and then you never hear from them again or they get really angry or something and argue with you. But you can either prove it and show that the feedback is invalid. Like, hey, we're worried about your growth strategy, blah, blah, blah. We'll go prove it. Yeah, we did grow. Here's what we did. We love that. We'd love to be disproven. Or, hey, you were right about the growth strategy. And so here's the changes we made. That's great things way to take this feedback into account, is demonstrate either why it was not valid or that you've addressed it. Applying to YC is actually really straightforward and well-documented, and intentionally so. So there are not a lot of secrets, and we're not looking for people to do too much tricky stuff. The more you can just like stay, make it super clear, tell a super clear story like I talked about earlier, then you're going to do great. And I would also argue the skills that you need to successfully apply are broadly applicable to what it takes to be a great founder. If you're going to talk to reporters, if you're going to be talking to other investors, if you're going to be talking to employees, if you're going to be talking to customers, having all the skills that we mentioned earlier that you would want to see in an interview or an application, I think are extremely useful. And then final point, if you have questions and the question is with a form, should I apply dot, dot, dot, most likely the answer is yes. And just always think about and reflect on if you're being the barrier to setting yourself up to being lucky or having fortunate things happen to you and and optimize towards saying yes to things like this. I think it'll help you in general as a founder. Great. Thanks so much. Thank you.