 Hey, how's it going? This is Craig Cannon, and you're listening to Y Combinator's podcast. So today we have an uncut interview from the Masters of Scale podcast. And in it, Reid Hoffman, the co-founder of LinkedIn, interviews Sam Altman. All right, here we go. So I'm here with Sam Altman, president of Y Combinator, who is a good friend and has been involved in many scaling things. Let's start with your entrepreneurial, like what got you in entrepreneurship? How you started Loopd, why you started Loopd? Yeah, first of all thank you for having me here. I fell into it accidentally. I went to college to be a computer programmer. I knew that was what I wanted to do. And I started college after the dot-com bubble had bust, and so startups were not something on anyone's mind. In fact, I remember one of the things I was surprised by as a freshman in college was that I thought people would still be excited about startups, and if you said you were working on a startup, people sort of laughed at you in a not nice way. And I actually didn't want to work on a startup. I worked my summer after my freshman year in the Stanford CS department as a researcher, and I loved that. And out of that grew a project which eventually developed into Looped. But it started as just a project that we worked on sort of like after class and at night. And it was not, it would not have been a startup if it were not for Y Combinator. So it kind of got to the point where we had worked on it during a spring quarter. And it was really fun. I'm very ashamed to say that I had been planning to go be an intern at Goldman Sachs that summer. I accepted a job offer. And I realized that was much more fun. There were three of us working on this project. And we all kind of knew who Paul Graham was. We had followed him online. And he posted this thing saying like, Hey, not excited about your summer job. Like come hack on your project and you can make a startup. And, you know, that seemed like it would be more fun than being an investment banker. So we applied to YC and flew out and interviewed and got funded. We were actually the first company ever funded by YC. And that was how, then it just kept going. And is there anything that, I mean, that's the very beginning. Is there anything from now having done Looped and a bunch of things we're going to get into that if you could call that younger self of yours going into YC, that you would tell yourself to do differently? Like key things. that you would tell yourself to do differently? Like key things. Well, I think one general thing that I didn't understand then and learned pretty quickly but would have saved me quite a bit of heartache is about how to calibrate risk. I think most people worry way too much about risk. You know, when you're young and you have nothing to lose is absolutely the time to take risk. And it's the time, unfortunately, that most people have the most risk averse in their lives. They need to save. They just want to work for a few years, build up savings. Then they're going to start up. They want to do what their parents want, whatever. And I ended up in the right place, but it could have gone either way. And place but it could have gone either way and I was very totally stupidly nervous about the risk and so this idea that most things are not nearly as risky as they seem is a powerful one and one that I always try to tell people in that position you know you're like a poor college student with no money and no reputation if you do a startup and fail you're like two years older with no money and no reputation, and if you do a startup and fail, you're like two years older with no money and no reputation, and it's fine. It's actually much harder to wait and let your life ramp up and then do it. So that's one thing. I think another thing is, well, I don't even think I'm super easy to work with today, but I was sort of infamously difficult to work with when I was 18 or 19. And I would have put more effort into trying to be better about that. And what specifically would you have done to be easier to work with? I think a lot of it is how you set and communicate expectations with others and also realizing that if you're the founder of the company and you want to work 100 hours a week and be super focused and productive, that's cool, but most other people you hire, especially as you get bigger, have other lives and you need to understand that. Again, everyone learns this lesson quickly, but it would have saved some pain along the way if I had learned it earlier. And then the other thing that I think I got wrong and 19-year-old starting companies often get wrong is because they evolve fairly organically from projects, you never take the time to realize, like, wow, this has become, all of a sudden I'm running this company with 10 people and we're doing this and we've raised all this money. Do I really believe that this is going to be a market that will support a giant company? And I think there is a checkpoint, several checkpoints along the way, where people don't get that enough thought and how do you um think about how do you think that they should make those checkpoints because you know from other conversations i know that both you and i think this whole total addressable market tam thing is frequently very illusory yeah yeah i think uh you know the most interesting companies start with a TAM of nearly zero. And it's like very bad investors are the ones that are super focused on the TAM of today. Very good investors are focused on the TAM of 10 years from now. The thing that I have seen be most predictive for TAM as total addressable market, the thing that I have seen be most predictable for a large TAM down the road is how much the people that are using it today use it and love it. So one of the things that was obvious when people got iPhones, even though like, you know, there are only a few million of the first iPhone that sold them, there's people that had them use them every day and love them. And it became people that had them, used them every day, and loved them. And it became their most precious item. I remember shortly after the iPhone came out, I was in a developing world country that was really quite poor. And people had nothing except they all had a smartphone. And people, once they had one, you read these statistics and people need to do some lightweight journalism about would you rather give up your smartphone or X, and it doesn't really matter what X is, they're going to keep the smartphone. And so I think you could have predicted with a lot of certainty, and many people did, that this was going to be a large market. It was small in 2008, 2007, but it was guaranteed that it was going to grow very large market. It was small in 2008, 2007, but it was guaranteed that it was going to grow very quickly because of how much people loved it. The internet in the early days was the same thing. And I think a lot of other trends, people jump on too early because a lot of people dabble but put it on the shelf. A lot of people have bought VR headsets and then put them on the shelf. Doesn't mean that VR will not be big someday, but I don't think you can make a high conviction bet on starting a VR company today, or at least that the TAM will be huge. It still feels like we're at the Palm Pilot, not the iPhone era. For those who remember Palm Pilots. Yeah. I have one still that i got when it was a ridiculous thing to have a palm pilot 7 it was the internet connected one and uh i loved it but other people didn't and i thought that was sort of it's you can it was very easy to tell the difference between the reaction to that and the iphone i think you probably know this but you know the first use case for paypal was splitting the dinner check on Palm Pilots. I do know that. And apparently, like, Levchin had set it up so that it could only happen once because it was actually cryptographically secure. And he stayed up for four nights in a row or something in this demo. And the camera didn't work. And they wanted to do it again. Yeah. And they only had two that it worked on. Yeah. It was kind of crazy. And we did the closing of the first financing on it in bucks. Super entertaining. Yes. Classic Silicon Valley stuff. So Loops, then how did you get to YC? So I ran Loops for seven years. We got acquired. And I was trying to figure out what I wanted to do next. And I decided I was going to partly take a mid-career sabbatical, race cars, fly airplanes, travel the world, all that kind of stuff, but that I didn't want to totally disengage from working and that I would try to invest for a while. So I took the money I made from Looped, and I also raised some outside capital, and I became a sort of very traditional seed investor. some outside capital and I became a sort of very traditional seed investor. I had invested a little bit during Looped, but very small checks. Well, that was possible back in the day, because the valuations were so much lower and the company raised so much less money. I remember in 2000, I guess it was 2010, I invested in Stripe, and I had like $17,000 in my bank account at the time, maybe 2009, and I invested like $15,000 in Stripe, and you know, it was like for a meaningful percentage of the company, it was just a different world, and that's kind of like, as a founder, not making much money, kind of, that was sort of the size of check you could do, but it was still possible to like, a year make an angel investment as a founder. And now I just think you can't because the amounts of money and seed runs have gone up so much. But because it was a different world, I had invested a little bit during Loopt. I think I made three investments and I thought I liked it. So I was like, 2012 to 2013. And I turned out to be fairly good at it, but I didn't like it at all. And I think you just have to try things to know, but it turned out that I don't want to be a seed investor or a VC. I liked running a company. I did not like being on the sidelines. I didn't get the adrenaline rush I get out of being in the trenches of running a company, which I think is something that a lot of founders miss when they start investing. You know, you figure out an approach to this I like for investors, which is continue to be very involved with operating one company. And I think that's a model that is very underexplored and we'll see more of. So, but anyway, I did this and I was like, you know what, that was fun. And it did pretty well. I think it's like a ridiculously highly compensated job. But I didn't want to keep doing it. And I was thinking about things I wanted to do. And Paul Graham sort of jokingly said a number of times over the years that I'm going to retire and you should take over the YC. said a number of times over the years that I'm going to retire and you should take over YC. I had kind of bucketed that in my head in the, you know, this is investing and I don't like investing. But I started talking to him about that more seriously. I was looking at two other things. I was going to... Goldman Sachs? No, I was thinking about going to run a big public company or start a company that I had been excited about for a while. And the more, but I, if I was like, I'm really going to think hard about what I want to do. And YC seemed like such a promising and underutilized thing and so important to what I cared about. Or at least I realized that there was this set of like four or five things that I really deeply cared about, and YC had the best platform of anything I was looking at or maybe anything in Silicon Valley to go address all of those. And that even if there were things about it that I wasn't excited about, I could get other people to do those or I could change YC in big ways. And that worked out basically as I expected, which was great. Go in a little bit more details about what the things were that were like, oh, here was the, because this is one of the things where you see the potential scale. Like I see this asset. It could be so much more in Silicon Valley. And I want to go to, which were those? So one was the kinds of companies that we were funding. I had One was the kinds of companies that we were funding. At the time, YC was mostly funding software companies, but I had a lot of conviction that we could apply the same thing that made YC work so well for software companies to companies in a lot of the areas that I cared about. And, you know, AI, synthetic biology, energy, and that the same model would work. Which now, people are like, oh yeah, hard tech, everyone wants to invest in hard tech. By the time, it was like, this is a really dumb thing. One of the things that is funny as a side note, and just as a note to anyone that tries to do anything where you take a company in a different direction or scale it, is that it is always funny to sort of like read the articles from the same journalists that when you say you're going to do this thing say like sam is crazy completely unqualified this is not going to work yc is going to die like going after hard tech companies is so stupid to like a year 14 months later you know this is great like sam is a genius it was like predestined he was going to take over yc you know, this is great. Like, Sam is a genius. It was, like, predestined he was going to take over YC. You know, it's ridiculous that YC is doing any software companies at all. It's all this other stuff. So I think you just have to ignore all of that and just say, like, I have a high-level conviction. We're going to try this thing. And most people will tell you it's not going to work if it's something new, most people are afraid of things that are new. And you just do it. And as long as it's not, again, risk is miscalibrated. It's probably not that risky, probably won't kill the company, and probably undervalued if everyone else says it's stupid. So we were able to do that. And the first thing was expand YC into all these different directions. I think the greatest companies are created on kind of the bleeding edge of what people are working on and by 2014 there were already a lot of people making mobile apps. There will still be great mobile app companies I'm sure but it was like fish in a barrel in some of these other areas. We were able to just go pick out in the world the best quantum computing company, the best self-driving company, which recently got acquired by GM, the best nuclear fusion company, the best synthetic biology company, just all the way down the list. And no one was competing to invest in those companies. Meanwhile, like another photo sharing company, we have to go do a lot of work to convince them to do YC because they're like, well, every VC in Sandal Road wants to give me $30 million. So that was one area where we expanded. Another was just more companies. We significantly upped the number of companies we fund every year. To what, for example? Maybe it was like from 100 to 280, something like that now. We expanded geographies that we plan on. We now fund companies from all over the world, which is a logistical nightmare, but I think really good for the kind of companies we can serve. We raised a later stage fund, because one of the other things we realized, especially with the hard tech companies, you can fund a lot of these companies. At some point, they need to raise $50 or $100 million. Not a lot of investors are doing that so to support those companies we needed this large pool of capital. We wanted to, on the other side, really increase the top of our funnel. We started teaching MOOCs basically. We said, hey, we're going to try to distill how to start a startup onto a class and make that available around the world. We started a research lab. There are some things that are important to us and our mission and our vision for the world that don't fit as a for-profit company that we still want to do. But basically, fundamentally, YC is sort of this new university. We are a collection of smart people that have some sort of shared vision of the world we'd like to build and the tools that we think work to get there and that's a very flexible structure so we've been able to do all these things and in terms of the efforts to scale YC is like this global geography there's early and late stage there's research that you also and are taking nonprofits through YC as well as part of it. When you think about and you say, okay, I saw this potential to have a massive scale impact and I went in, which were the things that you kind of wish you had doubled down on earlier and which are the things that you would have changed in that scaling process? in that scaling process? We've kind of... I think one thing that is really... The two things that are really important to get right when you're going to try to scale an organization a lot. One is a very clear vision and culture, and the other is a reasonably clear org structure. I think we were good on the the vision and culture um you know this idea that like yc wants to produce the most innovation in the world and then do that in such a way we make the future great for everyone not for seven people um and and we've stayed we kind of talked when I took over about that, the sort of the mission, the vision, the culture to support that. And I think we've done a very good job of staying true to that. And one thing I'm particularly proud of the organization on is without me having to legislate it, if there's a company we look at where we think we'd make a lot of money but we think it might be bad for the world, we won't touch it, which most other investment firms unfortunately have a hard time with. But we do things that other investment firms would not, like fund basic income research or support OpenAI or fund nonprofits. So I think we got that right early. And getting that right is really critical, because if everyone believes the same thing, there's a lot less conflict. And also, if people are going to kind of organically march in the right direction, you just need a lot less organization. You just need some. And I think we could have put a better structure in place earlier. We've gone through a few iterations. I think we now have one that's good, but initially tried to sort of just have no structure at all. And that would have worked if we had stayed at like 10 people working at YC, which is what it was when I took over. Falled apart, fell apart pretty quickly at 30, 40 people, something like that. Was it a deliberate attempt at holacracy, or was it just kind of like oh let's try not to bother with uh definitely not a deliberate attempt at holacracy which i don't think i'm a fan of from what i know about it it was uh it was just like it you know the the growth in the number of people of an organization sneaks up on you and you can completely get away without any structure until you can't and it's a pretty quick flip. Got it. And what do you think about, was there anything you would have applied capital to more fiercely or anything that you would have said, I should have recruited these people into the organization earlier? We run super light on capital. And I think that is to our credit. So there are all these things that would have been smoother and better if we had applied more capital to. But the trade-off is it would have hurt our culture. And that reflects on companies like i kind of like that when entrepreneurs come to yc they drive to like honestly a kind of shitty industrial part of mountain view and they walk into this building that looks like it's that we did a nice job on the inside but it's like nice in the very you've been i have it's nice in the very cheap sense like there's no like gleaming marble or you know what you see on sandhill road a lot yeah um and we we just like you know we still have like a cfo that yells at people if she finds that there was a 50 cheaper flight to buy and so in all of these in all these these specific instances, we could have applied more money to problems and it would have helped. But I think there is something culturally important to us about frugality because we want that reflected in our startups and our startups have the kind of bond with us where they reflect what we do. So I think on the whole, it is good we did not try to go solve a bunch of problems by mega amounts of capital. So let's go to the YC selection process because we're going to go into what are the lessons from YC companies. And one of the things I learned from the New Yorker profile, which I had no idea because I've never seen it, is that you occasionally bring a sword in with you to interviewing entrepreneurs. No, that's not true. No? Well, either they wrote that wrong. No. I think I remember what happened. I do like, I love engineering history of all sorts. I kind of collect these things that like Concorde engines and just like things I think are important engineering milestones. So I had bought this Brown's Age sword and I was in office hours and the reporter was sitting with me and office hours are kind of this drudgery at some times where you're doing this like, you know, it's the 16th meeting of the day and I needed some energy. And so when it was phone call, and the sword had just came, beautiful Bronze Age sword, and it had just arrived, and I'd been waiting for this thing, you know, like, it had, like, flown over from Europe, and it was in this big crate, and I got it out, and it was stunning, perfect, and, I you do is pick it up and swing it and see how it's weighted, how it feels. This particular one had the nicks of where it hit people's helmets a couple thousand years ago. It was a little dark. Or maybe bones, right? Too much of a nick for a bone. Too deep of a nick in the middle. So I was so excited. i was on the phone with and it was kind of like a not particularly exciting conversation and so i picked it up when we were like in my house and i just started like while i was on the speakerphone like swinging it around and like fighting this pretend enemy because i was so excited i just got this i've been waiting for it for so long and i didn't realize till i put it down at the end like that was probably really dumb and it's probably going to make it into the profile because the reporter was sitting there watching kind of just forget after someone's with you for weeks um but i have never swung a sword at someone during an interview process yes it was less the swinging a sword and more did you like bring props with you to the interviews no no this was just in my house and i had just arrived we don't bring props got it so tell me a little bit about the YC interview process this is one of the things you've actually really refined over the years in order to get really good yeah um there are a few big ideas that actually a very small number of big ideas that make YC work. And one of them is that there is a giant amount of arbitrage left because most investors in Silicon Valley will only fund you with an intro, or they'll only talk to you with an intro. And it is, honestly, I think, by and large, a fairly insular network. And one of the ideas with YC is if we can build a process that's not too painful, where we can look at everyone smart that wants funding from us, that we can unlock a huge amount of value. Because no one else does that. Or at the time, no one else did that. Now other people do it, but I don't think they do it as well. Or we have a brand or something where I think we still have an edge. But we are willing to look at tens of thousands of people a year with no intro, that don't know us. And there's a lot of really smart people that just because of the circumstance they were born into or the country or whatever, aren't plugged into the Silicon Valley network. And we are a bridge to that, and I think we get compensated for that. But that idea that you should have an open application and you shouldn't require an intro is great. Now, doing it well in practice is hard because it is very tiring and very draining to talk to 40,000 people a year. So we have a lot of people, a lot of software. This is like a secret. I don't even mind telling something. Other people will copy it well. We spend so much time and money building really great internal software this is like a secret, I don't even mind telling something, other people will copy it well. We spent so much time and money building really great internal software that only like 50 people in the world use. And yet it lets us run this process that no one else can run. And you videotape them and you cross-check the results. Yeah, we cross-check the results. We watch companies that we say yes or no to. When we say yes to a company, we have to say how strong of a yes it is, how well we think they're going to do. And we really sweat every mistake. And so tell me also, before we get to some of the interesting companies, about your going global efforts. Like what were the things to scale to more than just the Silicon Valley network? Well, the number one best thing we did for that was the MOOC, the class that we teach. That got incredible distribution worldwide. And then that brought people from these other countries. And what we find is that when we fund someone from another country or city for the first time, they go back and then everybody else there is like, well, get into YC now it's not so hard and so we just see this there's like this uh you know just like this there's this incredible chain reaction effect once we get the first good company in a new area we also do we get on planes a lot you know like partners just go fly around the world and give talks and meet companies. That is phenomenally effective. It won't be too much longer until we have more companies applying from outside the U.S. than inside the U.S. And then you also were doing a fellows program at some point? Yes. It was sort of like an on-ramp version to YC. One of the things we realized is there was more demand for that program than we were ever going to fill. We were shocked. We thought we were going to get like 200 applications for the first fellowship. We got like 7,000. This is not going to work as designed. So we have now evolved that and the class that we've taught together into this new thing that we're going to try next year for the first time, which is halfway between a lecture series and a Y Combinator class, where people have individual advisors and office hours, and they have to report their metrics every week. But they can do it remotely, and anyone can do it. So now let's go to a couple of the kind of great, you know, just amazing YC companies. There's a number. We talked about Stripe a little earlier as one of your earlier investors. And I think you now, I actually hadn't realized the background economics. I think you now, you were more edgy in your angel investment than I was, because I started pretty early with kind of the crazy, like, how much are your savings? But I think you had a higher percentage of your savings that you were deploying. Risk management has never been my strongest suit. Yeah, so I think I went up to 50% not, I think that was roughly somewhere around 90. It's different when you have no money at all though, like yeah, I mean there's just some level beyond which the percentage doesn't matter. Yeah, and so let's talk about a few of them and what are the key kind of lessons for how the scaling, like what we have learned in Waikamana and Silicon Valley about how to scale. And let's start with Stripe, where obviously the Colisons are amazing and the company is doing spectacularly well. Like what did it look like in the early days? Why did you think it'd be great? What did they learn about how to scale? So I think the number one lesson that I have learned or that YC has learned about how to scale well is that the first thing you have to do is build a product that is so good, people spontaneously want to use it and tell their friends about it. And if you can do that, you still have to blitz scale, it's the easy kind it's you have too much demand the hard kind of blitz scaling is where you you you try to start scaling up before the product is really great and then most of your effort in scaling is to generate demand so i think the number one most important insight about how to blitz scale is that the good kind of blitz scaling is when you are not having to generate demand as you go, but that you first got the product right. And in many of these cases, Stripe, Dropbox, Airbnb, they took a long time to get the product right, but they were obsessed with that. And then when they did, all their effort is, okay, we have so much demand that without much more effort we know this is going to keep growing 20 30 a month for years that's a real problem it's a high class problem but it's still a real problem um how do we build that so that is the kind of scaling that works and it has generated facebook google i mean a lot know, like, it's the same playbook. I think the kind of blitzscaling that we have seen go badly is we have a mediocre product, we have raised hundreds of millions of dollars, and RVC is beating down our throats to hire more salespeople to grow faster. Any particular examples? I don't want to name names. There's so many to pick from. Thankfully, most of them are not YC. One thing that is pretty good, and again, a few exceptions to this, we try to beat that idea out of people during YC. And thus, most of the mistakes in Silicon Valley of that sort in the last decade have not been ours. mistakes in Silicon Valley of that sort in the last decade if not ours one interesting thing that I think is a slight variant on the theory that you just gave that applies to Airbnb is actually in fact one of the things I think I've learned about some scaling things is that you initially have to do things that don't scale in order to get into scaling. And so actually, in fact, they spent a bunch of time kind of out in the desert, not getting transactions. And I think it was actually Paul Graham who gave him this advice. He said, look, go to New York. Go door to door. Explain to people. Just get them into it. Yeah. Paul Graham wrote an essay out of that experience and a Stripe experience, someone we can talk about. The essay is called Do Things That Don't Scale. And I think it is in the top four most important essays for a new founder to read. a new founder to read um the this is almost universal among not perfectly but almost universal among our best companies where initially you have to go get users manually or do things that you could never do with 10 million users and it's actually a sign of bad entrepreneurs in my experience when people that have a company with no users, no product, and no revenue say they won't do something because, well, that's not going to scale. What that means is I am lazy and don't want to go get my hands dirty or I think knocking on doors and taking photos is below me. The Airbnb guys' case. Which is not what they did. They actually went and did all those things. Exactly, exactly. So which is not what they did they actually went and did all those things exactly exactly so uh i think the way that you build a really great product is to be very close to your customers and the way that you do that is to do things that don't scale and so i think it's super important i think, again, like a critical piece of still, even in 2016 in Silicon Valley, still not fully internalized advice. Are there any cases that come to mind for you that where someone built a really good product that had that kind of at least potential for love that actually failed to scale? love that actually failed to scale? Twitter is the example everyone uses. And I say, well, if the company had scaled better, it would have been a $200 billion company, not a $20 billion company, or what a pen or whatever it's worth now. And if Twitter is the best example you can find that is not working, that still says something. There are others. It's more often where I think the founders were really good at building a product, but then not good at all at building a company. So it never even got far into the public conscious. But it's rare. It happens surprisingly rarely. What advice do you give YC founders on hiring to scale? Vinod Khosla has this soundbite that I have always loved, which is that the team you build is the company you build. And a lot of founders, particularly young founders, but a lot of founders are afraid to hire people that are a lot more competent or experienced than they are. And there's some truth to this because a lot of times hiring really experienced people backfires and they actually try not to be good at all. But it can be magic when it works right. and they actually turn out not to be good at all. But it can be magic when it works right. And the thing that I think you need most to scale well and quickly is two or three senior team members that you trust and that are really good at scaling an organization, especially if you're a first-time CEO. So the recipe that I think has worked pretty well in Silicon Valley is a relatively inexperienced CEO who identifies a small number of direct reports who are really great at scaling things up pretty quickly and know how to do that. And if you don't hire those people, generally I think you kind of just will suffer and do you NYC teach the company's anything about culture building not enough we've we do do some of that in the early days which I think we're fairly good at but there's a lot of culture building is not this thing that you do in the first three months of your life and then stop. Actually gets a lot more important as the company gets well out of YC. One of the things that we're thinking about doing at YC is programs to continue to teach our founders more, well after out of YC. The model used to be that you would go through YC and then you'd get a board member who would only take eight boards and would spend a couple of days a month with you and do things like help you build the culture as the company scales. But just the dynamic of Silicon Valley Venture has changed so much and people, there's so many more companies and more deals per investor that I think a lot of these things that used to get taught one-on-one by a board member now just don't get taught at all. And so I'm interested in terms of what we can do to teach that to our alumni. One thing I think you said during a Stanford seminar is what a founder needs is something like idea times product times execution times team times luck. Yeah. Is there any particular or actually where luck is a random number between zero and ten thousand is there uh anything in particular you think that you should that people should keep in mind about how to play luck how to make luck how to how to factor luck into the strategy yeah look, look, I think there are a lot of ways that you can manipulate the outcome. And there's a lot of things you can do unrelated to luck. And certainly you can be really lucky, but if you don't do those other things well, the company will still be worth nothing or very little. But I think all those other things, like trying to come up with a really good idea and trying to pick a market that's going to be really big, and trying to hire a great team, and trying to execute really well, those are all the ways you minimize the effect of luck. That said, it's a chaotic universe. So sure, I think you can do a whole lot to minimize that, and you should. I think I also generally believe that if you do really well on those four categories, even if the first or the second company doesn't work out, you can kind of tell people that are eventually going to be successful at something. And sometimes it takes a lot of tries. Yeah, if they keep at it, especially. One of the things I is a the way that i think about managing luck is like one of the things yc provides founders which is really good is a network and it's the use of the network both for seeking opportunity and also seeking risk assessment right like what do you think you know like one of the pieces of advice i give founders is to constantly go to smart people and say what do you think what landmines might i run to what risks might might I have? Not just, do you like my thing or not? Cause I'm sitting with you. I'm probably going to say, Oh, you sure? Your thing's great. Unless I'm, you know, deliberately trying to help you by being edged. Um, what do you think about those as, as key things for luck management? Yeah, I, I, I, I, I agree. Um, I think that, you know, the way I have always tried to think about it for myself is that luck is a big factor, but I'm going to keep working, and eventually, you know, because it's a random variable, it's going to swing my way. And I think that's roughly the right mindset to have if you don't acknowledge the role of luck at all like i think you're wrong in a dangerous way where you sort of just are not a great human and if you can't look and say i got really lucky at some points and other people probably bad but if you're also like well it's all about luck and you know i have no chance the world is against me and i'm just going to sit here and complain that's not going to work either so i think yeah the roughly correct mindset is luck is important but i'm eventually going to get lucky and i'm going to just work really hard until i do that may be the uh one of the better definitions of optimism that actually i think i've heard good so a little bit of the, one of the challenges of being the president of a scale thing is that all of a sudden the demands on your time go ferocious, right? So for example, you get a deluge of email looking for meeting requests. How do you manage that? I don't think it's rude to send someone an email asking to meet. I also don't think it's rude not to respond or to write a quick thanks, but I'm just super busy. I still don't think I manage this well because I still feel more guilty than I should about not doing things, but I try to be pretty rigorous about not doing what I don't want to do. I think everyone finds their own productivity systems that work well for them. I'm a list person, so I make lists every day of what I need to get done, and I make annual lists of the big picture things I want to do. And because YC is a services organization, I've just accepted that I'm going to be very interrupt-driven and that most of my time is going to be dynamically responsive to our companies that need help. And I just accept that that's our fundamental job. I'm going to devote 50% to 60% of my time to that, and I just leave it empty because I don't know when it's going to come up. But other than that, I just don't do stuff I don't want to do. And I think this is an underutilized strategy because it feels rude. And again, I still, because it feels rude, don't do nearly as good of a job of it as I would like. I think the other answer that no one likes to give is just work a lot. Just do a lot of hours. People talk about working smarter all they want. There's nothing that makes up for working smarter and a lot of hours. What got you into coding? I don't remember not being into coding, honestly. I got a computer for my eighth birthday and I already knew how to program it very rudimentary programming so I learned at some point before that at school but I don't remember it was just yeah the the New Yorker thought it was analyzing area codes I mean New Yorker writers come up with a lot of theories i don't think are particularly right including that one yeah yeah got it because i was curious but that was in the category of things i didn't know in addition to the uh amateur swordsman no i i i um you know like i think i have a brain that is naturally inclined to enjoy things like puzzles and math and coding is like a fun way to do that uh and then for the uh last personal question of this sort um many people have noted you have an affinity for cargo shorts i'm not wearing them today i know it's cold outside yes so when it's warm, cargo shorts. And is there any particular reason cargo shorts? Honestly, I don't think they're that ugly and I find them incredibly convenient. Like I, I, you can like put a lot of stuff. Like I like to, I'd still be paperback books. I like paperback books. I like to carry well in cargo pockets. I carry like computer chargers, cables. They're just like, you know, efficient. Why people care about that so much, I can't tell you. I don't know either, but it's somewhat your Batman utility belt. Yeah, you just can carry a lot of stuff. Okay, so moving back to blitzscaling and the scaling, you and I have talked a bunch about what are the kind of theories of what makes Silicon Valley unique is this networks of talent and networks of practice in order to scale things quickly. networks of talent and networks of practice in order to scale things quickly. And some of that is to actually build a product that actually goes fairly global pretty quickly. Is there anything in the theories that I've been doing that you think I currently have a hole in? Because you're familiar with the whole range. Is there anything you would critique the current blitzscaling theory? Well, I certainly agree incredibly strongly that the magic of Silicon Valley is the dense network of people that have this knowledge, these connections, the willingness to help for free. And just all of, you know, the network is so dense that all the different pieces you need of, which there are a lot to, to blitz scale are all together. And if I disagree with anything, it would be how quickly that will spread outside of Silicon Valley. And I think it may happen relatively quickly. So there's still a question of how long, there's still a question of how long does Silicon Valley remain the absolute dominant force in startups. And I think at this point, a lot of that knowledge and talent and people and capital and cultural mindshare and whatever is seeping out in a way that I think is good. and capital and cultural mindshare and whatever is seeping out in a way that i think is good um and so i don't know if it's against the theory but it would at least suggest a relative weakening of silicon valley so let me uh let's let's do one more version of this because i think it's useful so the central theory is say actually in fact part of what Silicon Valley itself has is network effects, where it's network effects of the talent, network effects of knowledge sharing, network effects of company and business formation. And so therefore, creating another Silicon Valley or other Silicon Valleys is actually going to be super difficult because you need to have that network effect density in order to make it happen. And your counter theory is actually, in fact, that the networks are actually being built in those places because the culture of entrepreneurship is spreading. Yes. Or that they, yeah, I think it's just spreading. And do you think that the question of like scale talent and the ability to kind of play the scale games is sufficiently spreading well i think if you like look at beijing it's spreading there yeah although actually china is its own case there's blitzscaling the silicon valley is blitzscaling in china maybe la is more interesting case um la is not silicon. It feels like one of the things I've always said that makes Silicon Valley work is that startups are the number one thing. In New York, it's finance. In D.C., it's politics. In L.A., it's media. And it's still definitely not startups. But it's interesting that startups, there's a number of startups in L.A., Snap most probably, but others that are doing really well. that startups, there's a number of startups in LA, Snap most probably, but others that are doing really well. In fact, I bet there's more billion plus dollar companies in LA in the last few years than New York, or at least more total market cap. And LA has not been traditionally thought of as a hotspot for startups at all. And yet somehow while everyone was talking about New York as the second Silicon Valley, I think there's more evidence of that in other cities. LA, Seattle. And I think that's kind of an interesting example of where it was close enough, or it is close enough that people fly back and forth all the time. They move. You can get people to move from Silicon Valley down to L.A. And at this point, I'd say you have that, whatever that is, that density of network and talent and capital and knowledge and everything else in L.A. And that happened relatively quickly. Actually, that part of the network extension, because when I think about how to build more Silicon Valleys, it's the connectivity of Silicon Valley, which is one of the things I think YC does so well Yeah, actually part of how you get it to spread for sure So I'm gonna go to lightning round unless there's anything else Something that's in your pocket beside your phone Very often nothing honestly, I I very often nothing honestly uh i i have been trying to evolve down to just a phone i still carry like one credit card and like a driver's license sometimes but very often nothing but a phone artificial intelligence fills you with hope or dread pick one hope your favorite place to think big I'm pretty happy on any hike I don't think big in an office very well although sometimes if I look at the biggest ideas in the last few years my office at home I think I manage to get the feeling of a good office down is really important for good thought, and I think I finally managed to do it at my house. And I think people get this wrong all the time. What you actually want is a small, this is a famous, I think it's a Da Vinci observation, but what you actually want is a small office with really good natural light and comfortable chairs. And I finally got that. But I'm a big hiker, and I like being out by myself or with friends, but way away from any structures. I'm just beginning, because we moved headquarters at LinkedIn, to actually condition the office I want, and it's going to have a lot of custom wood when I get there. It's not there yet. When I do, I'll have you come over, but it's to give it the tactile feel. I saw what I thought recently was the perfect office, which was a Japanese tea house, basically, with beautiful custom wood by itself in a forest. It was a glass wood, you know, a couch, a table. That was it. Perhaps post ranch in. All right. What job would you take if you were out of work tomorrow? I would just sleep for a while if I were out of work tomorrow and not think about work. But a few months later... Actually, I would go study physics. And then I would get some job related to that, probably. I don't know. One object from your childhood that you could never throw away? There's a lot of those. Probably photographs, honestly. But I still have my original computer and the stuffed animal I slept with when I was a kid. I don't think I could throw away those either uh what's one question no one has ever asked you i don't know if there's an interesting one what's the one outstanding, talented job candidate that got away? Someone that I was going to hire? Well, in our line of work, it's more like that, you know, most of the people, the job candidates are founders that we didn't fund. And that's actually what keeps me up at night. the people the job candidates are founders that we didn't fund and uh that's actually what keeps me up at night it's not even the famous ones like we had not many times but there have been a few times where we funded someone and they went on to do really well but that's not the interesting failure mode to me interesting failure mode to me is people that we said no to that would have been the next Zuckerberg or Chesky or whatever. And there are three or four people over the years that I have turned down at interviews that didn't go on to do anything successful. But it still eats at me, and I'm pretty sure I was wrong in a big way. The one thing you wish your phone could do? thing you wish your phone could do? I wish there was sufficiently good AI on my phone that it would only interrupt me for things I needed to see and that I could say and also that it would decide if reading something would make me more or less happy, which probably would mean it would never show me anything on Twitter. That would be an easy one. But there's a lot of other stuff where I think I would love it if it would curate what I saw better. Favorite app? Gmail, probably. Well, actually, the new Gmail app sucks, the old Gmail app, I would say. All-time favorite book? Oh, that's a hard one. Well, I can't pick one all time favorite book. My favorite book of the year is a book called Pandemonium, which is basically a subtitle of something like the coming of the machine age from 1650 to 1850. And it was just what it was like when people who had never seen a machine before had to think about the future of automation. And incredible read. Best movie ever? I'm not a huge movie person. I love all the Star Wars movies I love Dark Night I love the American Beauty to pick something that is not a sci-fi movie I'm not I'm not a huge movie watcher messy desk or clean desk I don't really do a desk I work on a couch most of the time. No desk. Is there a single poem or passage from literature that you've memorized? I've memorized a lot of poems and a lot of literature. One image that I love that is relevant to this conversation, there's a poem called Ozymandias by Shelley. And the image is one that I think I often share with founders of a certain type. And it has been very effective in correcting bad behavior. So I will use that one. In the desert is this wreckage of a statue, this giant statue of a king that has now fallen in its ruins, and it's all by itself just in sand. And the inscription that's still visible on the statue is, my name is Ozymandias, king of kings. Look on my works, you mighty in despair. name is ozymandias king of kings look on my work see mighty in despair and there are a lot of startup founders who in the moment feel like they're the most important thing ever in the world their company is going to be incredible these are usually founders that have accomplished nothing um and that have this feeling of like forever, I'm going to be the most important person, my company's going to be the most important company, and we're going to be this huge success, and I'm king of kings, look at my works and despair. And what eventually happens to everyone is that you end up in ruins, but startups often do that pretty quickly and it's a pretty quick change of fortunes and i think keeping that image of like someday when any any statement you make like that is someday going to be in a collapsed statue in a desert um has been an effective mental image for startup founders that get way too arrogant that's great actually i may use it too uh the single greatest embarrassment of your career. I can't pick one. I mean, there's so many. One of the things that is good and bad about investing in startups is it is deeply humbling. People forget that every time you make an investment, you do it with a belief that that company is going to be successful, or at least that you're paying for positive expected value. So many investments that I have been so confident about have utterly failed, and I was so completely wrong. That doesn't actually bother me that much. The painful one is the other kind of error where you're like no this company's gonna suck and then it goes on to be really successful um and the most painful version of that of all for me is when i'm already an investor in the company they ask me to put more money into a future round and i say the price is too high and i'm not going to do it and that has happened you know many many times but that that is those are the most embarrassing errors to me. What are the techniques that you teach YC founders on triage? Because one of the key things is to let certain fires burn while you're solving others. Because startups are inherently dead at the beginning. And what do you teach them about how know kind of uh how do you go okay it's totally fine to let those fires burn while you're working on the other ones so i think um i like to draw the the matrix of and non-urgent, non-important last, but people screw up the other two. And so I like to talk about, you know, the, that you have to let the urgent and non-important things not happen or get someone else to do them. I think a lot of founders find someone on their team relatively early on that they rely on to just take care of that stuff and never think about it. So I think that's one important frame of mind. I think another one is you only have to do really well at a few things to do well, and you can do badly at a lot of things. But if you don't do well at those few things, it doesn't matter how well you do everything else. And so what you don't want to be is the founder that gets everything but building a great product perfect. And so you just have to ruthlessly prioritize, is this going to do it or not? And you want to be aware of the areas where people likely get tricked. So like going to conferences, going to like Necker Island or something, you know, these things end up being huge time wasters. And they, and, but they feel they're fun and they superficially feel like important networking or something. So we try to talk to people about here the normal tricks founders fall for that are bad uses of time. Great. Well, thanks, Sam. As always, a huge pleasure and thanks for talking with us. Thank you. All right. Thanks for listening. So as always, you can see the transcript at blog.ycombinator.com. And if you'd like to hear more from Masters of Scale, you can find them at mastersofscale.com. See you next time. you