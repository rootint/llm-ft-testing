 Simon, why in the past few years has quantum computing gotten so much attention? Right. Well, quantum computing is something that academics have been working on now for decades. But what's exciting is that it's all starting to work in the sense that what we now have in labs is getting to the regime where it can actually do stuff that we can't do by other means. So it's, you know, it's got that feeling that it's all about to happen. That said, you never know how far it is from where you are to when you've actually got a working machine until you've actually got the working machine. But we're all feeling very excited. In the field, we're excited as well. But then also people outside the field, companies, people who look for disruptive changes in technology are obviously receptive to this, and they're starting to get excited as well. And I guess it's a kind of feedback loop. But I can say that just in the last three years, we've had tons more interest from companies who come to us as academics and say, look, can we jointly work on something with you? I mean, that's really been a sea change. If we went up to companies even five years ago and said, how about investing in some research? They would say, well, we're aware of this, but it's over our horizon. Yeah. But now, you know, now we're almost having to fight them off. And was, was there a certain, you know, basic research or maybe a, an experiment that made people realize like, oh, this might be the time. Yeah. Yeah. That, that, that there is that. And so I'm a theor You probably should put that up front. They don't let me in the lab except when they've tidied everything away because my elbows tend to set them back a couple of weeks. But in the lab, researchers have been trying to get better and better control of quantum systems. They're difficult to control. So you're probably familiar with the word qubit, which is quantum bit, which is, of course, the building block of quantum technology instead of bits. But unlike bits, which are wonderfully stable and, you know, with the right technology will just sit in the zero or one for a long period of time, even years, qubits are horribly unstable. They're constantly trying to just become regular bits, which means the usual word is collapse to one option or the other. We talk about a quantum superposition, a state that's zero and one at the same time, and we can talk a bit more about what that means. But the point is, it's fragile. Qubits don't, in a sense, want to be in zero and one at the same time, or rather, their environment doesn't want them to. They are constantly trying to collapse. They're constantly going wrong. Also, when we try and control them, it's very difficult to control them precisely. So it's all about how good is your control of the quantum world. And I can't resist at this point just mentioning we're here in Oxford. The Oxford iron trappers, we might talk more about what that is, have the joint world record for the highest level of control of any quantum system of any kind. Okay. And, uh, the really tough thing is to say, how well can you control two qubits? If you think about it, if you want to make a computer, it's not enough to just control individual entities, because if they don't talk to each other, you can't have a process, an algorithm. All you've got is some kind of recording system, right? So if you could go and set the state of a bunch of individual qubits and then later come back and have a look at them, you've got a memory. But if you can make one qubit control another qubit, you've got an operation, an element of an algorithm. Gotcha. That's the really that's the hardest thing almost always because you know it's the most fancy thing now we we use the word fidelity which means how well are you doing in terms of getting your control and the oxford guys their record is 99.9 a little bit percent fidelity so one part in a thousand fidelity over what spirit period of time? Yeah, right. So that's the fidelity that it takes to do one specific operation. So for example, I got two qubits. I always use my fingers because I think of them as little arrows. I have two qubits. I tell this guy to flip only if this guy is, let's say in state one, but not if it's in state zero. Okay. So that's a story about two qubits, which should just happen. Ideally, you tell them to do that. They do it exactly like you told them to, and you move on. In practice, they won't do exactly what you told them to, because these things are very hard to control. So 99.9% is the chances essentially that they will do what they're told. And if not, then they'll do something random. You can think of it that way. Now that sounds like a lot, right? 99.9% seems like a good score in any context. But compared to conventional technologies where that number might be something like up one minus 10 to the minus 15, you know, it's insanely good in conventional technologies. That's why your software doesn't just crash all the time on your laptop, right? So whilst that number sounds good, it's actually still very challenging. Imagine you're building an algorithm. You're going to have to have a lot of these operations, right? A lot of times, one qubit will talk to another qubit in the course of doing some calculation. If one in a thousand times, it just goes wrong and yields nonsense, then if you've got more than a thousand or so operations and you will have, then something's going to go wrong. You know, you're going to get an error in your quantum program. And unless you've been very smart about how you design it, that's just going to make the answer come out nonsense. So that's the kind of problem we faced for all these years. And when I say we, I mean the actual guys in the lab, right? I've just been at the whiteboard saying, come on, guys, why isn't it working yet? So to briefly tangent on this, how long have you been theorizing about quantum computers? Well, the field has been theorizing in detail about quantum computers since the early or mid-'80s. Okay. I'm a little bit more recent than that. Right, so it was david deutsch and getting started okay and then in the 90s we okay so initially people thought this problem of control was going to be perhaps a deal breaker the thing is you see if you're running a quantum algorithm okay so if you're running a conventional algorithm you can at any time check the state of your machine because i'm going to have a look at my ones and zeros, see if they look about right. If you do that with a quantum computer, because of this idea of superposition being in many states at once, if it's not yet ready to give you the readout answer, but you just want to check to see if it looks like it's on track or if it's gone wrong, you're going to destroy the state of the computer, you know, prematurely. The act of looking for errors, naively, it would seem that it's going to actually destroy the state of the machine, right? So how can I keep on track if I'm not allowed to see? It's a bit like trying to navigate with a blindfold and you've been told a bunch of landmarks, but you can't see them, right? You're not allowed until you get to the end. So people thought, including some really substantial thinkers like Ralph Lander, thought that that might be a deal breaker. The fact that you can't check for errors, but they are going to be happening, would mean that for anything except the simplest toy calculation, you can't really get where you're going to. And in the 90s was when people, including Andy Steen, who's here, but also Peter Shaw, who's famous for one of the big algorithms, figured out the solution to this, which it sounds almost like a philosophical paradox, right? I want to be able to check and fix errors as I run a process, complicated long process. But if I look for errors, or if I ask the information whether it's in a good state, I will destroy it, right? That seems like a... So the answer is, what you do is, you use several qubits, even a large number of them, to store one, what we call logical qubit. Okay. This is the same thing that, well, it's a grander version of the same thing that happens in conventional technology. There, if you know you're going to store a lot of information and there may be some errors because you're storing vast amounts, you may use an error-correcting or an error-detecting code, which means you dedicate some of your bits to being watchdogs on the others. Okay. Now, the quantum version of that is much tougher to work out, but it's the same basic idea. Now, the quantum version of that is much tougher to work out, but it's the same basic idea. So we use a bunch of physical qubits, which might be individual atoms or superconducting loops, many different exciting hardware options. But whatever they are, you use a bunch of them to store one logical qubit. And you do it in such a way that if one of those physical qubits goes wrong, you will be able to fix that one guy by using the information that's stored in the others, essentially. So you've spread out your burden of representing the qubit over a bunch of guys. And collectively, they're more robust than they would be individually. But you're still not allowed to just look at them directly. So the real trick was to say, well, look, we'll have another bunch of qubits. We'll bring them in every so often. They'll just be in some, say, zero state. They have nothing. So they come in neutral. They come in neutral. Right. And then we do a little, we stop the main calculation, if you want to think of it this way. We pause the main computation. Okay. Without observing. Without observing. Right. Crucial. And then we bring in these extra guys and we have a little special calculation, really a special computation, which is just to look for errors. So computation takes place between the new guys who are just in a reference state and the guys you actually want to check. And what you basically do is a calculation where the question, is there an error or not, is now stored on the extra guys and they know nothing else they don't know what the main information is they just know has there been an error that's the trick now you can actually have a look at the extra guys hopefully they'll say there's no error good to go if they say there was an error they'll also tell you which guy was the problem and you can fix that guy without looking at him. Through the algorithm? Through the algorithm, if you like. Or it may be that when you measure those extra guys, they basically say, okay, I don't know what the information stored on the main qubits is, because I'm not supposed to know that. But I can tell you that qubit number three has been flipped. I don't even know what state qubit number three is, but he has, or she, has been flipped, right? That's what the extra guys tell you. Sorry, this sounds a bit technical, but it's a huge breakthrough in the field. And just to pause you very quickly. So the information you're passing through, these are qubits as well? Right. So what you have is you have your main guys who are storing some information. It may have an error. We're not allowed to look at it. You have the extra guys who come in. They're going to be part of the checking process. And then we just talk between them, doing a little calculation, little computation between them, using these two qubit gates that I was talking about. So again, errors might happen even during that process. So we have to think of all possible bad things that could happen and make sure that none of them are a deal breaker. But basically, this trick of not looking for errors where they are, but looking to one side, because you've basically done a separate little calculation that now in what we call ancilla qubits, it tells you just one thing, the one thing you do legitimately need to know, which is, is there an error? If so, where is the error? So that was a very simple idea, but very, very important. But measuring the ancilla cubits, how do you know that measurement is correct? You don't. That's a very good question, right? So it's like who guards the guards, right? I mean, if there was one thing that you could trust absolutely, that would be fantastic for us, and we'd be able to simplify all our designs and solutions. But we must assume that everything is untrustworthy. Some things are worse than others. So measurement of a single qubit might be a bit more reliable than, say, the two qubit gate, but they all have a number on them that says how dodgy they are. And yet, what you need to do is come up with an approach where there's enough protection that even if, say, the measure... So, you might falsely conclude that there was an error and there wasn't one because the measurement went wrong, right? Then you're fixing an error that didn't happen. Right. So, you basically need to construct the overall story so that that event is so rare that you can run your whole calculation and it probably won't have happened. So there's ways of checking the measurements as well. So it's layers of protection, basically. MARK MANDELBAUM- Which makes sense why error correction and the minuteness of the error, the likelihood, keeping it low is the most important part. MARK's right. So exactly so. So I mentioned this number 99.9, which I said we're very proud of. It's actually a very important number because when you work through these schemes for protecting information, because anything can go wrong, you tend to, what you find is something called, I'll use another technical word now, a threshold. And that means that if you're doing things better than a certain number, you will be able to use the protection to get rid of the errors, the physical errors as they occur. You'll stay on top of the problem and you'll be able to run a long calculation with nothing going wrong at the logical level. But suppose that every time you tried to do something, make a measurement, make a two-qubit gate, something like that, you had a, let's say, a 30% chance of just wrecking it. That would be hopeless because it's like trying to fix a broken watch wearing boxing gloves or something, right? You're going to cause more damage than, you know, so in a slightly more formal language, you might say it's like entropy. Can we remove disorder more efficiently than we're putting it in, given that the process of trying to remove it itself is a little bit noisy and damaging? So you have to make a net benefit, right? You have to take out more trouble that you're putting in. Then you can stay in control. And added to this is you're running actual code. So the code might be erroring out as well. There's also a whole other question, which is how reliable is the algorithm itself? But all of this is just, is the machine even doing what I'm telling it to do, right? So you have this number, which the theorists can derive, and I've spent quite a lot of time deriving it for particular approaches, which is essentially how good do the lab guys have to get before they could now, with enough funding and whatever, build a big quantum computer and know that it will stay on track? Because they're now so good at doing the operations that as errors happen, they can take them out of the machine faster than they're happening. And so that is the threshold. And now the threshold, when these results were first discovered in the 90s, was about 10 parts per million. So I have 99.9999 was the kind of level of precision that you would have to have in order to control your quantum computer and take the bad things out faster than you're putting them in. Regardless of the number of qubits in the system. That's, yes, exactly. So, or almost regardless of them. Enough to be able to run very large algorithms and be able to do the things that we dream of for the big machine. It's always the case that if you have enough qubits and you have a... enough qubits and you have a... So basically what happens is the more you have, you have to slightly dedicate more and more of them to the checking process. But it's not too bad in the sense that if you double the size of the machine, you might only need to slightly increase the number of guys who are checking. So this number, this threshold, in the 90s, it was very demanding. So in the 90s we had the theorists saying good news We can tell you how to build a quantum computer and it will work and it won't go off track Despite the worries from let's say the 80s that it would have to go off track You know that problem has been solved said Andy Steen and Peter Shaw and many other people who were excited by that Yeah, bad news the level of control you need to achieve in the lab to use these ideas is still very demanding. It's modest by comparison to how classical, I'm sorry, classical computers being everything that's not a quantum computer. It's modest by comparison to them, but compared to what you guys are achieving, let's say in 1990 in the lab, it's horribly challenging. In the lab, maybe two cubic gates might have been around the 90% fidelity mark at that time. And yet the theorists were saying, I need you to be 99.999, you know, and that's a gap. And that was a real time for optimism versus pessimism, because how long will it take a technology to get a hundred or a thousand times better in its precision really there were optimists and i was at that time i was like getting into i was just getting interested in the in the late 90s um in this area and hearing about it and so of course i was a super optimist at that time as a student you had to be like everything's just happening right so um i was like i'll probably have it in a couple of years right and then there were pessimists who would said this gap between what we need to be able to build the theorists say and what we can build is so wide it's probably physically impossible that would be a tenable you could say that and no one would be able to prove you wrong now to come back at last to your original question, why are people excited now? It's because that gap has completely closed. The theorists as a community have been doing better. They've been improving their codes and making the demands more permissive. So now the threshold is about 99%. If things work correctly in your quantum computer 99% of the time, that's the turning point. You don't want to be at 99% because that also can be seen as the point at which things become impossible. You want to be better than that. But 99.9, which is what the guys here in Oxford can do, is 10 times better than the threshold. So let's break each component down. Okay. So how do you move to 99% and above being accepted? What changes have to be made? Are you different simulations? What's happening? On the theory side, we have a family of approaches now called topological codes. And these things, one could say a great deal about them, but practically what's important about them is the following, a very simple property, especially something called the Tiaf surface code, which is at the moment the go-to solution for how we would build a quantum computer. Why is it better than the codes we had in 1995? we had in 1995. It's better because the architecture of the computer can be very, very simple. In fact, it can be, as the name 2D surface code suggests, you're allowed to lay out your qubits just in a grid, which is great news for experimentalists. Actually, they'd rather lay them out in a line because if there's something easier than a grid it's a line right but that's that's that's very restrictive but a grid is not too bad i mean conventional technology is laid out if you zoom in on chip onto a grid and when i say you can lay it out that way what i mean is that each qubit only needs to talk to the immediately nearby guys north south east west the the the uh code does not require a qubit to be able to reach out and talk to a guy three blocks over. The early codes would have required that. They would have required qubits to be able to link to qubits all over the place. And why is that a problem? Most of the ideas for quantum computing actually involve direct physical interactions in the physics, which is short range. So if you have an idea where you can lay out your qubits in a grid, that reflects what is straightforward in the physics for you to achieve. On the other hand, if someone says to you, I want you to do something where this cubit needs to talk over here And then it needs to go and talk over here. You don't have that in the hardware So what are you gonna do? You will have to do a bunch of swaps if you've only got short range links in the hardware And you're actually saying I need this guy to talk to this guy over here What you're gonna have to do more or less is swap, swap, swap, swap, swap, swap, swap, swap, swap. And now they're next to each other and they can talk. But you did all those swaps and those are making errors as well, right? So the cost was in permuting around the information inside the machine. But now along come the topological codes and they say, no, it's fine. You don't need to move stuff around. Lay everybody out in a grid. Everybody can just sit there and just talk to the immediate next door neighbors. And that takes away the whole, it takes away a great deal, most of the operations, actually, because most of the operations would have been used for swap, swap, swap, swap, just boringly moving stuff around. Now, by the way, we might perhaps, it's up to you, talk about network approaches to quantum computing, which is something I'm super keen on. And they actually do have the ability to link any qubit to any other qubit, which is still super desirable, even though the topological codes have told us we don't absolutely need it. It's still great to have. But it does expose you to more errors? Not if you do it, right is the answer. What it what it means is that it's Tougher to figure out how your hardware is gonna work But if you can figure that out and we think we have got it figured out Then you can build a machine where the qubits are able to link all over the place, right? And that is fantastic for I mean, it's always better to have more connectivity. It's always more powerful to have more connectivity. Right. Rather than a chain. Yeah. Rather than just what we would call nearest neighbor, which means wherever you've put your qubits, they can only actually talk directly to their surroundings. Okay. But still, the topological codes showed that that was enough. And that's an enormous simplification. So the topological codes showed that that was enough. And that's an enormous simplification. So that was responsible primarily for moving from the multiple nines to the 99% threshold. And then in the lab, well, the different kinds of technology, and there are a lot of them, and this is one of the things that makes the field quite confusing for someone who just, just someone who Googles. But, you know, I sympathize. You type in, how does a quantum computer work? And you get 20 different answers. And it's worse than ever, actually, just as an aside, because before, like five years ago, if you type in, how does a quantum computer work? You get different academics like me talking about our favorite approach. But academics don't really have hostility to the other approaches. I mean, the ones I don't work on, I wish them good luck. You know, I just want to see a quantum computer happen. But now because we have a lot of companies engaged, they need to take a little bit more of a commercial attitude to it. So if they're investing in a particular approach, and you ask them, how is a quantum computer going to work, they won't tell you about the rivals, they're going to tell you all about their approach, and why that is the solution for sure. Well, just think about them fundraising. Why find you fund you rather than the other guy? Exactly. I mean, I'm not complaining in the sense that obviously, they must do this, right? It's a very brave guy in a company who says, Well, first, let me tell you why my rivals are great. And then I'll tell you why I might have something, right? And you could take that approach, but that's non-standard. So it's more confusing than ever to try and figure out how a quantum computer works, what it's going to be made of, what the bits are, because there are so many different possible answers. And now many of them are associated with companies who are really pushing that and not giving you the big picture for perfectly sound commercial reasons, right? Maybe this is silly to go into one in particular, but in the lab in Oxford, what kind of quantum computer are they building? So Oxford is actually one of the biggest research facilities in the world for quantum. We've got something like 200 people working on this. And so we're working on a bunch of different stuff. Of course, we've got a division between theorists and experimentalists. But among the experimentalists, we're not betting everything on one horse. We're taking a bunch of different approaches. But the one that I mentioned that we have the world record for the best control is this thing called an ion trap, which sounds very technical. It's really a very simple idea. Our qubits are individual atoms. An atom is really nature's natural quantum system. It's the system that people were thinking about when they actually began to understand quantum physics. So an atom can make a great qubit. The problem with atoms, like the atoms I'm made of, is that they're connected to other atoms and on and on and on. And so you can't have a particular single atom be in a quantum state without it immediately connecting to the atoms around it. So what you would need to do to make a quantum computer out of atoms is figure out how to keep them isolated, a bit like the famous Schrodinger's cat in its box, right? We need to isolate. We should explain that metaphor as well. All right. So sometimes I get told off for mentioning Schrodinger's cat in its box, right? We need to isolate. We should explain that metaphor as well. Yeah. All right. So sometimes I get told off for mentioning Schrodinger's cat because people probably the one thing they've heard of. But so in the early days of quantum physics, Einstein, which I probably don't know, and Schrodinger, who was one of the fathers of the quantum computing field, were discussing in letters they were exchanging how weird quantum theory is and whether they could get behind it as a sort of explanation of the world. And they were struggling with this idea of superposition, which means a thing can be in two states at once. Now, when you're talking about something as far from everyday experience as an atom, maybe it doesn't sound too bad, right? Because we don't, we're not used to looking at atoms anyway. So if I tell you an atom can be in two states at once, you're like, well, that's weird, but whatever. So what they came up with was a thought experiment, which it's important always to emphasize no one ever plans to do because it involves potentially killing a cat. And, you know, everybody loves cats, right um but the idea was the thought experiment was to say well look according to physics we could do the following and how weird is that right so in the experiment we take the fact that the quantum world which is normally thought of as the small scale of photons and atoms has this weird property of things happening or both happening and not happening um and scale it up so the idea is you build a box, and the box perfectly isolates the inside of the box from the rest of the universe, which means nothing in the rest of the universe, including you, can measure what's going on in the box. It's its own little sub-universe once the box lid is closed. What do you put in the box? There's a few variations of this, but the version I like to say, because it's more exciting, is that you put a bomb in there. Okay. And you put a cat in there. And the question is, will the bomb go off and kill the cat or not when the box is shut? But it's an unusual bomb because it doesn't just have a timer or something. It is connected to some kind of quantum measurement. So it could be, for example, whether or not a particular atom decays. So atoms that are radioactive can decay from one to another. And that is a quantum event that may or may not happen. And in fact, if unobserved, we would say it has and hasn't happened. That was the original example. But actually, it could be anything. We could put in there one qubit of a quantum computer if we wanted to make it in more contemporary language. And we would say, I'll put the qubit in a superposition of 0 and 1. And then after exactly one minute, inside the box, a little measuring device is going to go and look at that qubit. And the qubit will either be 0 or 1. But now shut the box I seal it off and I just wait five minutes, right? So after one minute the measuring device looked at the atom and if it saw state one It activated the bomb and if it saw states did state zero it did not activate the bomb. Mm-hmm Stop and then at that point it's disarmed if it was officer now What quantum theory would tell you is that at that moment that the measuring device looked at the atom, what happened was the superposition that the atom was in, a 0 plus 1, is in a sense spread to the measuring device. So now you've got the measuring device source state 0 in a superposition with the measuring device source state 1. But the measuring device is connected to the bomb, right? So in the very next instant, you have a superposition of the measuring device saw state zero and the bomb didn't go off and the cat's just bored in the box. And the measuring device saw state one, activated the bomb, it blew up and the cat is, yeah, pieces. Get too graphic about it. So it's a scaling up thought experiment. And's saying look now after one minute and we'll leave the box shut for five minutes so for the following four minutes inside the box it's not that one or the other has happened and we just don't know that would be the sort of classical explanation right it's it's that both those things have happened they are in superposition with each other um and that is an actual state of the universe distinct from being one or the other or it's one or the other and we don't know yeah literally both those things are the case right inside the box and then of course when you open the box that's a measurement act from the rest of the universe onto the little sub-universe and now it will be one thing or the other or depending by the way on how you interpret the grand scheme of things you could say the whole universe goes into a superposition as soon as the cat is dead than the cat is so that was designed to highlight how weird quantum theory is because there's nothing we would never attempt that experiment um yeah i suppose if you were going to do it you would do it with something other than a live cat. The point is to make the microscopic world where weirdness, maybe we can kind of mentally brush it aside and say, yeah, whatever, small things are weird, right? But there's nothing keeping it small, except the technological challenge of doing stuff like what I just described. And in a way, a quantum computer itself is a useful and humane version of a Schrodinger cat experiment, because we imagine having a huge number of components that are all in not just two states, but in multiple possible states simultaneously. And we expect to be able to use that for useful things. And we mustn't open the box, as in measure the qubits prematurely. Right. And so how does that relate to using an atom as a qubit? Right, exactly. So we want the atom to be like the cat. We want it to be able to be in a superposition of dead and alive, zero and one, and maybe we won't have a bunch of them. But we need to keep them, our atoms, totally isolated from the rest of the world. Just like if we, if our, in our Schrodinger cat picture, if the box was a bit leaky, if you were like, I'm just going to keep one eye on it, it spoils the experiment. You know, if you're measuring it, one thing or the other will happen. We will not have the superposition. So we need to take our atoms and isolate them from the rest of the world. And here's how we do it. When I say we, you know, I'm being very... I don't do it. They do it. So, you... first off, you want to have a vacuum. Because you don't want your atoms talking to the rest of the stuff that the world is made of, right? So, you have something called a vacuum chamber, which is literally a box, which is very tightly sealed and has some special sort of ports in it that allow you to, for example, pump the atmosphere out of it. And so that's your starting point is a vacuum chamber. That already is a little bit exotic compared to conventional computers because they don't need to have a vacuum. But the good news is that vacuums aren't particularly hard. Of all the various exotic things that we need when we are thinking about building quantum computers, sometimes it's super low temperatures. It's always challenges. A vacuum is actually reasonably mundane. In fact, in the early days of computing, we had vacuum tubes. We need better vacuums than that, but we can have better vacuums. So first, you have your box, literally a box, and you make sure that it's a vacuum in there, except for, of course, the components of your technology, right? So ion trap, what does it mean? An ion is just an atom that has had one electron flicked off of it. And this means, so now you're thinking of your atom, you've got the core of your atom, and then you've got the electrons whizzing around it, right? And the whole thing is electrically neutral in that there are as many electrons as there are protons. And so it doesn't do anything special with electric fields. It's just, you know, it has no net electric charge. So what you do is you deliberately flick off one of the electrons. So now your atom, which might be, for example, for the guys here, a calcium atom, has one too few electrons. Now, what that means is that now it has a net positive charge, which means you can push and pull it around with electric fields. You can make it come over here or push it away. So you can actually manipulate the atom, hold it, push it, pull it, without touching it with anything. In other words, it's floating in the vacuum. You can push it and pull it. You can push it and pull it because we don't want it just bouncing around inside our vacuum chamber. We want it to be in the heart of our technology, right? So an ion is just an atom that has had one, for us, just one electron flicked off so that now it has a charge so that now we have a kind of handle on it, right? So on it, right? So what do you do next? You have a chip which looks to the naked eye until you really study it, a bit like any conventional microchip. And the chip has metal elements on the top of it, often gold. And those are designed to just create electric fields. So you charge them up and now they have an electric field around them. And they push and pull and push and pull your ion to keep it in one place, not touching the chip, but essentially floating above the chip. So here you've got your vacuum chamber. Inside it you've got your ion trap chip, which is just a bunch of little metal elements. Dirt cheap. Well, not dirt cheap. Actually very expensive because what they do is they design a particular trap layout and then they have to get it manufactured. But in terms of its components, it's just some bits of metal on a surface. Much, much, much more basic than, say, a silicon chip. So the ion trap chip itself is nothing special. And the atoms are just atoms. But you've now trapped the atoms in the form of ions because this gives us the ability to have a grip on them. Floating in the middle of a high-quality vacuum, not touching anything, and inside the box. So now that's a beautifully isolated system. And what you can do is you can have several atoms. You essentially have a gap, and there's another one, and another one, and another one. And then the first thing that you find, or something exciting that you find, The first thing that you find, or something exciting that you find, is that a quantum superposition will now last a very long time compared to almost any other way of doing things. So for the superconducting qubits that many researchers are excited, and we do do work on that here in Oxford as well. The decay time, the amount of time that can go by before the wonderful zero one superposition just degrades is the tiniest fraction of a second of the order down to a microsecond, something like that. For us, the guys over the road have done 50 seconds without, let's say, any particularly advanced or special tricks. And 10 minutes is also achievable by another lab using some extra tricks. But 50 seconds, which is a proper amount of time, right? It's taking me longer than that to explain it, but it's, you know, that's how long without any intervention, without any special tricks and techniques to keep things alive, if you just put, just, I mean, I keep being conscious of how I'm being dismissive of some of the most. Is it super cooled, room temperature? No. So this is at room temperature. Okay. So you take your ion, you use a laser actually to put it into a zero and one superposition. And then you come back and you see if it's still in the superposition you put it in later. And one way you can do that is you can reverse the operation. You can use the canceling laser pulse, the opposite effect of the one you just did. And so you take your zero state and make it zero plus one. And then you come back and you do exactly the reverse process. And if nothing has changed, that should take you back to state zero. But if the thing is degraded, then who knows, you know, you'll be in some random state. So you can come back 50 seconds later and have a good chance that it's, you know, that indeed you get back to the initial state, which means nothing went wrong for 50 seconds. And if 50 seconds isn't enough for you, there are some techniques which a Chinese group has pioneered where you can push that out to 10 minutes. But the thing is that 50 seconds is enough because in that time, you could have done a huge number of little processing operations, low-level processing operations inside the machine. You could have got tons of work done in those 50 seconds because you can do gate operations on the order of maybe hundreds of microseconds. So you could get a vast amount of stuff done, or in fact a fraction of that now. So you can get a vast amount done in the time, what's called the decoherence time, which is the lifetime of your qubit. So in the Schrodinger cat picture, the cat would actually not stay alive and dead permanently because in any real experiment, their box would always be a little bit leaky for information. So after some amount of time, which might be a minute or a year, the cat would actually indeed be in one state or the other. And so we could call that the decoherence time. It's the case for all quantum approaches as well. And one of the big measures for how well you're doing is watch your decoherence time. Our decoherence time is excellent because our system is incredibly well isolated from the rest of the world. And so are we swapping in new qubits every time? Like after 50 seconds, throw in another one, and then scale from there? No, that's right. So 50 seconds is a long time, but it's not forever. So your two options are this. One, do a calculation that from the start of the calculation to the end is a fair bit shorter than 50 seconds. That means everything will just behave as it should. And well before 50 seconds, you're anyway measuring the system and getting the answer out. the system and getting the answer out. Now, for the first quantum algorithms that we may, you know, the first serious ones that might do something useful that perhaps we'll see in the coming year, that's probably going to be the approach. Just go for it. Try and get stuff done. However, it's not really the answer for a long-running calculation that might take hours, days, because that's, you know, you can't suppress decoherence for that long. But the same techniques we were talking about before that will generally allow you to correct errors, including errors that you made because you didn't control things perfectly, will also hoover up these occasional... And in fact, if you are doing... Let's think about it. If you're doing maybe hundreds of thousands of operations per second, and those ones have a one chance in a thousand of going wrong, then you you're already on top of your game in terms of controlling that rate of errors, which we know that we can be, then that 50 seconds is no problem. It's actually so much of a weaker effect. It's trivial. We don't even bother putting it into our calculations usually because you're dealing with thousands of times like it's like a fire hose compared to a dripping faucet. So we're dealing with the fire hose compared to a dripping faucet, right? So we're dealing with the fire hose. We don't bother putting in the faucet. And to be honest with you, the only reason in my calculations I would put that in for an iron trap calculation is if the referee told me to, right? So referee of my paper who maybe didn't 100% understand it and says, this is an exciting paper, but I can't believe that they've left out the effect of natural decoherence i'm like all right so then i politely reply and say we thank the referee for pointing out our omission and we have now put that in right and what that meant was you know that the effective rate of errors has gone up by the tiniest amount you guys are so polite all the diagrams look exactly the same so uh iron traps are a very beautiful system in that they've taken nature's natural quantum unit and successfully isolated it, or a bunch of them, from the rest of the universe. And the fact that they successfully isolate them is seen by the fact that they will last in one of these delicate quantum states for a long time. Plus, we've also now learned to control them and get them to talk to each other to this very high level. So they are actually the gold standard of qubits. But they aren't the only approach you'll hear about. In fact, if you look online, you will hear more about the superconducting qubits, which is the approach, the approach that google and ibm and even intel are taking so that's a different approach and um it has different strengths and weaknesses so yeah let's assume let's go with yours for now because the question i'm curious about is so the way you tell it to me like okay this is working this is enough. Like, let's assume that. No, no, no. Scaling it is the challenge, right? Scaling it is the challenge. So, actually, it's been a few years now since these very nice numbers were obtained. 2014 for this 99.9%. So, why in 2015 have we not already built the quantum computer? Because now the theorists are saying, look, I've got some blueprints and designs and protocols. And they will all work. Exactly. And the lab guys are like, well, good news. We've actually cracked that number. And it's like, boom, let's go. Right. Well, it is the problem of scaling. So it's one thing to have put a small number of qubits in a box in the lab and worked on it for a month. And then on a really successful Tuesday afternoon, you get beautiful data out to prove it all works. And then you get a paper. That's how science sort of progresses. It's a gap between that and figuring out, A, how would you make that work, not on a lucky Tuesday afternoon, but every single time in a robust way. So that's a kind of an engineering problem, really. It's taking away the things, the uncertainties that were basically not making the experiment work on Monday, but on Tuesday it did. So that's just a development process. But moreover, it's saying, how can I go from having two or three of these guys behaving themselves to having like thousands of these guys? That's the scaling problem. Everyone is focusing all their attention on the scaling problem. Everyone is focusing all their attention on the scaling problem. Now, the first interesting number is actually about 50 qubits. Why? So here I have to say a phrase that is not my favorite phrase. Quantum supremacy. Sounds a bit racist or something, but it is. Quantum supremacy also sounds like the end of the road for everything that isn't quantum right well it sounds like agi right it's like oh now we're yeah it's all over we've got quantum supremacy we're done you don't have a job quantum supremacy is in that sense a rather hyped up phrase but it it refers to something that is very exciting and that is we hope about to happen. So here's my question for you. How big does my quantum computer have to be before it could potentially be useful? Well, how could we even answer that? One way is this. We could say, my ordinary computer, especially if it's a supercomputer, can pretend to be a quantum computer. We know the laws of physics that to be a quantum computer. We know the laws of physics that are governing the quantum system. We know the equations. We can put them, digitize them, and put them into software on a conventional computer. And then we can say to the conventional computer, okay, you are now simulating or emulating, if you like, a quantum computer. And if I set my quantum computer going and did this algorithm, what would I see? Now, for one qubit, that's easy. Actually, one qubit, we could do it on the whiteboard. I mean, we just think about what happens for one or two. For, let's say, 15 qubits, I could write an app. It's not in my pocket. I could write an app for my iPhone that would simulate a quantum computer that has perhaps 15 qubits pretty easily. For 30, 29 qubits, I would need a very expensive laptop or a nice laptop, and I would be able to use that machine to pretend to be a quantum computer with 29 or 30 qubits. If I have access to some of the world's largest supercomputers, I could push it to perhaps 45, that's been done, or a little higher in terms of the number of qubits. Now what I mean by this is I don't want to make any approximations, I don't want to make it a bit like a quantum computer, I want the conventional computer to exactly replicate what a real quantum computer would do. I want the full, the full monty. If that's what I want, I, with enormous expense, like renting time on a top 10 supercomputer, I could push into the high 40s in the number of qubits. But the thing is, every time I add one more qubit, I double more, slightly more than double actually, the difficulty of the task. And in fact, I double the amount of memory I would need. So 45 qubits required 0.5, this wasn't my work, this was work elsewhere in the community, required 0.5 half a petabyte of RAM. Of traditional RAM. Yeah, in your supercomputer, which would be distributed over a bunch of boxes. Now, if you wanted 46, you'd need a petabyte. If you wanted 47, you'd need two petabytes. 47 is not that much more interesting than 45 that you would build a machine four times as big, right? Yes. It's this exponential increase, which is exactly what we expect because a quantum computer is supposed to be exponentially more powerful than a conventional computer for certain tasks. And so it's no surprise that when we try to get our conventional computer to pretend to be a quantum computer, right, we can get so far, but we're on this incredibly punishing curve. So quantum supremacy is a word that's used. Sometimes people say quantum advantage. There is actually a phrase which I would love to advocate, but I can't with a straight face, which would be quantum inimitability. Because no one can say it. I even have to think. Spelling it's difficult. Right. And it just sounds too technical and boring. But that's what's really happening because once,'s say 50 qubits sure you could with an enormous Effort build a conventional computer that can simulate 50 right right, but that would need a large proportion. I'll be like a Bigger bigger than the current supercomputers right and why would you because then you still wouldn't be able to do 51 So that point at which it just becomes ridiculous to bother trying to match the power of the quantum computer, that turning point is referred to as quantum supremacy, or you might say quantum inimitability, because you literally can't imitate the quantum computer with any sensible, sane amount of classical computing power. And so what that means is that there's no point, if you think you've got a clever idea for what to use a quantum computer for, and that's going to change the world, if your idea involves much less than 50 qubits, you're wrong. Because you may have a very nice idea, but what we would do is we would just make that into a program that runs on a conventional computer, right? And you could just have it, You don't need to have a quantum computer. So once you're above 50 qubits, let's say 64, because that's a nice binary number and it's much more than 50. So there's no way you'll be simulating completely a 64 qubit quantum computer on any kind of classical hardware. So if you can make that machine, it has the potential to do things that we can't do by any other means. Now, something I should immediately mention at this point is we don't actually know anything. The theorists have not worked out anything that a 64-qubit quantum computer can do that's super useful. Okay. Including like breaking cryptography.ography codes and stuff like that which is useful if you're the nsa or whatever sure um is breaking codes is uh in the category of things that needs at least thousands of qubits but because it's a big tough long-running task it also needs this whole error correction thing to be going on and That boosts the size of it because once you say oh wait, I need error correction Then you have to do this thing We talked about where each logical qubit is actually a bunch of physical qubits and for a really long algorithm It might need to be a lot of them So you'll be from thousands into millions of qubits to do the code breaking stuff So actually we've got this enormous gap between the point at which code breaking stuff. So actually we've got this enormous gap between the point at which quantum computers could be useful for something, which is 50, and the point of which they're definitely useful for a whole bunch of stuff that we've worked out on paper, which is more like a million qubits, right? So 50 to a million, that's a pretty big gap. And we need there to be stuff in that gap because otherwise the thing I like to say is it's a bit like showing an iPhone to a guy from 1965, right? And you're like, good news. The stuff you're working on, these big clunky computers, are going to give us this. And everyone's going to have one, right, in the first world anyway. So we're all going to have these amazing machines, right? So the guy might be super inspired by that and might jump out of bed in the morning thinking, okay, I'm part of this epic quest, right? But when that guy goes to their boss and tries to get funding for 1966s, right, it's no good to say in 2018 there's going to be these awesome things, right? So that's our problem for quantum computing as well. What we've worked out on paper is stuff that needs pretty big computers. And we don't know how long it would take to get there. is stuff that needs pretty big computers. And we don't know how long it would take to get there. You know, maybe, hopefully not decades, but it could take definitely more than a decade to get to the point where we have millions of well-behaved qubits. On the other hand, what we believe is about to happen in the coming year is that people will start to bring out quantum devices that are at or just a little bit over the quantum supremacy threshold. This number, a lot of people are racing to deliver 50 qubits because it's this kind of magic number. So those machines, however, won't, as far as we know, be immediately useful for stuff that people really want to do. We'll be able to test out their quantumness and show them off with a whole bunch of ideas, but it won't break codes. It won't, what are some of the other things people are excited about? Breaking codes is often mentioned and it isn't a very positive application, by the way, breaking codes, but it is very interesting because the difficulty of breaking codes is so well established. And therefore, if a new machine comes along and can do it, that machine must have something special about it that the old ones didn't have that's why it's so exciting as a sort of a showcase but as a counterpoint to that the code could also be created by a quantum computer correct that's true defended okay that's true so that quantum giveth and taketh away or the other way around take it away and giveth because um uh a quantum computer would crack uh the codes that we rely on today on a classical computer yes um but we can also divide design communication systems that are protected by quantum physics where basically an eavesdropper who tries to see what the communication is would cause a necessary disturbance like the uncertainty principle you it's necessary if you measure a quantum system to disturb it and that would be detected so um quantum can also offer you, it's almost like a salesman, you're like, bad news, all your current technology for security is going to become iffy. Good news, have a look at this brochure. But yeah, so the things we are excited about that quantum computers will one day do, code breaking, not the most exciting, but a very important proof of the power of the machines, but what people are really more excited about, quantum-enabled discovery is a phrase, which basically means in science and also in industrial R&D, like drug discovery and so on, there's an enormous amount of trial and error. Because it's not possible to use software to predict what's going to happen. So we can't predict what would make a great superconductor and in that way just go, I say, all right, we'll go make that. That will be an amazing superconductor. Trial and error, trial and error. We're not very good yet at predicting how to synthesize complex molecules. So chemists who have an enormous amount of intuition and years of experience just go and try it and they occasionally get a breakthrough trial and error trial and error if we could have a far more powerful machine for predicting the behavior of these things we could take the trial and error out imagine you're a chemist you want to synthesize this big fancy molecule because you believe that it will help with alzheimer's or something like that it's exactly the right molecular shape. Instead of trial and error, you just set that task to your quantum computer. In the morning, you come back and the quantum computer says, well, I had to think about it. If you do this and then this and then this and then this with this chemical and this chemical, you will synthesize that thing, right? That would supercharge the rate of progress that we have in various areas. So molecular synthesis in materials, design and discovery, and could give us perhaps, it's hypey for me to say it, but almost a golden age of rapidly discovering new materials, new chemicals, new drugs. So that would be very exciting. And this exists in the, how many qubits are we talking around here? Right, exactly. So the ideas that the theorists have worked out thoroughly already would, again, seem to need millions of qubits. But there's hope that some of these tasks may actually work with far fewer qubits. And in particular, some of these tasks may not need the error correction thing is great as a principle, but it requires you to make the quantum computer much bigger because you have the logical qubits, which turn into a bunch of physical qubits. If you don't need that, if you can just use the direct atoms, ions of your computer as the logical qubits, then you can maybe get stuff done with 100 qubits or a couple of hundred qubits. stuff done with 100 qubits or a couple of 100 qubits, probably a bit more than 50. But you know, you're at that could be an application that sits near to the kind of end of the chasm, you know, 50 to a million. That's this big gap. Yeah, we're at the 50 end. Is there a stepping stone, a very interesting stepping stone, which would be the ability to simulate chemistry and material system that's actually quite near our end of the chasm. That would be super exciting, right? And does this relate back to your network design before? Because you planted the seed. Yeah, I did plant the seed. So now I kind of want to harvest it. So if we're now saying, look, I understand this fault tolerance, this threshold, all that's exciting stuff, but that stuff lives at the other side of the chasm. That's what you do with your million qubit quantum computer to make it be able to run forever. But now let's focus on what we might get done in the next two or three years. What are these first machines, these embryonic or adolescent quantum computers going to be able to do? Now we come back to connectivity. If I have to swap my qubit 10 times or 100 times before it gets next to the guy it now needs to talk to, that's very debilitating. Because now I will pick up loads of error on the way over there, and my whole algorithm will be very burdened with error. And we aren't using these clever error correction techniques. We can't afford it in terms of the number of qubits. We've only got 200. By the way, 200 qubits, I mean, 50 is where we want to be in the coming year yeah hopefully that will become 200 fairly quick the baseline where are we at right now right so where we're at right now is that various labs around the world can give you 20 qubits okay um ish 10 to 20 um what's been announced and trailered sometimes announced sometimes kind of unofficially announced by um some of the big companies is that they're working on a 50 qubit machine okay because that's the obvious you know goal right um is to get to 50 and that's typically in a grid that's like a 7 by 7 that would give you 49 a grid of qubits but that those plans those designs are nearest neighbor ones which means if you want the guy in one corner to talk to the other, it'd be swap, swap, swap, swap, swap, swap, swap, swap. So you'll get a lot of error in there. So we're in the regime of like tens of qubits trying to push to 50. Now, the network approach we're taking is a very different philosophy. The number of qubits we have for a long time has just been a handful of them, like five. And we're not trying to scale that up. And a handful of them, like five. And we're not trying to scale that up. And why not? Because five is far too few to do anything useful. What we're trying to do is have five inside a box that behave really well and make a beautiful little useless but beautiful little quantum computer. And then to understand how to link that box to another box with an optical link. And the idea is that if you can crack that, if you can have a small quantum computer and make it link to another box with an optical link. And the idea is that if you can crack that, if you can have a small quantum computer and make it link to another small quantum computer that's sitting right next to it, and if you've mastered that, then nothing stops you except your checkbook, I guess, from making loads of them and linking them up. That's our approach to scalability. It's not to have the qubits directly talking to each other, and then you say, well, I've done 20. Let's see if I can do 50. That was super hard. Let me shoot for 64. It's getting more and more complicated. I'm having to control more and more parameters. It's a nightmare, which is the way it's been up to now anyway. Instead, we're saying, look, let's just get really good at making a small module of fixed size and learn how to plug to connect two modules so they can talk to each other so it's it's a quantum computer that's divided into little pieces and each piece is independent and it's pretty much plug and play in the sense that you just if you if you had 50 of these modules then that would be a very powerful machine if you manufacture another 10 you just plug them in and now it's an even more powerful machine machine. And this optical link doesn't have the same degree of disturbance? That's a very good question. So how does the optical link work? The optical link does indeed have a lower quality to it than the internal operations, which will be super good at this 99.9 that we've already achieved. So the reason people don't do this, because it sounds like a great solution, like why doesn't everyone do it? Why doesn't everyone just make little quantum computers and link them up? It's the answer, right? It is the answer, but there is a problem, which is that the links, there's nothing in the physics that means the links can't be beautiful and very clean and very high quality. But in terms of the experiments that have been achieved so far, the links are not great. So you might have inside your box, one part in the thousand is your error rate. But for the links, one part in 10 might be your error rate. So then you think, well, that's no good. Because if I'm joining up these beautiful little components with crappy connections, the whole machine is actually going to be crappy, not beautiful, right? But there's an answer to that, which is very much like what you would do in conventional technology, which is that you use the link several times. And by using it several times, you can effectively get one better quality communication out of it, right? So your phone, I keep reaching for my phone. Yeah, there's one here. Your phone, if it's on the edge of your, if it's seeing one bar, right, of your wireless, that's at the point where it's very iffy whether it can connect or not. But when you load a web page, it loads more slowly, but it still loads perfectly. It's not like the images are full of static. No, yeah. And that's because your phone can keep requesting. It uses a code to protect the information. It can also request. So it can say, I didn't get that. Send it to me again right so we know now how to use the same kind of idea in the quantum setting to say i've got a bit of a crappy link between what we might call the alice module and the bob we love alice and bob in the quantum field a and b right fair that's you know female century so you're sending packets it's not the whole thing like that right so i'm being a little bit loose so the actual thing we we do is something called entanglement, which we haven't discussed, but that's the other big, most people have heard, quantum involves something called entanglement, which Einstein called spooky and blah, blah, blah. So the test of whether your quantum computer can really be broken into little modules and wired up, one way to ask that question precisely is to say, can you achieve good quality entanglements between two modules? That would be the proof that they are actually part of the same quantum state, part of the same quantum machine. And if you cannot get entanglements between the Alice module and the Bob module, then your machine will forever really just be a bunch of separate units that aren't teaming up to create one quantum state, one quantum calculation. So you could say then, all right, I've got a link between my two boxes. Let's think about that link. What quality of entanglement can it create between the Alice iron trap and the Bob one? And I might say, well, not very good, only 90%. And then you're like, well, that's not very good. That's not good enough for me. So what we actually do is we create a couple of qubits that are entangled at 90%, not very good. And we store them. And remember, we can store stuff practically forever. Okay. Well, 50 seconds. Okay. And then we create another, what we would call another technical phrase, a bell pair, which means two guys that are entangled with each other. And bell pair, which means two guys that are entangled with each other. And again, they'll be in 90% quality. They'll be, you know, not good, not as high as we want. But now we've got two, what I would call crappy bell pairs. And what we know how to do is to sacrifice one in order to boost the quality of the other. So it's a little bit, I mean, this is to loosen the analogy, but it's a little bit like if someone's trying to talk to you and it's a little bit staticky. If you hear it once, you're not sure. But if you hear it twice, even though it's staticky both times, you're able to infer more reliably what that information was. So that's a very loose analogy. But basically, we take two poor quality communication channel uses and we make it into one good one. And that is the solution to that problem. As long as your boxes have a very good memory, they do have a very good memory. As long as they have very good quality internal operations, which they do have, then you can take a poor quality link and boost it by using it a few times into effectively a very good quality link, as good actually as the internal operations. So we actually are planning to build a machine which will be made out of modules, which each one is a small quantum computer. And by the way, so small that on its own, it's not good for anything, even as few as five qubits. And then we have modules and we link them up. And when two of these modules need to talk to each other to become part of a single unified quantum state, we'll use our link. And our link will need to be used several times and then purified or distilled, is the phrase we use, in order to make it as if it was a very beautiful, very perfect link. And now these two modules will be connected in a high-fidelity, high-quality way. And does this perform at the same degree that say, so say your 10 qubit quantum computer, well, you're stitching them all together. Is it performing at the same speed as one of these 50 qubit? Yeah, that's another great question. So initially, no. Because the links are individually, they're fast in that they could be about megahertz rate or something like that. But the problem is, it's a technical problem, but a very interesting one that we're having at the moment, is that the links are optical. So what happens is a particle of light called a photon comes out of your ion and flies out of your ion. It needs to be caught and put into an optical fiber. And it needs to be going on at the other end as well. The problem is, at the moment, most of the light gets lost. It comes out of the ion and it just hits the wall of the chamber. We know how to solve that problem by essentially building what we would call a cavity, which is a way of catching and controlling light into the system. And we're working on it. But for the first generation of the technology that we envisage, we won't have that. It's a little bit two steps down the road. So instead, we'll have to just deal with the fact that these links are kind of slow in that you try to use the link and nothing happens. You try to use the link and nothing happens. You try and you succeed. And then you have to do that a few times. So that slows you down a lot So the actual rate at which the clock speed if you like of our modular quantum computer will be limited by the rate of connection in version 1 But for version 1 we don't really care how long it takes to run because we'll be doing small Problems that can fit in 50 or 100 or 200 qubits So they'll be fast anyway. And it doesn't really matter if they take, and it's not, this is oversimplifying, but it doesn't necessarily matter if the calculation gets done in 10 microseconds or in 10 milliseconds or indeed in 10 seconds, because it's a small calculation anyway that we're trying to do. So what we envisage is a first generation of this technology, which, so you've drilled right down to it, actually, it has interesting properties versus these 50, these seven by seven grids. It's slower, but it's higher fidelity and it's higher connectivity. We believe that it will actually be, you would use them for different things, but if I'm going to choose one, I'm going to say ours is the better solution. And then as things mature and you have more and more modules and you start to take on more and more challenging problems and it starts to become frustrating that you're limited by the link speed, then we have this solution that will basically stop us wasting all the light, catch all the light, and then we come right up comparably to the speed of other approaches whilst still having the very high connectivity and the free scalability and so on. So what we actually picture is, if you've seen those photos of, say, a Google server farm, you need these very big facilities where you've got, you know, looking in different directions, you've got these pillars running off into the distance. You can picture something like that for a single quantum computer, if you want, where you have a bunch of modules and they link and you have the fibers coming up and going, you know, in sort of cable guides and coming back down again. And so you build your quantum computer in a big room. But why not? Rooms are relatively cheap compared to quantum computers. So it doesn't really matter if it's big or small. It means that the end user won't directly have a quantum computer in their phone for any time. But to be honest, there's no approach to quantum computing that's at the same sort of level of maturity as superconducting qubits or ion traps that could possibly fit a quantum computer in your phone. But that doesn't matter because the way you use your phone to do the more challenging tasks, even speech recognition, is typically in the cloud, right? We would say in the cloud. So as long as somewhere there's a big fat quantum computer behaving itself, achieving, you know, having a low error rate, having the necessary connectivity, being big enough to tackle the tasks, then in principle, that can be doing jobs not just for the scientists and researchers, but if you've been able to think of an application, so machine learning might be one of them, that actually benefits the end user. The end user can also use the quantum computer. So we picture this kind of thing, a modular machine where you have as many modules as you need to get the task done. And by the way, at the moment, a module, the vacuum chamber in the lab is this kind of size. Oh, really? Quite chunky. OK. Not too bad. I saw that photo floating around. Someone here won an award, right, for their floating hat? Oh, yeah, probably. Yeah. They are actually quite pretty because they're sort of shiny metal, and they've got these cool Portcullis things in the lab, you want to be able to get your hand in there, right? It's human-scale technology. You know, you want to get screwdrivers in there and so on. But there's nothing inherent to the technology that would make them be that. Actually, they would work a little bit better if they were miniaturized. So you could shrink that down to a far smaller little vacuum chamber, and that's your little quantum computer. And And that's your little quantum computer. And then you want 50 or 100 or 200 of those. But that's not so bad. You don't want to just lay them out. And so that's our picture. That's the thing we'd love to build, actually. And there is no fundamental impediment to that, actually. So if someone came to us and gave us a billion dollars, we could have a crack at building that tomorrow. But no one has given us a billion dollars. So instead, we're taking a slightly more sort of traditional academic conservative route of thrashing out the physics of two of these guys, and then having a think about how to sort of come up with the next generation, which is a bit better, and then building four and then building 16 and 32 and 64. But there will certainly be a point and I think much earlier than 32. So once you've cracked the physics of even two of these guys, you're good to go in the sense that you can just partner with a company that would manufacture these things and you can just have your quantum computer. Stitch together and go. And in fact, this network approach is, I think, the only one that if you wanted to Manhattan project it, right, or moonshot it, you're one of these big projects that have happened in the past where you have a goal that's extremely challenging and you just decide you're going to make it happen. If you want to do that with a quantum computer, if you said, look, I'm impatient to wait 10 years, 15 years for the big quantum computers to come. I want it to come now. The network approach is the only one that could potentially deliver that because we just when when we think about approaches where the qubits are right next to each other and just make that structure bigger and bigger and bigger people are having heroic efforts now to deliver seven by seven grid but from talking to those researchers it doesn't seem to me that they will then immediately know how to do you know a 10 by 10 grid that will bring a whole new raft of problems and levels of control challenge and so on at some point presumably you do know how to just keep on scaling with a relatively modest amount of new investment but with the modular approach as soon as you've got two guys that link really well you can have a million if you can afford the cost of one times a million right so i mean there is no difference and so on the on the timeline change right and so on the timeline side like are we talking within a couple years that you guys are going to make this happen you think well it depends on how much interest there is in actually trying to build the machine that's potentially useful academics left to their own devices will tend to go hard for the interesting scientific results, but we don't really know how to tackle the problem of building a big facility. That's not a problem for a university professor. I mean, nor the funny. You don't have the same incentive as a company. No, exactly. A company would be saying to its shareholders or investors, look, here's our year one, here's our year five milestones, and we'll be able to achieve at each stage. The academics work in a different way. But what I will say to you is that certainly sorting out thoroughly and demonstrating this idea of two modules, which fully link together to form a single unit in practice. So to the programmer, it's a single quantum computer. The engineer knows that it's been broken into two pieces with an optical link. So getting that demonstrated is an immediate goal for us in the next year, getting it thoroughly demonstrated. Whether we then go, hooray, let's build a thousand of them, right? I would love to, by the way. No, I would love to do that. There was nothing more exciting than saying we've cracked it. The more naturally academic route would be to say okay we've got that now let's get that cavity thing in now let's do this now let's do this and and and and you know you just keep making the physics better and more exciting and more well controlled but uh i do believe that once you've got two modules that talk to each other really well and have all these lovely properties, you have a green light to go large on that if you want to. But it is, this probably get a bit boring, but it's an interesting problem all around the quantum computing field, not just for people who want to build network machines, that you think, how do you actually get from the lab to some kind of device? You know, that's a problem that people have met in many different areas over the years. But I think it's particularly acute for quantum computing because it is such a difficult to understand technology. It does require such a lot of detailed know-how. It's not easy to do, let's say, tech transfer out of the laboratory into some kind of commercial setting. But it's happening. There are spin-out companies coming from academics all over the place now as they start to wrestle with this question of how can I have an investor-facing aspect of my research where I can indeed start to think about these exciting questions. Let's build it. Yeah. Do you think now is the time just kind of wrapping up that people are going to start rolling out, you know, like cloud compute compute or are we not quite there yet um i think there are already companies which uh aim to do that i think so too so um in that sense we are there right uh i think that um i'm excited by that and yet also a little bit worried by it. Because, of course, when a startup company especially, but even a, you know, a titan like IBM, when they need to explain their actions to their investors and excite their investors and shareholders, they're going to pitch things in a very optimistic way that an academic would normally be more cagey about. And there's that tension that I already see in the field between the story that you'll hear from, you know, and the worry is that it will create too much expectation. There'll be too many stories appearing in The Economist and whatever about how quantum is going to revolutionize everything. And, you know, quantum supremacy as exciting as the phenomenon that it refers to is a little bit, I'm afraid, feeding into that hype. Because if you're an investor and you've read a little bit about this, you're like, right, I'm going to invest in this company that will achieve a 50-qubit machine. It will get quantum supremacy and then profit. Yeah. And there is no, you know, it's one of those step one, step two, step four is profit or whatever that joke goes like, right? We The joke goes back, right? We don't yet know useful things to do with a small quantum computer. We're furiously working on that. And we haven't talked about machine learning. That's another sort of interesting possibility that's being explored, to put it simply. We talked about the enabling more rapid discoveries, which is very exciting. But we can't yet prove on paper that a small machine will be able to do those things. We're furiously investigating it. So the risk is that people get too excited. They think things are going to happen in the next one to two years in terms of not just the exciting machines coming out, but in terms of actual useful breakthroughs. This drug was developed on the Quantum 3000, that kind of stuff, within the next couple of years, which might happen, but could very easily not happen. And, you know, the hype machine starts to feed itself. So in artificial intelligence, as we were talking about, there's been a couple of AI winters, which the guys now when I heard the phrase AI winter, I assumed it was like from when Skynet launches all the nukes, right? And then we're like a sci-fi thing. But AI winter is just that the field started to attract loads of attention. There were loads of investors and then it didn't quite deliver fast enough. And then suddenly it became toxic to say that you were working in AI and that was like nonsense and silly stuff for academics. But not once, but twice, right? And for a couple of years, the field struggles to get funding and then starts to build up again. I mean, I know people working in machine learning now that are very concerned. They're just like, we want to be able to continue working on this. So machine learning is now working in the sense that it's working in Facebook. It's giving us self-driving cars. And yet somehow expectations still manage us to run ahead of it, right? People just can't stay calm. And so there's even a possibility that will happen again. For sure. It might be overinvested. It might be that that's just the way things have to happen. But it would be kind of nice as an academic, a slightly more sort of conservative. I want to see more linear progression. So I'd rather that the quantum computing field did not overinflate and then collapse. And then we all have to really struggle to get funding for a while. And then it can build up again. It would be nice if we could actually moderate but it is i'm more excited than i've ever been um to see these because uh we are now getting on the verge of getting machines that will behave in ways that cannot be predicted cannot be simulated will be in the regime where we're genuinely discovering how the machine behaves by having one. And that's what we've been dreaming of all these years. And there is also the potential to just really commit and try and build a big machine, which I would love to do. But who knows? Last question, then, if someone wants to get involved and start working in quantum computing somehow, where do you think they can provide the most value? Oh, gosh. Well, I mean, the answer to that question is a richer answer than it was even a couple of years ago. But a couple of years ago, the real answer would be, to be honest, you need to be in university as a young person, you need to choose the right course options, and you just need to go into academia. Now, there's a richer set of ways you can get involved. Still, that's the primary one, to be honest, right? But there are companies that are recruiting people with all kinds of expertise now, including, for example, software engineers who don't know anything about quantum, but they do know about writing high-performance software. I work with some such people, right? Because one of the things we want to do is push the limit of how well our conventional computers can pretend to be quantum computers. That's important also to check that the emerging quantum computers are really doing what they say they're doing, right? So for example, if you are a programmer who would love to get involved with this, there are now opportunities where you can provide that part of the puzzle. Or if you're a systems engineer who doesn't, again, have a huge background in quantum physics, but wants to be part of this process, the good news is people are now trying to build these complex machines that are really too much for the laboratory and are really complex machines that need to be developed in a separate project. And so we are looking for people who know a lot about systems integration, all these kind of problems, and they don't need to understand the deep properties of the quantum aspects of it. So, you know, getting a vacuum chamber that has a good optical interface is a set of problems which enable a quantum computer, but you don't need to understand quantum superposition. And the field is trying to diversify to include more such people, not just professors whose measure of success is can they get a paper into science or nature, but people who are outstanding engineers and programmers who don't care about getting papers into nature, but do care about meeting their goals and satisfying their contracts, essentially. So we are diversifying. It is leaving academia, or at least spreading out. And so I would say anyone who has a lot of technical expertise in these kind of areas, or anyone who's a very good programmer, the door's now open to participate in the quantum revolution. That's great. Well, thank you so much for your time. Okay, thank you. It's been fun. you