 A lot of the sci-fi stuff is actually now becoming possible. What happens when you have a model that's able of simulating real-world physics? Wouldn't it be cool if this podcast were actually an Infinity AI video? One thing I noticed is that the lip-syncing is extremely accurate. It really looks like he's actually speaking Hindi. How do YC companies build foundation models during the batch with just 500,000? This is literally built by 21-year-old new college grads, and they built this thing in two months. I think he locked himself in his apartment for a month and just read AI papers. You can actually be on the cutting edge in relatively short order, and that's an incredible blessing. an incredible blessing. Welcome back to another episode of The Light Cone. Today we're talking about generative AI. First there was GPT-4, then there was MidJourney for image generation, and now we're making the leap into video. Harj, we got access to Sora, and we're about to take a look at some clips that they generated just for us. Yeah, should we take a look? Okay, so here's the first one. The prompt is, it's the year 2050, a humanoid robot acting as a household helper walks someone's golden retriever down a pretty tree-lined suburban street what do we think i like how it actually spells out helper it's like a flex like i can spell now yeah which was not true with the image models it always grew up the text yeah stable diffusion dolly where we're notoriously bad at spelling text so that is a major advance that no one's really talked about yet i mean it's wild how high definition it is. That's almost realistic. And the other really cool thing is the physics. The way the robot walks, for the most part, is very accurate. You do notice a little kind of like shuffle that's a little bit off, but for the most part, it's believable. And the way the golden retriever moves. I have a golden retriever, so I can personally vouch that they perfectly modeled the like. Yeah, you have one, right? Like your dog, right? Yeah, it's a perfect representation of how a golden retriever walks. I also like that with DALI and stable diffusion, as you made your prompts longer and longer, it would just start ignoring it and not actually doing exactly what you told it to do. And we gave it a very specific prompt here and it did exactly the thing that we told it to. You can see it's still not exactly perfect. So I think towards the end you see it's like a floating dog, something in there. Okay. I was going to call out a couple other imperfections here, is that like the street is not a street guys like yeah it's a yeah and like what what's up with that it's like a weird it's like not quite a sidewalk not quite a street yeah and but in the future we won't need cars anymore and then like only one side of the street jumping there's this uh oh yeah floating object thing there's a floating object on the right if you if carefully. Which looks like a little dog or something, I'm not sure. This is still a real breakthrough. If you look at some of the stuff that Meta put out, I always think about, what is it, Will Smith trying to eat a plate of spaghetti, and that looks insane. And it's sort of just what you would do if you fed the previous frame into the same model to try to generate the next frame and it just wasn't durable and that wasn't too long ago yeah the other thing that i find really impressive about the sorvity is is that they have long-term visual consistency so it's like a minute long and like all the houses are similar architectural style there's no like discontinuity all the trees trees look similar. It's clearly all takes place in the same world. Next one's a drone camera circles around the Golden Gate Bridge. The view showcases the magnificent cliffs and ocean waves with views of San Francisco in the background. The view is stunning captured with beautiful photography. That is the Golden Gate. That is the Golden Gate Bridge. It knows what the Golden Gate Bridge looks like. And I think you can see Alcatraz there a little bit too. Yeah, I'm just like, the high definition is amazing. And you can see the city in the background, as we asked for. It's definitely not geographically accurate, but. Yeah, like the terrain is not quite actually the way it is in the real world. But it looks visually kind of similar. Yeah. And you can see it's not quite perfect, because early on in the clip, if you look at one of the columns of the bridge from a particular angle, it looks disjointed. Can you see that one? Oh, yeah. The back. Yeah, it does look quite lined up. And then it sort of lines up when we get to this angle. Also, if you go back to the beginning of the clip and you look at the cars driving on the bridge, they're driving on the wrong side of the road. Like that one's about to cause a traffic accident. There's some data from the UK maybe. I guess the other detail is in computer graphics, it's incredibly difficult to simulate fluid. And it's still a little bit wonky with it, with the waves. They're a little bit static. Yeah. I've seen other Sora clips where it captures the motion of water just incredibly one thing i'm really curious about is just how sora works under the hood and just how they're generating these videos so dan can you even say a brief like a uh a primer on just like what's actually going on and one thing i was particularly curious about is, is this a new model? Or is this an extension of the Transformer model that we all know about as powering ChatGPT? I think the TLDR and the really cool thing here, it is really a combination of a Transformer model, which typically has been mostly used for text, and a diffusion model, which has has been mostly used for text, and a diffusion model, which has been used in, which is a lot of the tech behind DALI, Mid-Journey, to generate images. So it's combining these two and then adding a temporal component so you can see the consistency between frames and the time. And I think the key thing that OpenAI did was to train this with videos and with what they call space time patches. So it is like this, basically this 3 by 3 matrix of pixels. So you have the space spatial. And then patches of temporal, which is like multiple frames create a video. And the way they do it, they have a variation of the sizes of these patches. It could be certain size smaller to bigger in XYZ, basically. And then they basically train all this in this giant architecture, which is really expensive. And so are the patches, are these space-time patches the video equivalent of tokens? Sort of, because I think there's a lot of prior work behind Sora, because the first thing is transformers have been mostly applied to text, and one of the prior work arts was Google's work on demonstrating that you could do transformer models not just for English text, but for images. So that was a foundational paper that came back in, I think they published it in 2020. And the paper was called Images War 16 by 16. So they call it a visual transformer. So they demonstrated that you could create and use transformer models for image recognition tasks because the state of the art up to then was convolutional neural networks, which was very expensive to compute. So that was one piece of the puzzle. The other piece of the puzzle was kind of the space-time concept. And I think some of that comes from stitching some different work on the past. There's this other paper, World Model, that came out in 2018 that separated... It's for robotics, actually, that separates the detection piece. So that's kind of the perception of the visual part. And then the other piece is the memory model for the temporal aspect. And the temporal aspect in the World Model paper uses RNMs. And then there's a controller model that combines it. So what, I mean, they don't explain too much OpenAI. This is just a bit of just me looking at it. I don't know. This is one of those things that OpenAI is a bit cagey about it, but we can only speculate it's a combination of like robotics papers plus transformer plus text. And then how much more expensive is it to generate one of these videos compared to sharing the text? How do we even think about that? Oh, man. So imagine the GPT-4 is like a trillion parameters. And that, imagine, is only two dimensions, right? Text is just the matrix of 2 by 2. Now this is like an order of magnitude. So I can imagine it's like at least one order of magnitude. 10 trillion? MARK MANDELMANN- That's amazing. So probably 10 times the amount of GPUs. I can only imagine. I think it was about 20, 30,000. I forget exactly the number of GPUs that took for GPT-4. MARK MANDELMANN- What's crazy is that we have companies within YC that have also been able to achieve similar types of functionality. And they clearly have way less resources than OpenAI does. And so I'm curious how they managed to do that. And the way I kind of think about this is that there's the components of building one of these foundational models, like data, compute, and expertise. Should we talk through some of the YC companies and how they've managed to hack each or all of those things. Basically, how do YC companies build foundation models during the batch with just 500,000? Yeah, I think it's an important topic because I think because people know how much money OpenAI is spending on GPUs, there's this meme going around that in order to do this, you need to like have raised like billions of dollars and have like a data center full of GPUs. And we've actually seen that it's not true. There's actually a bunch of companies in the current batch, Winter 24, right now that just in the time of the batch, with just the 500K that YC gives them, have actually built really awesome foundational models that are producing magical results. Should we look at some of these demos and talk about how they managed to get this to work? Yeah. Let's start with Infinity AI. Infinity AI is a company in the current batch. And what they do is they make deep fake videos of a particular person. So for example, they have an AI replica of Elon Musk, and you can just tell Infinity AI what you want Elon Musk to say, and they will produce a video of Elon Musk saying exactly that thing. You want to watch a demo? Yeah, let's see a demo. Let's watch the demo. Speaking of IC companies training their own models, did you guys see the Infinity AI demo last week? Yeah, they're a company in my group. Infinity allows people to make videos by just typing out a script. Wouldn't it be cool if this podcast were actually an Infinity AI video? That'd be super cool. You think they'd be up for that? Well, guys, I have a surprise for you. So special thanks to the Infinity AI team who made a model for Of The Light Cone podcast. And the way that they did this is they literally just downloaded our youtube videos from the first three episodes and they trained their model on that and the cool thing about these models now is like you don't need that much data once you've trained the foundation model to adapt it to learn a new person so just the like hour or so of youtube video that we had was enough for them to get a really accurate representation. I could talk about another company. So let's play with Synclap this. Synclap is an API for creating real-time lip syncing. And the crazy thing about this team is that they train the models on a single A100. And it's generating these kinds of results. So let's take a look at it. I'm guessing this guy doesn't actually speak Hindi? No. Okay. One thing I noticed is that the lip syncing is extremely accurate. It really looks like he's actually speaking Hindi. Yeah, and if we put it in this framework that you were mentioning, Harsh, with how YC companies do this, there's different vectors. There's computation, data set, and speed. So they kind of hacked all of those. So for the data set, the clever thing they've done is, unheard of obtaining a video model, video audio model with so little resources is they compress a lot of the data and use low res video so you don't need the high res video because if you have a high res of 1080p versus let's say the 241 version that's like a factor quadratic factor less because it's two dimensions, right? So they've done that. The other thing that enabled them to really move a lot faster is the deal that we did with Azure, where we have a dedicated GPU cluster for companies in the batch. They've been able to iterate 100 times faster than they were before in the batch. MARK MANDELBAUM- So a lot of companies out there, they decide they need to do fine tuning, they need access to GPUs, and they just can't get it. Or you've got to pay an arm and a leg and prepay for a year in advance, and maybe you'll get it in 2025. But if you're in the YC batch, turns out you can get them. Yeah, you get over half a million in credits. And there's no contention for resources. You actually get instant access within 24 hours for a GPU cluster. MARK MANDELMANN, But it's pretty cool, because YC invests half a million dollars. But I think all the companies in the YC batch that train these models, I think they literally didn't have to touch the YC money to train the models. That was all extra free money, unrelated to the YC investment. Should we talk about Sonato? So Sonato is another company in the Winter 24 batch, and they have built a text-to-song model. So you can give their model lyrics to a song and tell it who you want to perform the song. You can tell it, I want Taylor Swift to sing a birthday song for my dog, and it will make exactly that song. There's only two or three models in the world that have ever been trained that actually do this. And I think Sonata is actually the best one. Oh, wow. And the really cool thing is that the founders of Sonata are literally like 21 years old. So, Harj, to your point about expertise, this was not built by like PhD machine learning researchers who have been working in machine learning for like 10 years or something. This is literally built by 21- old new college grads. And they built this thing in two months and they did it. Basically they just taught themselves. They just like went online and they like figured out how to do it. That is very impressive. Should we take a look at it? Yeah. So this is a song that they made for the YC batch and it's like a power march about Y Combinator. Yeah. Valley, where futures are made. We the founders of YC will never fade. We'll never fade. We'll never fade. Is this how we're going to open the badge? Yeah. That's a good idea. We need big orange banners behind us. And we have to wear military garb. With orange armory. Gary, we could do our own song for Demo Day. Oh my God. AI generated this time. I think we have to now. We have to. This is very impressive. One thing I really like about this is like, you can actually understand the lyrics. Like it really does do the lyrics, but it really does sound like someone is singing it. This is the first time I've heard AI vocals like that. Yeah. And to your point with Jared, there's another company that also didn't have the expertise of PhD in machine learning. It is called Metalware. They're building a copilot for hardware. And these were founders who used to work as hardware engineers at SpaceX, and they had to build all these hardware designs. So they weren't familiar with building hardware. And when they came into the batch, they decided to build basically a co-pilot for hardware design. And they didn't have much AI background, and they figured it out. And one of the cool things about them is they also trained a foundation model for this, because there's no model available for this. And they were able to do it during the batch. And in that same framework of the things that they hack with data and computation, in terms of the data, they got away with using less data but more high quality. What they did is they took a bunch of figures and information from textbooks on hardware and they scanned all of that and use that as input, which is clever, right? The other problem, the other thing, because they didn't need as much data, then they could choose to work with a model that's less computationally intensive. So they actually use GPT 2.5, which seems counterintuitive because the 2.5 GPT only has like 1 billion plus parameters. I think it's 1 billion, right? Yeah. Versus GPT-4 is like a trillion. And they were able to get a way to use less computational resources because they use a smaller model and better data. And then they could do all these hardware design copilot tasks, which is really cool. So when you kind of constrain a lot of your tasks and you're very specific and the data set is very high quality, that's another way you could hack and build a foundation model during the batch. And therefore, all different kinds of applications, not just generating video text. There's one that I'm really excited in the current batch called GuyLab. There's one that I'm really excited in the current batch called GuyLab. They're building an explainable foundation model. Because one of the things with all these foundation models and deep learning is kind of this black box magic. Nobody knows what's going on. You put in the data, it kind of predicts the label, and you have no idea how that happened. no idea how that happened. Prior to deep learnings, you could, because you could have the weights and understand which feature indicated and gave the weight for the label. So this team is building a foundation model that can explain the outputs. And they trained a model during the batch. Nice. As a founder, when is it the right call to invest in building your own model versus just using one of the existing open source models and fine tuning and tweaking it to fit what you need? Well, I guess it depends, right? It depends on what you're really looking to build. If you're in a very specific and it can be niche space, you can get away with training your own foundation model like the metalware guys. But if you're, let's say, doing something more with language, GPT-4 gets you quite further along. So it depends on the task too, right? So if we're thinking about it as data compute expertise, we're basically saying expertise is maybe overrated. We're proving that if you're just smart and willing to read the papers, you can figure it out. expertise is maybe overrated like we've like proving that if you're just like smart and like willing to read the papers you can figure it out compute there are way like what being yc is one way to get around that like you can get credits and you can take some of that cost off and so then is it like the data piece is sort of where all the edges like if you can find high quality um sorry saving it like high quality but not like giant data sets. That's the hack? Oh, yes. Let's talk about Find. So Find is this company that's building a copilot for software. The answers that they're generating are even better than Stack Overflow. Oh, interesting. And these were also kids out of college with not a lot of background. than Stack Overflow. MARK MANDELMANN- Oh, interesting. PRIYANKA VERGADIAANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANANAN it and that got like a lot higher quality imagine that it's like basically infinite if it's synthetic it's interesting because i feel like synthetic data has been looked down on it was controversial yeah initially yeah why like why was it originally controversial and why does it actually seem to be working it seemed like circular it seemed like it would be impossible for a model to generate its own data and how can you learn from the data that you generated yourself? It wasn't obvious that such a thing could be possible. It seemed to violate some conservation of energy. I remember it was like the meme that was going around on Twitter was like the mosquito drinking its own blood. And this is how synthetic data works. But then it turns out it actually works. Interesting. I think maybe this is related to the idea that some of these LLMs are actually capable of reasoning. And once you can reason, maybe that's the part that sort of spins up the flywheel and makes it possible. And there are other interesting analogs that I think there's a healthy debate out there whether or not this will come together but you could look at self-driving car models are often trained on massive amounts of simulation data instead of actually real drive time you know sometimes by a factor of ten to one or more and that might end up being true for some of the generative AI models too. Is it possible as Sora will do that as well? Like Sora generate its own video to continue training and improving its own model? Probably, yeah. I know OpenAI doesn't share much about their data sources because that's part of the secret sauce, but 100% they're using video footage that's generated from Unreal Engine probably or Unity, one of these game engines, because they have a full physics simulator. So you could create multiple scenes of the same, let's say if you have the example of the car driving on the cliff, they could generate it from all multiple camera angles because what that game engine does, you can position the camera anywhere and you could basically generate all the footage on all possible camera views. The physics part of this is really interesting. I feel most people, when they are seeing these Sora demos or just generally get this concept, your mind goes to, oh, this will be cool for generating films or video games, like entertainment. But if what you're saying is it can actually simulate the real world, there's probably going to be lots of further reaching implications for that. Like what are some of like, what happens when you have a model that's able of like simulating real world physics and where does that apply? Well, I have a good example. This company Atmo, which we funded in 2020, they built their own foundational model for weather prediction. The way they did it is they trained a model on like, I think, 90 terabytes of weather data. They've programmed in a physics model of the world by starting with actual equations of physics. A giant polynomial. Yeah. It's effectively a giant polynomial. And it's so expensive to run. It has to run on a cluster of supercomputers. And it's so expensive to run. The only place in the world that actually runs this model is NOAA, the US government agency. They're the only ones with the supercomputer cluster that runs the physics model. And so every weather app that you go to, every weather channel, they're actually not predicting their own weather. They're just downloading the government prediction data and wrapping like a nice UI around it. There's only one actual physics simulation for weather like in America. And so, and like no commercial company has been able to create their own version because it's too expensive to do it the old school physics based way. And so it's really cool about Atmo is instead of using the old school physics way, they've trained a foundational model. And using machine learning, it's like a million times more efficient to run the same calculation or something like that. And because of that, this startup, which has only raised a seed round, is actually able to make a weather prediction model that is more accurate than the NOAA-funded one that cost over a billion dollars. MARK MANDELMANN, JR.: Interesting. What's really surprising about the text-to-video is just how far-reaching the implications are. So you can go way beyond just generating video games. We can do weather. What are other examples of cool things that we could do if we can generate, have a physics simulator of the real world? Well, there's a bunch of companies that are applying it to biology. Diana, do you want to talk about a couple of those? Yeah. So it turns out all these foundation models are great function approximators for anything. Any function. They're general purpose learning algorithms. And the human body can be simulated with functions too. So one of the companies that we funded as well is called Diffuse Bio. They're building generative AI for proteins. So what they're doing is building these big models to be able to create new molecules for new types of drugs and new kinds of gene therapies. And in order to hack this aspect of how do they make progress with not as much resources, they had a lot of expertise. This is different than the set of founders we talked about that don't come from the background of AI. Namrata, the founder, she published some very legit papers in Nature before this. She had a lot of expertise in terms of how to short-circuit the computation loop. lot of expertise in terms of how to short circuit the computation loop. What she did is build custom kernels on the model so that the whole process of building the foundation model is a lot faster with less resources. So that's one. The other company in the current batch is- Pyramidal. Do you want to talk about them? They're building a foundation model for the human brain, which turns out they're predicting EEG signal which could be used for all sorts of applications from predicting stroke to reading at some point they could your brain could be read perhaps and what EEG signals are they're also temporal so sort of like Sora. Sora has like the images plus images over a timestamp. So that's video. So EEG is the same thing. It's just an electrical impulse, but over a time period. So they kind of do something similar with chunking space-time chunk, but for EEG. So they're able to train this model. And the way they were able to train and iterate during the batch, they were experts in this space. So they also did a lot of hacks around the computation where they found a way to divide a lot of the sequential data into chunks, sort of like what Sora has done. And that actually reduced the runtime complexity by quadratic, which is impressive. And they could get a single run of iteration of an initial model with just 800 hours of GPU compute, which is really cool. One thing that's really cool about that is if people sat down and tried to think of different applications for foundational models, EEG data would not be the one that would immediately come to mind. And to me, that suggests that there's probably a lot of other application areas like EEG data that just people haven't thought of yet. Yeah. It's like, who would have thought that EEG is sort of like videos? It's just this whole concept with space-time. Space-time, lots of things. It's also possible that applications of AI that people thought would exist will now exist, like robotics, I think, is a good one. That's a huge one. exist will now exist, like robotics, I think, is a good one. MARK MANDELMANN Yeah, that's a huge one. MARK MIRCHANDANI You remember, I think we talked about this in a previous episode about how when Sam was starting OpenAI, he talked about they originally thought that AI in robots and AI in the real world would be the first application. MARK MANDELMANN And I remember I went over to the OpenAI office in the first year or two, and they had all these robots trying to like learn how to solve the rubik's cube by like reinforcement learning yeah which is also kind of an interesting side note because like opening is so wildly successful right now that it's easy to think that they knew that like they they had this like straight line path to get there but it was definitely not that it was like a meandering path they pursued a bunch of dead-end ideas like the reinforcement learning robots that didn't work but even the researcher working on transformer architecture at OpenAI was off in a corner, I think, at the start. It wasn't clear even within OpenAI that that was going to be the right thread to pull on. So the and just texture video is interesting. So again, if we have a real physics simulator for the world, that potentially getting plugged into robots is a breakthrough to make the AI robot a reality. And we actually have a company in the current YC batch, Kscale Labs, that's working on consumer humanoid robots. MARK MANDELBACHER- That's cool. FRANCESC CAMPOY- Yeah. And they have a pretty cool demo. It's very early. But a lot of the sci-fi stuff is actually now becoming possible. The cool thing about Ben, who's the founder for K-scale, he was the guy that built the foundation robotics model for Tesla. Yeah. Oh, cool. He put it into the Optimus Prime robot as well. Oh, awesome. The thing about the real world is governed by the laws of physics. And it turns out we have a bunch of equations that can describe it for different things like weather. There's also the space, for example, there's this company that we fund called DraftAid that is building AI models for CAD design. So CAD follows a lot of the laws of physics with Newton, right? With force, shear, et cetera. And a lot of software behind SolidWorks and AutoCAD run on these really old kernels that basically, again, solve these giant polynomials of lots of equations so that when you do a design of a structure and you want to calculate the force and the tolerances, it's accurate because you don't want a building to just flop, right? So what they've done, and it's very expensive. I mean, whenever you build all these models in CAD, and these kernels are super old, and they kind of, at the end of the day, they run on these equations that compile, I don't know, to some wild thing like Fortran because they have not been updated. What Draft8 is doing, they are short-circuiting some of these with AI models that can do some of the predictions. So there's a lot faster and cheaper in terms of computation. There's a lot of computational geometry computation behind the scenes. That's really cool. That's a perfect example of just like a valuable problem to solve that the general purpose models just aren't going to get around to specializing it. MARK MANDELMANN, JR.: Hi, that's a great point. And there's a lot of startups that are very worried that if they go into AI, they're going to get run over by OpenAI or other foundational model companies. And so one solution to that is train your own model that's doing something else. MARK MANDELMANN, JR.: Yeah, great point. MARK MANDELMANN, JR called Playground run by our friend Suhail Doshi that is a good example of actually you probably can go up against people who are really well funded and come up with something that is far better. What we're looking at here is the newest version of Playground 2.5 and they're hot on the heels of Midjourney but at the same time, the models that they've actually even released open source go toe toe against the latest versions of stable diffusion, and in a lot of cases, way outperform that. And they've done it on far less money than Stability AI and other teams in the space. So I think Suhail and Playground are really one to watch to sort of go toe-to-toe with Midjourney and in the long run, potentially beat it because I would never bet against Suhail Doshi. That guy is a beast. The image quality is super impressive. That looks so cool. And maybe some of the audience would have thought that Suhail comes from an AI background, but he doesn't. Yeah, he started Mixpanel before when he was 19. And Playground is also an interesting game, something that Harge was talking about last night, which is the phenomenon of companies pivoting into AI. Because Playground actually did not start with this idea. When it started, it was a completely different idea. And a couple of years in, Suhail, after raising a bunch of money, Suhail hard pivoted the thing into AI. And he literally just taught himself AI. I think he locked himself in his apartment for a month and just read AI papers and then he built Playground. So don't be afraid. I mean, I think that that's one of the most interesting things that we've seen across many of these different examples that if you're looking for a reason why you can't succeed, guess what? You're right. But on the other hand, the field itself is so new, so brand new that if you spend six or nine months literally reading every paper and then meeting all the people who are in the space and they'll meet you, you can actually be on the cutting edge in relatively short order. And that's an incredible blessing. Totally. It's a really important message actually, right? Because we're all grateful to SAM and OpenAI for bringing this field forward and making all of this stuff possible. But at the same time, all of the news headlines tend to be around the companies that are raising huge amounts of money or about Sam himself as a world celebrity at this point. But you can actually compete with open AI for very valuable verticals and use cases by training your own model without having to be Sam Altman or having $100 million. So we're out of time for today, but we could talk for hours about the crazy things that we're seeing in AI being built by people who are probably not that different than you who's watching right now. A lot of the world right now is looking at people like Sam Altman and Dario Amadei and some of the luminary figures who have really pushed forward the whole space. But remember, all of these people started someplace. And we hope that Y Combinator might actually be the place for you to start, just like it was for Sam Altman back in the day. That's it. Catch you next time.