 Hey, this is Craig Cannon, and you're listening to Y Combinators podcast. Today's episode is with Dalton Caldwell, who's a partner at YC, and Juan Benet, who's the founder of Protocol Labs, a YC company that's working on IPFS, Filecoin, and Coinlist. If you're just getting into cryptocurrency, I highly recommend listening to episode 244 of Tim Ferriss' podcast, which does a pretty good job of covering all the terms and explaining how they all connect to each other. And before we get started, I want to let you know that this is a really long episode. So it's pretty much broken up into three parts. Part one starts right after this, and it's Juan's explanation of IPFS and Filecoin. Part two is our conversation with Dalton, and that starts around minute 11. And part three is Juan answering questions from Twitter, and that starts around one hour and 40 minutes in. All right, here we go. Let's just start with a description of all the words we've been talking about. Yeah, IPFS, Protocol Labs, etc. So Protocol Labs is a research, development, and deployment lab for networks that I started to really build the IPFS project and build Filecoin and create a place where we could create the kinds of projects that could turn into something like IPFS or Filecoin or other things. I really wanted to build an organization that someone like Satoshi could have seen as a way to build a project through. It'd be like, oh yeah, instead of doing this on my own anonymously, I could go and build it in Protocol Labs. And it is born out of a personal frustration where when I was starting the IPFS project, I didn't have such an organization that I could go to and go and build a project there. Really, I think the only option was either university or Google. And in the university case, it would have been killed in the publish or perish world where like, hey, this is way too ambitious. Focus on this one little thing and maybe publish that and move on to the next thing. And it would have not been an implementation project. You know, similar to how the web could have never really been built as a grass-root project. And then the flip side, I think this kind of tech is stuff that google might be interested in in funding from the perspective of google funds a lot of protocols and funds a lot of research but it also kind of runs counter to basic google positions around you know data control of data and how the internet how information flows and all that kind of stuff and And it's like in direct opposition. So it's stuff that, that probably shouldn't have been funded or in, in, you know, direct control by Google. And it's the kind of stuff that, that I, that has the potential to, to really rebalance power on the, on the internet. And so, you know, figured I would, I would start an organization that's separate. And so Protocol Labs is really a group that is trying to create a number of these projects and protocols around things that we think are broken on the internet. And the charge that we have for ourselves, the mission that we have, is to and and improve and upgrade a whole bunch of the the the software and protocol machinery that we have um running the internet both you know in low level actual internet part or like the web and like more more user user facing pieces and um we have a very open-ended kind of perspective of like hey we just want to improve computing in general and improve the pipeline of going from research to a product that people use. It just happens that for now and for the next few years, we're super focused on how information moves around the Internet, how to distribute it better, how to change and rebalance power associated with information, give people sovereignty of data, give people, and just make the internet more efficient, make it, you know, route around things like, you know, attacker and hostile censorship, make it so that, you know, information has more permanence, a whole bunch of questions around this. And, you know, the two projects there are, you know, one of them is IPFS, the Interplanetary File System. It's used by a ton of organizations and both businesses and projects and blockchain networks and governments and so on. And it's used in a whole bunch of cases around, you know, I think a short way to describe it, Bethesda's saying, hey, it's a large-scale content-addressed content distribution thing. And, you know, it's a protocol. It's a peer-to-peer protocol for moving around anything, any kind of content, files, data, you know, hypermedia, whatever, in a peer-to-peer way. And, you know and with proper content addressing and cryptographic verification and all this kind of stuff, and a whole bunch of tooling around the guts of making all of that work, which is peer-to-peer networks and the ability to work across a whole bunch of different transports. There's no end to the really important pieces of like the peer-to-peer machinery that you have to build that the IPFS project was, you know, really about and that's used by a ton of people both in the blockchain space and outside and it's used in the blockchain space because it fits really well with the model of like you have authenticated data structures and you have to, you have hashes and you address things that way. And it's just outside because people want to distribute things in a, in a better way. People want to address things by what they are, not where they are. Like it's really time. It's kind of like it's time for the internet to move from location addressing to content addressing. And in a big way we've been, I guess, appointed to do so. And we have to slog through the really hard work that is doing that. And we're doing it, and it's great, and we're succeeding. But there's more to go. There's a lot more to go. What's the current status of making it all human-readable? Because I knew that was an issue early on. Oh, like making human-readable names? Yeah. So human-readable names are an interesting question. Human-readable names should map to content, and people should use them when they know and are aware that that name is now subject to a consensus protocol right like in a way human readable names um either require a consensus protocol to that is global scale and agrees makes everyone agree on what the value what the value of a name is or they're meaning like, I think there's like a GNS, which is like the new naming system, which is relative on like a trust graph. So, you know, and it kind of maps more to how humans think about names where like, you know, I might call a friend, Jeremy, and I know him as Jeremy, but in, you know, he actually might have a last name as well. And he might have other names that he goes by on the internet. And other people call other people Jeremy. And so GNS is an interesting, or the approach of using trust graphs and so on, or social networks to name people is a really interesting and good one. But it doesn't give you URIs or names that you can print on a billboard that a ton of people can look at and enter into their computer, which is the whole point of human readable naming. And so, you know, you really are stuck with consensus. And so when you're stuck with consensus, you either have something hierarchical like DNS and so on, or you have something like blockchain naming, so like Namecoin or naming, so like Namecoin or ENS or Blockstack. And you have a situation where human readable naming is important for people to type, but I think we have this massive addiction to human readable naming where it shouldn't be used in a lot of places because it brings in a whole bunch of baggage around, hey, now you need a consensus system, now you need an artwork stack, now you need a whole bunch of things that normally you shouldn't need to just address or point to some information. And so we still want hashes to be the main thing that people use to link to things, just maybe allow human readability as an entry point to all of that. Do you want me to describe Falcon first, or do you want to dive deeper? Yeah. So then the Falcon project is a, it was born out of IPFS as a way to incentivize the distribution of content in the IPFS network. And that's where you think about the problem of storing bytes of data in the world. And you have a situation where there's a lot of people with disks and there's a lot of people with data. you have a situation where there's a lot of people with disks and there's a lot of people with data and it's effectively a market where people want to buy storage and some people want to you know provide storage and provide a valuable service and so in the you know old peer-to-peer tradition people would just do resource sharing and kind of try and hope to achieve like a right balance um it's been shown that that works for some use cases but doesn't work for others and what was really missing there was like an understanding that this is actually a spectrum where on one end some people contribute massive amounts of storage and don't really need to use the network very much. And on the other end you have people that are contributing or asking for massive amounts of storage to store all their data and don't plan to contribute any storage. And so this is basic, like, hey, introduce a currency and now you've mediated this market. And so that's what Falcon is about, is creating a currency that can mediate this market. Now there's a whole second aspect to it, which is you can look at a network like Bitcoin as an entity that managed to get tons of people around the planet to amass massive amounts of computing power to maintain the Bitcoin blockchain, all of the Bitcoin mining that's going on. And can you create a different proof of work function that maintains a blockchain that instead of just trying to crunch through hashes and find the low target, that also causes a valuable side effect. And that valuable side effect is, hey, you have to store a whole bunch of files in order to have power in the consensus. And so a way of framing it is that the Filecoin consensus, if you want to participate in the Filecoin consensus and maintain the Filecoin blockchain, what's counted is not your CPU raw power as your influence over the consensus, but rather the amount of storage you are providing to the rest of the network. And so for that, we use proofs of storage, and specifically a new kind of proof we came up with, we discovered, which we call a proof of replication. And so that checks and verifies that content has been correctly and independently stored. Independently doesn't mean like different physical hardware, but rather it means that a different array of bytes somewhere is being used to sort of this and you can't deduplicate that. And that you can't cheat it in that, like you can't generate, like you can't pre-generate a lot of the content and cheat. Like there's a whole bunch, this is like a very specific problems. But the thing there is, Filecoin, with this different work function, can organize massive amounts of storage to then sell in the network. So you get a lot of people to mine the currency, and you have a very strong incentive to mine the currency, and then you can sell all that storage, that supply that comes on, to users. And so that's a mediate this. It's a blockchain-powered decentralized storage network. That's the way that we can think about it. MARK MANDELMANN, DOLAN CROSBY, DOLAN, you want to just kick it off? What's your first question? So my first question is, maybe start with a timeline of you as a founder, what your initial idea was, why you started the company, and just how we got here. Sounds good. So it was probably 2013, late 2013 or so. I've been working on a whole bunch of knowledge tools. knowledge tools. So this means software tools that can help you learn faster or help scientists figure out what's in papers and so on better. And I found this really annoying problem, which is data sets, like scientific data sets, were not well-versioned, were not well-managed, and so on. And there's a whole bunch to that problem, but it struck me as this hugely lacking thing that computer scientists have Git and we have versioning, and we also have BitTorrent, and we know how to move around large content volumes of data very efficiently in a peer-to-peer way. And so what really seemed to be missing was this sort of combination of Git and BitTorrent that would enable these data sets to be distributed worldwide, well-versioned, and so on. And so that sent me on a path of re-engaging with a whole bunch of stuff that I'd been thinking about prior, like many years before, a lot of peer-to-peer stuff. So my background is in distributed systems and networking. I studied that at Stanford. And so at the time, I had been looking into things like wireless networks and why peer-to-peer networks like Skype worked and so on. And it always struck me that that was a very untapped area of potential. It just seemed, I think the potential there was like vastly under underutilized and so a lot of the problems with usability i don't know if you know my whole background but my first company i mean that i started was was a peer-to-peer it was um it was distributed social networking and so a lot of these ideas keep recycling every few years yeah and one thing that we noticed is how hard it was for users to get the negative side effects of having something, just having something that is peer to peer. BitTorrent worked pretty well. But even Skype, Skype kept it really, you didn't know that it was peer to peer. And unless your, unless your upstream bandwidth was saturating and you got a nasty letter from your ISP or something, you had no knowledge as a user. And so sort of my takeaway during that era was that usability always trumped the elegance of peer-to-peer models. And then when I saw YouTube take off, YouTube is exactly the sort of thing you would expect to be built on top of BitTorrent, but in fact it was entirely centralized and they were streaming everything themselves. But holy cow, because it worked so well and flash video worked so well, the culmination of those events happened. And so my kind of knowledge going into this of, even for the, you know, going back to your story in a second is usability to me is such as a, such an important concept to have these distributed systems get used by end users. Absolutely. Right. Without a question. And I mean, very, I think famously, I think Drew Hasen has even pointed out how there were a whole bunch of clunky sync, file sharing sync things that like really just did not work. And the big thrust of Dropbox for a while was just get usability right, get the user experience flawless. And it almost doesn't matter what you do underneath the hood as long as you make sure the UX is great ux yeah because like i'm sure back in the day everyone was like well we have rsync that's good enough you know like we don't need dropbox we have rsync right but but then there's like this other fundamental difference which is that yes absolutely building these systems is hard and you have to pay attention to the ux but there's a whole bunch of places where economically it makes a ton of sense to do something better and to do something that has a different arrangement. I think there was a period of time basically from 2003 to 2009 or so where peer-to-peer was sort of dead. And I sort of call this like the peer-to-peer winter, similar to the AI winter. There's been a series of AI winters. That was kind of like the peer-to-peer winter. And this probably was where more peer-to-peer winters before, because peer-to-peer is actually a pretty old concept. A lot of people have been struggling with the differences between making things peer-to-peer or centralized since the beginning of the internet. So I think there's a whole bunch of reasons why a lot of the companies failed, that were getting built around that time, or products failed, and why there were very few success stories. So I think Skype and BitTorrent were probably the biggest success stories from that entire time. And yeah, I think Skype didn't really talk about peer-to-peer very much, and BitTorrent, aside from Blizzard and a few others, it was mostly used for moving around a lot of movies. And so I think that said though, it doesn't, the actual CS behind it, the actual engineering reasons for choosing to do something peer to peer make a ton of sense. And this actually connects very well with Protocol labs as a company because the key thing is to understand deeply what what the benefits of using some technology are what are the underlying you know from from like a research and theory perspective like what is the theoretical difference between between doing one thing one way or another like between centralized models or decentralized models between doing things peer-to-peer or doing things in a hierarchical, like well-structured way. And those different properties can give you a different range of opportunities. Now, peer-to-peer is a lot harder to build with because you don't have a lot of control. When you build centralized things, it's a lot easier for people to get going. It's a lot easier for, you know, lots of established ways of doing things and so on. And like rolling out changes. I mean, we can enumerate all these, but like when you, it's easy to roll out a website. It's hard to distribute software. I mean, and get everyone to upgrade. And I would argue, I would argue that it's easy to roll out a website today because you're, you're working on top of decades of centralized engineering. Whereas we haven't had the same level, deep level of engineering on the peer-to-peer side. So the majority of groups that end up going into peer-to-peer end up having to create a lot of stuff from scratch because it either hadn't been done or had been done in a way that wasn't reusable. And this was actually one of the big thrusts of the Epifest project in general. It was create a whole bunch of, create a huge toolkit that people can use to build applications in peer-to-peer land without having to like reinvent everything from scratch it was like this really huge frustration for us was like okay great like it's 2013 14 at the time and we have to go back and like rewrite tons of normal peer-to-peer stuff that was you know could have been written 10 years before mostly because you know the language and tooling had. We wanted to do a few different things. We couldn't reuse a whole bunch of the libraries that were out there. Or the libraries made a whole bunch of assumptions about reality that were broken. I mean, very famously, a lot of people, just from the engineering perspective, things like assuming that you are going to be working on top of TCP and that the port that you have is a TCP port and that it's not a UDP port or whatever, or even that you are going to be working on top of TCP, and that the port that you have is a TCP port, and that it's not a UDP port or whatever, or even that you don't have some other transport, right away can make a library completely unusable for a project like years down the road. MARK MANDELMANN, I remember dealing with NAT traversal. TAYLOR BOETTICHER, Yeah. That was a NAT traversal is a wonderful problem. It still plagues people everywhere. MARK MANDELMANN, Let's go back. You were working on distributed systems. This was interesting to you. How did this turn into the company? What was the thing you applied to YC with? What was the timeline there? ZAKIR HUSSAINI, I applied to YC with the plan of doing this, of building both IPFS and Filecoin and a company called Protocol Apps. I mean, it was right away from the beginning, it was like this large scale plan of going to build a whole bunch of different things all around distributed and peer-to-peer systems, all about decentralization, and with a business model of taking a portion of currency. And this was in 2014 when this was a very new thing, people weren't doing this. There was basically Ethereum and a couple other groups that had also gotten to the same conclusion. And I mean, aside from a few side projects that we've started and so on, and basically delaying our timelines in terms of software taking a lot longer to build than expected, we've pretty much followed the plan in that from the beginning, we had both IPFS and Filecoin. And the, you know, I guess connecting to what I was saying earlier, so I had this problem around data sets and versioning and so on, and that led down the rabbit hole of, like, really thinking through how information moves in the network, how information moves on the internet in the first place, how does addressing, how do we do addressing in general? It turns out, like, with HTTP and so on, we do all this location addressing stuff that works very well for a certain kind of use cases, but absolutely terrible for a bunch of other set of use cases, and introduce a whole bunch of brittleness to the infrastructure. Right? And so, this whole set of... Exploring the set of ideas that had been well-trodden by lots of groups before me and before the current wave of peer-to-peer. Do you remember Mojo Nation? Of course. I would run it in my dorm at Stanford. Awesome. And it had a lot of the primitives in there, right? I ran a node and I had storage space on my PC and I had fast internet. It was great. So I was not familiar with Mojo until I chatted with Zuko about it. And it turns out Mojo pioneered all this. Yeah. I thought it was so cool. I completely drank the Kool-Aid. And this was in 1999? That was my favorite thing. Yeah, it was a great era. You had the beginning of... Conamly had just been... The You had, in the beginning of, you know, Conamly had just been, you know, the first major large-scale DHD had been deployed. You had a bunch of people building peer-to-peer networks, like Kazaa, which then turned into Skype and a whole bunch of other things. And, yeah, like, it was very promising. It was, like, the moment where everyone was getting connected to the internet. You could now build, like now build huge large scale infrastructures and so on. And it just kind of, again, there was this peer to peer winter. There's a whole bunch of reasons why that happened, and people could sit around debating, but I think it had to do with the fact that the first primary use case that people were using peer to peer for was copyright infringement, and that being not a viable strategy for a lot of companies. Another thing was it was right around the same time of the rise of the normal cloud. So Google and other companies were investing very deeply into building large scale distributed systems and they were building hierarchical structures and they ended up funding a ton of work down the road in a bunch of labs. So a lot of the labs that were doing peer-to-peer research switched entirely to doing cloud infrastructure research. And so that's another avenue, that's another point. And then I think probably third or fourth, where third was there was no digital currency. So you couldn't actually pay people correctly. You had a bunch of trusted... You had the beginnings of cryptocurrency. Yeah, like Mojo was a currency, as I recall. That You had the beginnings of cryptocurrency. Yeah, like Mojo was a currency as I recall. That's right. So you had the beginnings of digital currencies, but they were still very unproven and still I think relied on significant trust in a bunch of places. So you didn't have the same level of trustlessness that you have with something like Bitcoin. And you didn't have... Yeah, I think the properties were not quite there yet with digital currencies. I think another one was just the hardware around that people had did not warrant a peer-to-peer structure yet. Meaning it made sense for a number of use cases, but a different set of use cases didn't make that much sense. It's interesting to think about computing and normal computing problems this way, because a lot of people always get hung up on how things scale. But when you actually think about the total magnitude of data in a problem, sometimes you realize, oh yeah, just throw that into one server, and you have one server, and maybe you replicate that to, you have five servers that are all full copies of the index and like you're done right like you don't have to build a very complicated distributed system to deal with this because your total amount of data is way smaller than like the latest disks right so like whatever so let's think about this just to put this in context in a lot of ways history is repeating itself and the same ideas cycle back i've heard mark and Andreessen say this before that, you know, a web van, you know, he'll keep funding ideas that didn't work over and over again, because eventually they'll work. So Instacart and web van. So it seems like a lot of these ideas are well known to researchers and computer scientists. We're trying them again. And there's a bunch of things that are different and you listed a few of them, but to enumer, massively. So just the tools are better. To something about the hardware infrastructure of bandwidth plus CPU. Computing change. Just the numbers, the actual raw numbers that people have, either just in disks. So it's Moore's Law type stuff. Yeah. Well, it's not just Moore's Law because you have to account. So you have accelerating returns in computing, in storage, and so on. Not so much in bandwidth. So an interesting point to compare is realizing that storage is decreasing in cost super rapidly, whereas bandwidth is not. And bandwidth, it always feels like the internet is really slow because we continue building larger and larger applications and larger media, but then we can't get to the moving it around as much as... Sorry, let me say that again. So there's this trade-off between storage and bandwidth where storage is significantly... It's getting cheaper at a really rapid rate, whereas bandwidth is not. And because of that, what you end up with is the feeling that constantly you're saturating your pipe, and that constantly the internet is slow, and so on, but you're just putting a lot more data through it. And bandwidth is just not improving as fast. And so eventually we're going to get to a point where it might actually be cheaper to ship around stuff to consumers. It's crazy. I mean, like already if you look at how large companies move data, they do not send it over the Internet. They send it over packages or move it around physically in some other way. Or direct fiber. Like if you do data center to data center transfer, you have a direct fiber line, and it's not actually on the internet. That's right. Like that's a, yeah. So if you have fiber, yeah, if you have like some really fast uplink, or some really fast link, not really an uplink because you're in the core, some really fast link between two data centers, then yeah. But like for example, if you're a company and you're trying to put a ton of data into Amazon, Amazon will say, hey, just ship us a hard drive and we'll put it on for you. So there's packet switching and then there's also package switching. Okay, so are those the big difference? I did the enumeration. Am I forgetting any other major factor about why this time we're running the same play again, but this time it's going to work? Well We're running the same play again, but this time it's going to work. Well, I don't think it's the same play. I think it's vastly different. I think that when you think about what the projects are trying to do and what they're building and what applications people are going for, it's very different. So I think maybe Mojo was one exception in that they were really far ahead thinking about cryptocurrency and resource sharing and all this kind of stuff. Yeah, because remember, it was hard drive space. Like again, as a user, it was like, I could rent out my hard drive space. I could rent out my CPU side. There's three things. It was bandwidth, CPU, you earn mojo from each of those things. That's right. So if you think about people like, um, there were a few people around at the time, especially like the cypherpunks mailing list, like you can There were a few people around at the time, especially the Cypherpunks mailing list. You can go back and read a bunch of ideas that have just become reality in the last few years. There were definitely a lot of people already thinking about the things that we're doing now, but nowhere close to doing them. And so there's one big difference between this wave and the last wave is that being able to access a range of applications that were kind of dreams and ideas back then, but were kind of far away, makes this wave actually quite different in goals. When you think about peer-to-peer in 2001, you don't think about Mojo that much. You think about Napster. You think about Kazaa. You think about those systems that BitTorrent maybe was like the, it was actually in the tail end. I think BitTorrent got massive and so on, but it was like there right as a whole bunch of the other ones were failing and going away. When people think about peer-to-peer and what was working really well with peer-to-peer networks at the time, it was mostly pretty simple peer-to-peer structures that, you know, definitely there were like people using DHTs. There were definitely people doing some amount of like distribution of files and so on. But it was mostly around like very simple file sharing problems. And it wasn't. So again, so to summarize, the use case really matters. That's what you're saying. So I think, well, I think both the tooling and the use case that people got to are very different. And you didn't yet have smart contracts. You had the beginnings of what smart contracts were going to be able to do, but you didn't have them in the level of trustlessness that, say, Ethereum gives you today. And that is a very important piece of infrastructure, that once you deploy something like Ethereum, a whole bunch of other things become instantly possible, which it did not have at the time. You did not have this kind of worldwide computer effectively that allows you to run some very expensive but trustless code. You don't have to trust the computers running this code on their output. Right. And like, you have a way to verify that all of the computation was incorrectly and all this kind of stuff. Let's try to use the same thought experiment. Um, there was, there's infinite demand for free music. Like I remember I was, I'm exactly the right age. I was in college when Napster took off everyone. There was a product that everyone wanted. App Store took off. There was a product that everyone wanted. Yes, it was illegal, but there was infinite demand for that. What is the closest analog for the current generation of things that you think there's inherent consumer demand for that can be the equivalent of the thing that pushes this wave? So there's a lot there because first of all, it's not about consumers. This peer-to-peer wave and the reason why it's massive is not because consumers are using it. And I think that's one of the things that Silicon Valley has failed to understand. I think in 2013 and 2014, a lot of the blockchain tech was being built in New York and Europe and far ahead of Silicon Valley. And I remember having a lot of conversations with people here in New York and Europe. and Europe, and far ahead of Silicon Valley. And I remember having a lot of conversations with people here in New York and Europe, and just the level of thought outside of Silicon Valley was vastly superior. And it was very surprising and annoying to me, because I was like, wait, Silicon Valley is supposed to be the place where all of the tech gets built, and so on. And the reality is that it's not that there was more thinking, and that certainly people in Silicon Valley understood all of that and had thought about it and so on. But the understanding about what businesses or what value propositions might actually be useful in Silicon Valley was dramatically centered around consumers. And in reality, what Bitcoin and Ethereum did was allow you to create any kind of financial instrument extremely cheaply and with almost free verification of correct proceeding of this financial instrument, which is not normally a consumer need. Okay, well, let's take another, like, regardless of the consumer part, what is the burning desire need that you think is best solved? But it's not one thing. Like, it really isn't one thing. Okay, can we name one? Maybe we should just talk about Filecoin isn't one thing. Okay, can we name one? Maybe we should just talk about Filecoin then. Yeah, yeah. So what is the burning, and it's okay if it's not consumers, but what is the thing that with Filecoin that is going to make, whether it's businesses or consumers, people get really excited about using it? And Filecoin is not representative of the entire industry. Filecoin is one example. With Falcone, the point is being able to, so this is a whole different argument that I think is, makes sense with or without a peer-to-peer winter or summer. Like, the fact, the thoughts around Falcone are about thinking about the massive latent storage that's out there and putting it to good use. There's exabytes of storage that are not in use right now. And that if you were to add them to the market, you would drive the price down significantly. And so I think trying to... And that's true whether or not there's currently a peer-to-peer wave or whether or not people are excited about peer-to-peer in any way or decentralization. And now there's a point that you can build a network like FilePoint that can use decentralization and can use financial assets created cryptographically to then organize a massive group of people around the planet to then do this. And I think just look at, so forgetting all of the excitement around centralization, just think about Bitcoin as a way to incentivize people to add a bunch of hardware to a network. There's been nothing like it. It generated a massive, massive amount of, you know, computing power dedicated to do one single thing, which is, you know, try and find hashes that are of low target. And you have tens of thousands of people around the planet that work really hard to add a bunch of hardware to this. And you end up with this insane hash rate that is, you know, when you actually work out like the amount of power and computation that it's using, it's like one of the most powerful computing networks on the planet. And so when you take that idea of you saying, create a very strong financial incentive for people to do something around the planet, and you then couple it with building some other kind of resource sharing network, something like fast storage, you can organize this massive network as well. And you can put all of that lean storage that already is there and depreciating and going to waste into valuable use. And so Falcon is a business around, you have to think about these networks as services and businesses that are solving some set of problems. But it's not always just one problem. That's fundamentally different about this type of thing than normal consumer products. They solve a lot of problems for a lot of people. MARK MANDELMANN- You said financial, though. So again, they're doing it for financial reasons. Again, what I'm looking for is what is the incentive for someone to get involved, whether it's a business or a consumer? So it's the reason you would put a miner on the network. ZAKIR HUSSAIN- For Filecoin specifically, the reason why somebody would add storage to the network, the primary motivator is also the fact that data is completely centralized in a whole bunch of providers. And we get a lot of businesses and people highly concerned about this that want to distribute their data across a number of providers and want stronger guarantees. They want a different set of features. But you don't necessarily need peer-to-peer to achieve that. That just happens to come with a package. And so I think, think about Bitcoin miners, and you can think about the motivations of Bitcoin miners are not fundamentally about just enabling peer-to-peer and so on. Their huge motivator there is money. Now, that's not true of the early Bitcoin miners. The early Bitcoin miners, a lot of them were primarily motivated by building a digital currency that was not controlled by any government. And that's something very different than what we have today. What we have today is a structure where it's a massive business and people are going for it. And so that's fundamentally different. But it doesn't make sense to try and box it and say, hey, there's one thing that the entire industry is trying to do. And Filecoin is completely different than the entire industry. We're using things from the industry to create a very powerful service. And the reason I mentioned financial instruments is because that is a fundamental innovation that both Bitcoin and Ethereum introduce. The ability to create financial instruments extremely cheaply without spending tens to hundreds of thousands of dollars, instead writing a few lines of code. And you don't have to litigate this in court if it goes wrong. It just automatically settles in a computer. And so what happened with the blockchain stuff is that software began to eat finance and law in a way that had never happened before. There were a whole bunch of things that were kind of waiting, or like a lot of ideas that people had had for a long time, some of them a few years, some of them decades, that got knocked loose by the existence of a digital currency that was ubiquitous. And suddenly a ton of these applications were being able to be built. So it's a very different thing than the early peer-to-peer time. The fact that IPFS and Fathcoin happen to relate a lot to the early peer-to-peer goals is a side effect. The majority of the blockchain world does not care at all about those early goals. They care about different goals. They care about a different kind of decentralization. So it's a decentralization of power, not of resources. So Fathcoin goals they care about different goals they care about a different kind of decentralization so it's a decentralization of power not of resources so falcon happens to care about decentralization of resources and distribution and like use and all that kind of stuff but it's but it's a very different different thing how are people incentivized with mojo to like put their put their drives online um you would get mojo is the name of the current whatever it was tokens it wasn't okay you would get you would earn mojo and you could spend it on other stuff and they were very vague about that but you could spend it on other storage okay um and what's interesting it wasn't liquid is that yeah in the same way yeah it was it was kind of like when bitcoin very first came out it was sort of like a cool thing on slash dot right it wasn't like a serious project um and what was interesting is people spent a lot of time doing black hat stuff to try to earn more. Like it was very fun to try to get more. I think a lot of people, like I used to read the commit list and a lot of people, a lot of what they had to write was anti hacking stuff, which you would expect, you know, a good, someone with a hacking brain, whenever they see new stuff, it's always fun to try to take advantage of it. Yeah. Cool. So what do you, what do you think, this is sort of an aside, but I read, I read YC applications for all this stuff. And I, I, I'm trying to understand what the best use, what do you, where do smart contracts help you as a founder? This is a little bit outside of the IPFS thing, but like, what is the use case that in its current state are most useful for smart contracts? Because I see a lot of people applying with these and I've yet to see one with a non-conceptual use case. So is there a case in your business where you would use smart contracts? You can think of Filecoin as a smart contract. Whether or not it's implemented as a smart contract on top of Ethereum or not, you can think of the idea of a protocol declaring what the rules of a transaction are going to be and a very clear cryptographic way of proceeding through that transaction and verifying it at the end. are going to be and a very clear cryptographic way of You know proceeding through that transaction and verifying it at the end like that's effectively a smart contract It might not be whether you you know, you can think of Bitcoin the whole thing as a smart. Yeah Yeah, I mean like I feel in the metaphor. I'm just I'm thinking of like the part where we eat the financial world I'm like, what's the thing hanging? You're seeing you're seeing you know super you can go today and start writing a, something that behaves like equity or something that is a derivative or, you know, all of these kinds of financial instruments that would take you a ton of time to kind of think about and reason about it and like inject into, into the jurisdiction, you know, any kind of legal jurisdiction in the world. And you're now able to do that in a totally different way with a whole bunch of assets that represent real value. And so I think that there's a ton of these that have very direct use cases and applications, but they're not consumer. And so that's why you're seeing a wave of things that seem weird to Silicon Valley. They seem like, oh, this would never work. And yet there's a ton of companies out there in the world that actually need these kinds of things, that actually think they're like, oh, wow, that means I don't have to spend hundreds of thousands of dollars and millions of dollars in legal just to understand, reason about, and conduct these transactions, and just to understand, reason about, and conduct these transactions, and then have to worry about litigation down the road in the millions of dollars to try and make sure the transaction is safe, you can then turn that into single dollars of running transaction fees. And that is a massive shift. And we haven't even begun to see the offshoots of that. There's been the beginnings of this. You see a ton of assets being created in Ethereum that have a bunch of different kinds of that. Like there's been the beginnings of this. Like you can, you see a ton of assets being created in Ethereum that have a bunch of different kinds of properties. But they're, they're fundamental. Like these kinds of assets, you know, it's effectively like you, you get to create any kind of financial instrument that you want, as long as you can reason about how to program it and you can deploy it into the network. And so you can deploy it into the network. And so you can solve a whole bunch of these kinds of problems. So one interesting example is insurance. So you can do insurance trivially on top of Ethereum. There's, I think, a really fun one that I've yet to use it because my perception on a lot of these things. Maybe insurance is an interesting consumer one, actually. So an insurance policy is a very simple idea. There's a whole bunch of regulation in the regular jurisdictions when you think about how insurance policies work. But you can definitely create structures and financial structures around insuring some activity. And so there's a contract out there where you can tell it your flight and you can buy an insurance policy for a few Ether, and it pays out. Like, if the flight gets delayed, then it pays out some amount. If the flight gets canceled, it pays out some amount. And all of that can happen by just writing a few dozen lines of smart, maybe hundreds of lines of solidity, and it needs some sort of oracle that brings in the real world data of the flights. And once you have that, you're set. And you can now create an insurance policy. So I think this was, I don't know exactly who built it, but it was an effectively trivial project. And you now have what normally would take a company of dozens to hundreds of people reasoning about all of the legal landscape around insurance and how to provide this and then legal protections of how to make sure this goes correctly and how do you collect things and just all of that madness goes away completely by replacing it with a single smart contract. And so I think those are the kinds of things we start seeing and there's a big bottleneck right now which is that the fundamental innovation is one around... Let me rephrase this, because I don't think it's characteristic of the entire space. One of the fundamental innovations of something like Ethereum is this decreasing software-eating finance and law. And when you can create these contracts and financial instruments really trivially, a whole bunch of things open up. and financial instruments really trivially, a whole bunch of things open up. And so so far the people that have waded through the difficulty in using these platforms to do this happen to be people that are looking at large-scale transactions, like things that would otherwise require a lot of money to do, or things that suddenly become possible to do in the space of crypto assets, and they're just kind of transplants of the regular world. They're looking at some way of doing some transactions in the regular world, and they say, wouldn't it be great to do that with Ether? And then they go and build it. What you're going to start seeing in the near term is that there's this blocker around user experience where right now nobody can use these blockchain systems from normal consumer devices and with that same kind of UX that people expect. So there's a massive barrier there where a ton of applications that can be geared towards consumers, right? So instead of starting from a consumer need, or rather instead of the entire space solving consumer needs, now you can create something that now solves some important consumer need. Right now it cannot get deployed easily and it cannot take off because the UX is so hard to get right. And you have, you know, every individual project has to spend an enormous amount of resources thinking about the UX of the users. Like one great example of this is OpenBazaar. It's a great project. Like they're building like it is completely decentralized eBay type thing. is OpenBazaar. It's a great project. They're building a completely decentralized eBay type thing. And they allow buyers and sellers to come in and buy and sell things. And so when the project started, they had to build all their peer-to-peer stack from the ground up. And that was a huge undertaking for them. Then they found, at the same time, we were building IPFS. And so they found IPFS. And it made a lot of sense for them to switch over to IPFS. And they did that. And so that hopefully saved them a lot of time in the lower layers. But then they had to go and build all of the UX side of things. And so they had an application that you could download and run locally. But then thinking about mobile, you now have to think and build a mobile application and give people the same kind of utility. That is yet another massive undertaking. And they're doing it. I'm super impressed. They have this awesome mobile app that, I don't know if it's out yet, but it's super exciting. I think it's one of the very first things in the entire space that gives you the really nice normal UX that you would expect in normal products. And the entire space has to catch up. So I think it's going to take about a year or two before you start seeing these things get mainstream consumer use. It could happen faster with a lot of these things. Maybe it's one library away. Like somebody writes a really solid library that kind of solves a bunch of the problems, and then everything gets easy. But just because you're not seeing a ton of consumer use things yet does not mean they aren't about to hit in a huge way. But that's what I wanted to focus on before. Cause you kind of, you kind of like just juxtapose like 2013, 2014, like people not really getting it here. Things not being built here. Obviously in 2017, things have changed, right? Like what has changed and like what's motivating people now to start building these things? Cause I wonder like, you know, we have a lot of founders listening and they're like trying to figure out the ideas, like what's needed, what, what changed to make this possible? What changed to make what specific possible? Cause there's a lot of, yeah. Okay. So, so one, one trajectory is like, okay, why is San Francisco into this now? And then the other is like, what changed to like start pushing for, obviously Ethereum came out, but then like all these products are following as well. I think San Francisco and Silicon Valley got interested when the ICO craze happened. When you suddenly had projects raising tens, you know, 20, 35, a hundred million dollars, suddenly everyone was like, what the hell is going on? What's happening? And it was actually the money that was the thing that drew attention. And I don't know, I think that's pretty short sighted. I think the underlying differences or like the underlying hard foundational work that, you know, people are seeing like reap reading the benefits of right now like all of that That creation of value and so on happened over the last two years with aetherium Which was a project that here was seen as like this crazy science project thing that like was never gonna work and was like too crazy and so on and was disregarded completely by tons of people and they just failed to do the deep thinking of like looking at these these very contrarian perspectives and contrarian ideas that dared to question underlying base assumptions about consumer products today, which is that nobody really cares about giving your data to everyone. Nobody really cares about trust. Nobody really cares about running these kinds of transactions. Everyone has some easy way to use their mobile app. Everyone trusts Google, Facebook, Apple, Amazon, Airbnb, Uber, whatever. And it's really just about convenience. And if you don't have something that's convenient, screw it. It's never going to work. And that was just false. I think that perspective, I don't mean to characterize the entire space of value that way. I think there were a ton of people thinking very deeply about what Bitcoin was going to do to the world. And a lot of people invested very heavily into Bitcoin and creating Bitcoin companies. And that turned out in a number of ways really well. In another case, not so well. But I think what can be said about the whole space is we're seeing projects emerging that are about building large-scale infrastructure that might take years to build out before the utility is shown. And that's just something that normal VC can't entertain. can't entertain. VC is not built for long-term investment in things that are extremely high risk and building some deep foundational technology. VC is tuned for 10-year returns, which means that in two, three years, you have to show a very strong sign of massive adoption in a really strong business, which means that if something is more than two years out in development and there's research questions to be solved, it doesn't fit. And so you have to go and figure all of that out before. Historically, wasn't this the government that funded all this stuff? That's right. So one of the, and this is part of why I'm building Protocol Labs, which is that there's this massive gap between, there's this huge open area where stuff is not getting funded around, yeah, building large scale infrastructure. My claim is you couldn't build something as free and open and that works as well as the internet today because no group would fund it. open and that works as well as the internet today because no group would fund it. And what you would end up with is a massively stunted version of something that is highly centralized and controlled by a couple of groups and that wouldn't have the amazing generality of something like TCP IP. Part of what's beautiful about TCP IP, DNS, that whole era of protocols was that people worked super hard for months and years at a time to think about the interfaces and refine it so that you could end up with something sufficiently abstract to support a ton of use cases and sufficiently concrete to actually work today. And that kind of development is not super fast and takes a lot of work and takes a lot of money. And that's not something that VC funds. kind of development is not super fast and takes a lot of work and takes a lot of money. And that's not something that, you know, VC funds. VC funds clear application use cases. But why would, why should VC, like in those cases, those were done by universities, right? And Bell Labs, like those things exist today. It's mostly doing AI stuff, but like the closest equivalent to that are things like OpenAI or Google Brain and all of that, where like there's absolutely no practical use of that stuff. But man, there's a lot of money being plowed into that research. No practical use for Google Brain? They're not productizing immediately. I disagree very strongly. I think that a very clear use for Google Brain is massive cost reductions to a company like Google. Yeah. I mean, I guess I can speak much more conflict about open AI because I actually know how that works. And like, there's not, we're not like productizing. But you see a lot of stuff being rolled in like speech to text already. Yeah. But it's like, again, it's not a startup. Like there's no bottom, there's no double bottom line where people are trying to monetize. Like that's not why it's being funded So I'm saying like, if you want people working on this foundational stuff, it seems like if you're trying to replicate what you feel like worked really well, do you think it needs to be direct? Does the analog need to be directly replicated? I'm putting out that these kinds of projects don't get funded. And you could see it with something like SpaceX and Tesla. SpaceX and Tesla both went through major, major funding issues. If Elon hadn't been personally wealthy, both projects would have probably failed. And here, that is a clear example of something that is SpaceX maybe not directly consumer perspective, but Tesla definitely. Tesla is a very consumer-oriented thing, but it was extremely difficult. It was a large-scale, long-term project that just scared the hell out of VC with good reason. It's extremely unlikely that you would get any of that to work. But what I'm highlighting is not that necessarily VC has to fund this. What I'm saying is that that's not what VC funds. And because that's not what VC funds and then there is no strong ARPA organizing thing is that that's not what VC funds. And because that's not what VC funds, and then there is no strong ARPA organizing major large-scale infrastructure endeavors like it used to, then you have this gap and this hole of things that weren't getting funded. And Bell Labs is a great example. Part of the reason that I started Protocol Labs is to try and recreate the spirit of Bell Labs in an organization, at least focused around networks. And the reason that you had something like Bell Labs happening was because you had an entity that was very enlightened in its perspective about technology and understood how to innovate and understood how large-scale innovations could be done and with deep investment over decades. They would run projects for multiple decades. Sometimes they would break up projects and like, here's like these first five years are going to be about this, these next five years are going to be about this other thing and so on. I had a curiosity. You wouldn't see a product until much later. Do you know what their budget was if we translate it into modern dollars? I don't know what the budget is, but it's like tens to hundreds of billions or more. It's massive. But then you figured it out with Ethereum, right? Because the value gets accrued to the people that are creating and developing the protocol, which is a fundamental shift. Yes. But that's, I think, something a bit different. I want to draw an analogy between what happened at Bell Labs and Google Brain. So Bell Labs was about constructing massive cost reductions for Bell. So the reason Bell Labs got to thrive as an organization was because it represented a very strong financial interest for this massive monopoly that had an enormous business. And so they had deep pockets to just invest deeply into things that were going to save them a lot of money later. And so Bell could look at things like, oh, wow, you know, vacuum tubes are really inefficient. Or vacuum tubes break a lot and it's a huge pain to repair them. Wouldn't it be great if we had something better? And it basically took something like 20 years. I think it's like 10 to 20 years before the transistor. And it's something like, I might be wrong in those states, but the point is Bell Labs understood the need of this massive cost reduction that happened. And it had it as one of the open problems. And so if you were a researcher at Bell Labs at the time, one of the things that you could work on that was seen as kind of a very important problem to solve was replace vacuum tubes. Create something that can replace vacuum tubes. And it took a whole bunch of open-ended thinking and deep fundamentals research from a physics perspective and solid state physics. This is like the story of Shockley and Bardeen and Bertain and so on. To be able to come up with something that became that transistor that solved that problem. But that was an innovation that happened over decades and timescales and primarily motivated by cost reductions on the large-scale Bell front. And so the funding that Bell could feed into funding tens to hundreds of researchers thinking about all these problems, this specific problem, on a 10-year time horizon, to try and get that kind of cost reduction, is something that only massive monopolies, to date, have been able to fund. It's basically massive monopolies either in business or in power. So it's either massive monopolies like Bell or Google or massive monopolies like the US in power of being able to say, we need something that connects all the computers around and we just need it. So like just fund it, whatever it takes. Or like the space race. Or the space race, right? Like we need to get to the moon. Like I don't care how much money it takes, just like make it happen. And so that kind of directed power and funding can predictably innovate, which is kind of amazing. Like you can, in the labs you had a place where they could chart out the things that they were working on and kind of think through when they were going to, not exactly and precisely per year, but they would know the relative progress through a whole bunch of open-ended problems whose solutions ended up giving people Nobel Prizes. This was the kind of innovation that is seen and recognized by the world as this stroke of genius that would have been so hard and so unpredictable and so on, and yet Bell Labs was able to reliably get a whole bunch of researchers to achieve these kinds of innovations. And so that, unfortunately, the model of why Bell Labs, the questions around why Bell Labs ultimately failed and fell apart, have to do more with the surrounding ecosystem, like its funding source. Was that when they broke apart the monopoly? That's right. So breaking Bell apart effectively stifled and killed Bell Labs. So a few things happened. One was the rise of Silicon Valley and the great invention, or not invention, but the great use of stock options, or just giving stock to everyone in a company working on something, caused a ton of people working on very research-oriented things at the time to become quite wealthy or get very significant personal returns. And that, coupled with the excitement around all of the stuff that was happening in Silicon Valley in the 50s and 60s with a number of people kind of moving out and then coming back and talking about all the great and exciting things that were happening in the West, started to drain a lot of people out of the labs and out of Boston. And so it's known as this brain drain. And part of that, what happened there was not only were people leaving and going and creating other research organizations that had different funding models, but Bell also started getting broken up. And so this is more like the 80s, 90s. I forget the exact date on this. But when Bell got broken up, Bell Labs had to find a way to like charge the, you know, new separate entities for all of its work. And it just became infeasible to fund and maintain a massive organization like that. And so it ended up breaking apart. So there's a few interesting financial reasons why Bell Labs couldn't continue existing. But the research organization itself was amazing and continues to be amazing for a very long time. And so, yeah, so according to one site, their budget was $500 million in 74, which translates to $1.5 billion today, or 2% of AT&T's gross revenue. 1 billion. 1.5. Yeah, 1.5 billion. So yeah, it was like two hours of my engine off. So I said it was something like 10 to 100. That's a lot better. That is a lot cheaper than what I expected foundational research to cost. But that's still massive, right? Like being able to, I guess on the scale of 10 years, like yeah, that's still massive, right? Like being able to, to, I guess on the, on the scale of 10 years, like, yeah, that's 10 billion. Right. So, so you, you have to have 10 to 50 billion and ready to commit them for like two decades to be able to undertake some of these projects. Um, yeah, probably self-driving cars is getting that kind of money today. Probably AI is getting that kind of money today. Yeah. There's a few things like not many though, but it's like, there's a few things that maybe if you added all the R and D budget being put into it are getting that, but it's definitely not. I think something like Google brain is a clear example of this kind of thing happening again, where, where Google saw massive advancements in machine learning. We want to apply all of those massive advancements to machine learning into a whole bunch of the normal Google applications. And we want all of our applications to get better, faster, stronger, and so on, and reduce costs. And not only are we going to be able to do a whole bunch of new things and cool things, but we're also going to be able to do them a lot cheaper, which effectively is making money, right? So the thing to think about is, once you're an organization that's big enough, you don't have to sell more products to make money. You just have to cut your costs. MARK BLYTHEUS DELGADO. And then make sure I understand. You're saying that is analogous to the Bell Labs model. I'm just making sure I get what you're saying. DAVID MALANI- So I wouldn't want to claim that something like Google to Bell Labs because I think that's a very different research, very different organizations. I think that Google Brain and X are much more focused on shorter term valuable things than Bell Labs was. I think both Brain and X can't yet afford to innovate on the multi-decade timescale. They're innovating in single decade timescales on their own. I think that if you look around the planet, they're the closest thing probably, but they're still kind of far away. And I think it'll take much more not only capital, but also reach of that organization to be able to undertake some of these larger scale fundamental. When you start seeing Google funding open-ended physics research labs like then then then we're in the for a decade or more yeah for a decade or more like where the budget yeah where you see the budget of a of a google run physics lab have a you know budget for a decade or more and like 50 plus researchers and you know you start seeing some noble prices won out of google like then then we're talking about the same thing um but we're far away from that. And I think the, I don't think we'll, we don't necessarily need to recreate the same kind of structure. I think what we can do is look at a different thing that's going on and look at how innovation happens in a very different, open-ended way in the internet. So the internet has a lot of similarities with the research culture of Bell Labs in that it's extremely open. You get a lot of people thinking about problems. You have a lot of people talking about problems and not only talking about potential solutions, but trying them out and so on. And so the people sharing knowledge and ideas through the internet and working on open-ended groups has been able to have very important results achieved, but they're of a very different nature. Like you don't get something like a transistor out of, you know, random open source collaboration. You get something like Bitcoin and Ethereum, which are arguably like... And like the Linux kernel, like just to use a very different... Yes. But like that came out of the internet, right? The Linux kernel, that exists because use a very different, but like that's the internet, right? The Linux kernel that exists because the internet. Yes. The Linux kernel is an awesome example. I think like, um, you had the ability to, to undergo, undertake these major, major infrastructure projects. Um, and like things that take a long time to, to create and mature, um, on the internet and a whole other interesting Avenue here is how do you fund these things? Like how do you, how can you fund these long-term endeavors that are much more open-ended and on the internet and so on? And that's what Bitcoin and Ethereum proposed one example of how you fund that. And this is, this goes back to what you were starting to bring up earlier, which is the idea of you have a protocol and you take that protocol and you say, hey, it's going to create a whole bunch of value. And it also has this native token that's going to address a whole bunch of that value. Not all of it, but some subset. And that native token is going to be of limited supply. So because we were creating this token, we can take some of that token and give it to the people building the protocol, which then helps, you know, they can sell it for dollars or whatever to then feed themselves. And then that way they can like actually fund the development of the project. And this is effectively what Ethereum did, right? So that kind of funding model allows people to remain very close to the actual protocol layer and to think deeply about the protocol itself and its concerns without having to think about a product or a service on top. So this is precisely what protocol apps as a business model is. And how do we keep the funding going on? Because obviously there's a certain amount of hype and excitement right now with all the ICOs happening. Oh yeah. So, so I mean like there's, there's a ton of stuff happening right now. Um, the, I mean, I think, I think we, I don't know. How do you do it over 10 years? Like let's talk about, let's like drill down to the, cause that's We're just talking about it. What's the tenure? Like how do you do you have to keep selling bits? Not you personally, but if you're one of these folks, do you have to keep constantly reissuing tokens to keep feeding yourself? I mean if it depends on whether another token Appreciates right so the token appreciates enough then you're gonna have to sell less and less of it over time Yeah, so you saw this happen with Bitcoin I mean there were people there were some people that were early to Bitcoin that are are now You know people that were early to Bitcoin that are now, you know, they have their personal wealth at a point where, you know, unless there was a major crash in their assets, like they don't have to work again. Yeah. And, you know, Bitcoin is 10 years old now, almost. Right. So it started in 2008, 2009? Roughly. Yeah. And so, like, you know, it's roughly 10 years old. And, yeah, I mean, I think maybe you could claim that the origins of Bitcoin happened through the Cyberpunk mailing list and Mojo Nation and all these other things and all those discussions. And so that was like long term innovation that happened and then only was getting funded afterwards. So it's like a very different approach than, say, the Bell Labs centralized perspective. But yeah, I think the funding of these things is going to depend entirely on whether these things are continuing to be useful. So if Ethereum continues to be useful five, ten years from now, you're going to have, and continues to accrue, continues to grow. So if Ethereum becomes more and more successful, continues to solve a whole bunch of problems, then an Ether is going to be worth a ton more. And as that Ether is worth a lot more, you're now going to have tens of thousands of people that right now are crypto millionaires turning into 10 million, they're going to have 10 million, 100 million, potentially billionaires, who knows, right? I don't know. I think at that point, the valuation of something like Ethereum gets as high as something like Google and Apple and so on. And who knows, maybe it is worth that. But I don't think it's quite there yet. But you have this very different way of building a service where you take a share of the worth of the service, in a sense, like having Ether is kind of having a share of the worth of the network. It's not the worth of the network totally, the network is worth more than that, but it is a subset of that. And then you can, you know, if you choose to hold it, then it accrues in value, then you have now gotten a return. And so it's risky, like, you know, definitely I would not encourage anyone to invest so deeply into cryptocurrencies that they have, you know, a very significant fraction of their other network. You know, the, during the dot com bubble, everyone was a day trader and everyone made, you couldn't lose. And it actually, if you would have bought and held to this day and you were lucky enough to have enough exposure to what, like Apple and Google, it actually would have been okay. But if back in the day you were day trading and you didn't have one of those big winners, or if you just lost all your money in the early days, you know, if you just sold early, if you just sold early, it would have been rough. Um, but it's, it's kind of tricky right now because it's really hard to lose money. So there's, there's a very big, you know, kind of honeymoon period now yeah where a ton of people are have just finally understood the massive value that can be generated by these things and the excitement is around and everyone is really stoked and i mean if you if you caught google and you invested early on like if you were one of the early investors during the height of the bubble right like or paypal or any of these amazing companies that got built through that period i guess actually google didn't go out to oh four, so I stand corrected. I'm trying to think of a 99 who could you have caught. Like if you were a day trader, definitely Apple. Yeah, but I wouldn't think of this like day trading on IPO markets. Like you have to think about this. I just mean it was hot. It was the same thing where it was popular media was like, hey, you could buy this stock and make three. It's more of like the way people are. If you invested that way, you probably ended up getting, you know, stuck into thrown into the bubble and like you, you probably lost a ton of money. But if you help, I'm making the argument that if you would have held and you had a decent portfolio, then you actually, even if you were the dumbest money at the top of the market, you would have done okay. Yeah. Maybe like you could That may be a question. Like, do you apply like an ETF model right now and just buy some of everything? And you have to hold, right? Like one of the learnings is, yeah, go ahead. I think the more important thing that's going on deeper, which is that a whole bunch of important things are getting built and you can, if you find them, you can fund them and um, you can be part of them and you can help create them and create massive amounts of value. And the people that do that are going to get greatly rewarded. And I think that goes along with diligence. Like you can't just approach, I think my perspective on this and the way that I look at a lot of the spaces is that I think deeply about each of these pieces of technology. And I approach it much more like investing into a startup or investing into a project that I think is worthwhile and should happen. Even if I lose all the money that I invest in it. And I think about the underlying value that's being created. Like what, what is this thing going to enable in two, five, 10 years from now? You know, I think within the crypto space, you, you don't even need to think 10 years out. That's a little different though than basic research. Like isn't part of basic research, you don't want to, you want to believe that the researchers are good, but you don't actually want to worry about what they're working on because they're going to do great stuff. Do you know what I'm saying? This is something I go through when I'm looking at these. It's like, you want to understand that it's a good team and you'll like miss the boat right and i think like so we're mixing mixing so many uh we're basically so many different topics which is awesome by the way i rarely get to get to get this deep into into a lot of this conversation i love it i just i don't mean to imply bitcoin or ethereum is like bell labs it's like a different thing it's like a different thing that that is that is showing off that or or when you get out of it is you can see innovation of the kind that you saw at something like Bell Labs happening in the open internet with people exchanging ideas, with people scrounging up funding in whatever way they can until later. And now that we have cryptocurrency, now a new funding model can emerge, and now we can start thinking about this in a deeper way. So when I think about structuring Bell Labs,. So when I think about structuring about protocol labs, we think about Filecoin as a specific service and business that has a much shorter term perspective. It's like, Filecoin has to work and be successful and valuable in two, three years, not five or 10. And we're nowhere near close to be able to .. MARK BLYTHEUSSEYSSEEBENMAKER 2, two or three years in. So it is five years in. You're already... The company's in two or three years. Two or three years, yeah. Yeah, yeah. So it is actually... We were building IPFS first, right? So IPFS is out there and creating a ton of value for people. But IPFS is not something that we plan to monetize directly. Like IPFS is a large put money in. Money should not go and be a question on moving data. Money should be a concern that's applied on top to a subset of those transactions. And so a subset of those transactions are going to be the Filecoin transactions. And now we're building out, we're setting off and doing all this work. So I think it really started the clock on Filecoin. And we've had a whole bunch of detours. We ended up building this whole platform called CoinList so you can go and have token sales and so on. Because that whole madness of how do you correctly and legally do a token sale is a huge rabbit hole. We could have burned a whole hour on that. But we built a platform that allows people to do that in a compliant way in the US using a set of documents that we've developed called the SAFT, similar to the SAFE, but for tokens, and so on. And that was a detour that took us four or six months of work, but it's going to end up being super valuable for the entire rest of the ecosystem and for Perk Labs in that we will have not only Falcon but other projects on the road that will end up using CoinList. And in longer term investment, you invest a little bit deeper into this thing and now you have it. And so Falcon has been delayed by IPFS and its success and by things like CoinList and so on. Now we've managed to successfully switch gears to go and invest very deeply into the whole thing. One of the most interesting things probably about Filecoin that you'll see coming out very soon is we spent about a month and a half rethinking the entire protocol from scratch and looking at all of the advancements that have happened in distributed systems and crypto and the blockchain space in general in the last two or three years since the paper came out. We got to upgrade all of the entire system before it's out and live and people are using it. It ends up being a very different protocol right so we're about to like ship the the new Falcon paper and it's a very different protocol than when you when people first saw it has solves a whole bunch of important problems and we had for a brief period of like you know a month and a half something akin to like a Bell Labs feel of like four or five people in a house doing nothing but reading papers and working on hard research problems and reading the papers of Turing Award winners and then being a step ahead of some of them and being like, oh, wow, they just published this thing, and that's a problem that we solved a while ago or something. And that was like a... You get glimpses of this happening. And you can think of someone like Vitalik as operating entirely in that space, where he's just thinking about large-scale problems in the 5-10-year time horizon. So a creator of Ethereum. Yeah, Vitalik, the creator of Ethereum. And he has managed to build for himself a lab similar to one you would have at a place like Bell Labs or something, but in a very different landscape. And I think this is, you probably won't see the creation of Bell Labs like the one before. It's possible that someone like Google and so on creates it, but I think what we'll have instead is a much more distributed version of it where you will have smaller labs that are able to get large-scale 10-year time horizon funding. And what I'm particularly interested in, and I'll kind of throw this out there now because it's an interesting problem that I think is worth solving. And if we solve this, it can have massive implications for the world. You're a researcher and you want to think about not just starting businesses and starting companies and so on, but really think deeply about what kind of problems, if we solve them today, would create enormous value for humanity worldwide. There's a very specific problem, and this is like an economics problem, and it's also an AI problem. It's the credit assignment problem, which is that if you have a set of agents that are participating in a set of endeavors and those endeavors either create or destroy value. How do you correctly propagate reward back to the agents? Meaning if you have a number of people working on a startup and you create a whole bunch of value in a startup and that ends up, you capture some of that as a reward, how do you propagate the reward back? Effectively, this is equity. Equity right now is like the way that this is equity. Equity right now is the way that this is done. In a larger scale, the market is seen as investments and capital and the capital formation world and so on. But then when you look at it in a different world, in science for example, you have labs that are effectively accruing academic credit and, you know, academic social credit and credibility that they're going to be able to use to then get further grants to fund the rest of the thing. And, like, that's a different answer. And when you think about open source, we don't have today an easy way of correctly figuring out and computing what is the credit assignment on something like the Linux kernel. I mean, Linux has done an enormous amount of work and created a huge fraction of the value from the Linux kernel, but so have a ton of other people that have been slogging and wading through major, major issues. And the majority of those people that are building this huge foundational thing that is now on a huge fraction of the computers on the planet did not see any kind of reward attributed to them on the scale of the companies that came after that user technology and captured value. So you can see something like Android as capturing massive amounts of value that went into the Android business and Google and all of those groups that completely rode on the value created by the Linux kernel group. And you can think about this across every single business. Every single business that runs computers in a large scale has gotten value out of the Linux kernel group. And how can we just propagate reward back so that all of those people now no longer have to worry about other day jobs and can really just propagate reward back so that all of those people now no longer have to worry about other day jobs and can really just focus on this thing? But can you do this in a big scale across all possible projects? We are super interested in solving this problem because we think if we solve this problem, even if we have a bit of a good answer to this problem, then we can fundamentally change how open source gets built in that it would be great if people that are going to work on projects and open source can just do that without having to have a day job that they don't like or whatever. There's a lot of people I know that operate in that landscape where they have some job that's kind of interesting, and they do it because they have options. They're not going to work on something they completely don't like or whatever. Although there are a lot of people that are in that position. But at the same time, it's not what they love the most and it's what will pay their bills. And at the same time, they're creating a ton of value by working on a whole bunch of interesting open source projects. But there's no easy way for them to get rewarded by the value that's captured many, many layers deep after. So I claim, and this is a complete guess, and I could be totally wrong about this, but I claim that if we solve that problem in a way that we have a function, like I could run a function over all of the people on GitHub that have contributed to all of the projects that Protocol Labs runs and all of the projects that Protocol Labs runs and all of the projects that Protocol Labs projects use. So we're talking about not only the community that's working on one project, but also the other communities your project depends on, right? Like we depend on things like the Linux kernel. And so can we figure out a way to correctly and accurately propagate reward back in a way that's fair and that correctly gauges a whole bunch of these hard questions about opportunity cost and externalities. I'll take a swing at that. Have you seen the papers about how to fairly slice a cake? Yes. So essentially you slice and I pick. There's ways that they found a way to extrapolate that into multiple parties. And so this isn't the actual solution, but I wonder if you could use where other contributors all are slicing other people's cake so that they decide proof of work. Well, yeah. So that's a good intuition. That's a good intuition. But then are you sure that's not gameable? Because then I could just get a collection of 10 people that, you know, we all like each other and we all give each other huge slices. But that's how companies work oftentimes, right? Like there's someone who doesn't always push the best code, but they might be a huge morale boost. And so like them being on the project is actually super valuable. Wait, so to touch that though. So you're looking for something that doesn't use human intervention whatsoever? It's a purely algorithm of the cancer? I think it's fine to feed in human intervention along the way. You know, there's interesting research done on large companies and governments where you have all these, you know, peer reviews, you know, kind of like, and manager reviews and all this kind of, you know, 360 review kind of perspective. And out of that, you can get good signal, right? Like, otherwise, if we weren't getting good signal then there's no hope for any kind of company that's large. And so surely something's working. And there's good research that shows you can definitely get interesting human feedback in the loop and you can take that as a signal. But the hard thing is, I claim that what we need to do is allow the collection of that feedback to have humans in the loop, but do so in such a way that it is extremely difficult to game. Because again, people will quickly learn that they can just give each other really high ratings and that will translate into really big boosts and promotions and so on, or greater rewards. So you have to get something that doesn't, it's not easy to game. But then further, if you take people out of the equation in the choosing part at the very top, like all of those feedback, all that feedback always propagates all the way to the top. And it's ultimately people making decisions, you know, kind of like compensation and all this kind of stuff. And this is in companies, but in science, it's like grant funding, right? Like the people that actually choose who to give grants to and what research to fund. grant funding, right? Like the people that actually choose who to give grants to and what research to fund. Or in open source, it's like, hey, a company decided to invest deeply into this project because they thought it was like super valuable and like they allocated engineers to just work on it. But like they're not directly just giving money to everyone in that project. If we just take humans out of the loop in that decision process and put an algorithm that people can have confidence over that this is going to be a correct and fair, you know, a correct and fair allocation of the reward, at least better than most humans would do at first pass approximation. If we can do that, turn that into an algorithm, then I claim we could fix a whole bunch of cap tables around the world that like really screwed up. And you can fix a whole bunch of cap tables around the world that like really screwed up. And you can fix a whole bunch of the way that grant funding is done in science because you're not going to rely as hard on prior success. And you're not going to, or rather, you're not going to rely as hard on like social signals and you're going to rely more on like deep achievement um and i claim you can do something fundamentally new which is you can start um propagating rewards through open source to the point where a lot of people can gravitate to the things that they think are extremely valuable and they you know they invest their time instead of investing their money into things that they think are cool and interesting and valuable. And if those turn out to be valuable in such a way that reward ends up getting propagated back to them, they can then turn that contribution into eating. We're headed for a very big economic problem, and we're already kind of in the middle of it, but we're going to have bigger problems. That as automation comes in and AI comes in and all this kind of it, but we're going to have bigger problems, that as automation comes in and AI comes in and all this kind of stuff, it's going to challenge our basic notions of worth in value in economic terms, right? Like we live in a world that's centered very, very rigidly around the perspective of, hey, you get a job and you work and you contribute value to an endeavor and you get back some pay and you turn that pay into food. And so if you want food and shelter and survival, and if you want nice things and if you want to be able to not only survive and have good things and so on, but you want to be able to afford school for your kids or healthcare and so on, you have to have a job. And this job is mediated by, you know, kind of like a whole bunch of external forces. And it prevents a ton of people from allocating their work to what they think is actually most fundamentally valuable. And I claim it doesn't do as good of a job as it should in correctly rewarding major contributions. We see people with NOAA prizes and Turing prizes that have made massive contributions to the world and have not net worths similar to groups that ended up doing terrible things for the world and managed to get away with it. And so the claim here is one that this, on the small scale, could improve dramatically something like open source and and potentially like companies and how you allocate competition there but in a big scale a really good answer to this problem could be a new economic model like it could be like then a new version of capitalism or it could be something else that's not called capitalism it could be something around like just like correct i don't know like it's a whole new world. Right. So I think it's, that's super interesting and we've had a lot of discussions internally around basic income. I think where I get hung up on this is that let's pretend that we did have the hour. Let's pretend someone did the research and they found a fair way to allocate worth. Would anyone accept it? Like essentially the tricky part is not the technical challenge. It's getting people to ever believe a computer is fair or ever. Like what if the algorithm said, actually, you're not worth very much. You know how, like it's very hard to imagine people saying, you know what? You're right. This, this algorithm is inherently fair. But I think it actually like meshes quite well with the American mindset, which is like, I can do work and create more value than the next person rather than relying on some social system around you you're like if i'll just do it and like right now we rely on the market to decide what's valuable but who knows like yeah ideally so so that's where i think i mean i think for this to work correctly you have to have markets involved and you have to have this kind of algorithm either working in a market. You can turn an algorithm into a market. And then ideally you wouldn't have one computer that decides what you're worth. But rather you have an entire large-scale system and relative worth is being ascribed by other groups. You have a lot of cases where one group thinks something is really valuable and another group doesn't think so. And that's fine. It's just like they themselves are accruing value and worth in whatever ways and they can propagate their work however they want. You know, similar to like, you know, companies going in opposite directions or whatever. And yes, it's going to call into question a bunch of hard things as like, you know, here's like your, what your contribution is really worth. But my claim is right now we have a much worse, this is kind of, I kind of described this as similar to the self-driving car problem. People think, how could a computer ever possibly drive better than me? Like computers are stupid, right? And I am a great driver and I can go fast and I can react really well and so on. I would never trust a computer. And yet, you know, it's taken a long time. It's taken over 50 years, since, like, the first plans to do this appeared. But now we have computers that write better than humans, and pretty soon they're going to start getting deployed, and we're going to start writing in them, and so on, and people will see that this is going to save a ton of lives comparatively. And so my claim is you can create something that's fair, and you can create something that is also provably fair. So one of the things here about algorithms is you can have a computation that's provable that actually runs over the whole thing and can produce a cryptographically verifiable proof that it was done correctly, and that it was correctly assigning the right thing. And it could give you a trace of all of the violation. Here's the argument as to why this determination was made. And I think that would be a much better place to be than where we are now, where it's extremely fuzzy. It's extremely based on a whole bunch of factors that I think are biases all over the place and allow a few people that understand all of those biases and perspectives to then game them and then put themselves in positions of greater and greater power, which is, by the way, I think one of the big reasons why capital accumulates. There's a whole bunch of reasons why capital accumulates and centralizes, but I think one of them is the fact that once you understand enough about how all this stuff works, you can then position yourself and maneuver yourself to expose yourself to things that generate a lot of capital and wealth that don't necessarily generate or create a lot of value. There's a very big difference of capital and wealth that don't necessarily generate or create a lot of value, right? Like there's a very big difference between capital and value that is not correctly on The value of a dollar today does not equate to like just raw fundamental value, right? And so we it's an approximation and we think that it's a it's a good enough approximation that continue using it But in a lot of ways you can see things that are worth massive amounts of money it. But in a lot of ways, you can see things that are worth massive amounts of money. There's tons of companies that get a lot of value by dumping a bunch of crap into the ocean and wrecking. There's a whole bunch of externalities that we cannot properly calculate and account in those situations. And ultimately, there's, at least in most countries here in the world, you have groups of people that are making those decisions at the very top and deciding what are the outcomes of major bad actors, like actors that have made serious mistakes, like the 2008 crisis, like major mistakes. And they're saying like, well, yeah, all of these were major mistakes. All of these things should fail. But if they fail, we're going to be in deeper trouble. So let's just bail them out and continue as if nothing had happened to some degree. Not quite, but to some degree. And a ton of these people walked away scot free and got away with, in some cases, actually making money through the financial crisis. People that were directly responsible for the problem ended up with returns. And this is screwed up. And I think this is something extremely far away from a correct and fair distribution of value. And so I think that's an open problem of the kind of pre-companies or pre-capitalism or this kind of thing. If we find a good solution to this problem, it could in decades translate into a rewiring of how we think and how we value things and how we allocate resources and all that. In the small scale, I think that we're beginning to see a few experiments in this direction. I see things like what Ethereum was able to do with its own resources and being able to just give a lot of people Ether that then accrued in value and so on, and do things through RFPs and try to get some vague measure of what this might be worth, and giving people a share of the return. Not dollars or euros, but instead Ether, which means it's a share of the potential future value generated by the network. It's a step in the right direction. We're going to gradient descent our way into this, but it's a step in the right direction. And I think we are gearing up to try some things like this. So do you think the way, like you've looked at the relative distribution of wealth from crypto, that that is a good model? Because isn't it really concentrated in a small number of people that happen to have the resources to be early? So I don't think that, I think a few people ended up getting a lot of value. Also with a lot of these projects, a few people ended up creating massive amounts of that value. I think like, you know, for example, I think people should not at all undervalue Vitalik's contribution. I think he's contributed an enormous amount to the entire space. And I use that as an example. There's probably a whole bunch of misallocations all over the place that you can probably find. Because again, I'm just thinking through what you were saying about... But I also know a lot of people in the dozens to hundreds that made a lot of money through crypto, who slogged through the creation of value in this new network, who understood the value of this thing, were willing to take the risk and work on it. And, you know, really spent, you know, the better part of a year and a half, like working on something that was completely, you know, super high risk, unclear that it was going to work out and so on. And they've seen returns that are higher than most startups, like higher than what their distribution would have been. Right. So like a 400X return, right? Right. If you bought Ethereum at the crowd sale. Depends when you got in. Yeah. Well, I mean, conversely, think of it like you just happened to, you know, luck into being one of the first 10 employees at a giant company, but the 25th person is the person who actually created the value, and their allocation is much less than yours. That model is not figured out yet. I am deeply frustrated by that problem. I desperately want to fix that problem. And I think that if we fix that problem, then we can have massively open-ended creation of value. It's a strong claim, but I think fixing that issue would make a ton of tech companies work extremely well and be able to generate tons of value. Not only tech companies, but tech projects in general. The company is fading away, or not fading away, but rather a new thing has come in, which is the network or a market that is not a company, but it functions kind of like a company. And so you can think of Ethereum not as a company, but rather as this network that has some shared asset that is incenting people to work on it and so on. And then there's some loose organization, but not really centralized, or it's not really central planning. And that's a whole bunch of things that are interesting and are pushing in the right direction. And I would say that the distribution of wealth is probably flatter. I don't know this to be 100% of the case. I need to look at the the raw data But I think the raw data for Bitcoin a few years ago wasn't pretty last night. Look at it for what it's worth Yeah, what about it? I don't I don't actually know I haven't seen any breakdowns on that But I remember I was actually very curious about this about not like the not what Satoshi has but like the The the other people the head the people that bought in early, basically. Like what is their relative distribution and all that other good stuff. I'm kind of bothered by that. I'm kind of bothered by the fact that in crypto right now, you're seeing the normal issues with capital flood in, which is that if you're a speculator that has a lot of capital, you can afford to get much greater rewards than the people that actually build the thing. And that to me is, again, another frustrating thing that I kind of want to face. This is why I ask, because it's like, here we are, we're creating all this new stuff. But I think it's incremental, right? Like I think it's a step in the right direction and a big step, dare I say, a quantum leap in the right direction. And I think it's, what's interesting to me is rather what has, not what has been done so far, but the tools we now have. Meaning that, and this is starting to get into the experiments we're going to run next year and the year after that, but we're looking at the possibilities of issuing a token to a whole bunch of contributors that have created a whole bunch of value to a ton of projects that we think are valuable. Mostly right now we're going to do them with our own projects, but if this works well we can do that in an even deeper way across projects that contribute value to us. And we're going to issue this token and then we either are going to do things like issue dividends or buy it back and create a way for us to directly share a fraction of the value that Procolabs creates with the people that helped create that value. And it's a huge experiment. It could go completely wrong. It could change the wrong. It could change the way that people, why people contribute. It could like bring in a lot of people that are not deeply interested in the right things and are kind of just looking for money. And like, that's what I worry about. I don't want to do anything that like would, would cause that. Cause I think open source is like, it's an amazing place where people are motivated to, to work for the project because of what you believe in and like that's super important like yeah like I would hate it if whatever kind of experiment in this direction kills the fact that the Linux kernel is built by a bunch of people that really care deeply about the problems and are fixing them and so like it has to be done carefully but I think we can start running some experiments right because you don't want every project to end up at some weird local maximum we're like okay companies are using this now value will accrue to me I to be done carefully, but I think we can start running some experiments. Right, because you don't want every project to end up at some weird local maximum, where like, oh, okay, companies are using this now, value will accrue to me, I can jump to the next thing. Exactly. So is this being wrapped into CoinList yet, like these ideas? So I mean, they are ideas we are thinking about. These are not being wrapped into CoinList or other things just yet. There's a lot of things that we have to carefully consider here. The thing about incentive engineering is that it's hard. This is why this problem is an open problem. And if you're listening to this and you're a researcher and you care about this, get in touch because I'm probably going to start a small like research group to solve this problem. But I don't expect a successful thing in years. Like I think this is a long-term thing. I think this is like the kind of research project that Protocol Apps could fund that is one of those long-term innovation things. And we actually, I don't think we need that many people. I think like probably the right 10 people can solve this problem. Maybe even less. Maybe it's like a singular person that like actually figures it out with as has happened in a ton of other cases in history. But I think we can start at the very least collecting some data to assist the theory and that data that might come with some of these experiments. And we are thinking about these experiments. I mostly want to reward, right now I mostly want to reward a lot of the people that were very early to the IPFS project that saw the value created and said, wow, this is an awesome project and we want to make this, you know, a reality and so on. And, you know, we've been slogging through a ton of hard work for the last three years. Like right now, I guess GoIPFS turned three years old yet, like two days ago. The protocol itself is a little bit older, but that was the code base. And there's a ton of people that came in and helped out tremendously. Some of them who didn't make sense for us to hire into protocol labs. Some of the people, for whatever reason, some of those cases are academics. Some of them are grad students and professors who talk with me and walk me through certain important things that end up contributing value to the project. And I want to find a way to then divert some of the return that we'll see from Filecoin. Because what we're going to do is we're going to create this whole Filecoin network and that will generate a ton of value. And a whole bunch of people, like the miners in the Filecoin network, are going to get a ton of value and a whole bunch of people like the miners in the Falcon Network are going to get a ton of value and so will Protocol Labs. And then can we divert some of that value that Protocol Labs gets back and pump it straight into all of the open source work that we do in a way that doesn't hurt it? I'm very, very wary and careful about anywhere where money and open source gets mixed, because it can get really screwed up and it can kill projects. But I think that things like Ethereum are examples of things being done better and right in some direction, and at least in a successful one. You can look at the Ethereum community and it's filled with researchers. People who are thinking deep and hard about theory and the correct application of... People that are thinking about consensus and consensus problems, the kind of stuff that only Turing award winners normally think about, or grad students that are trying to upend 20 years of research or whatever. And there's people in the Ethereum community actually doing this work. And it's amazing. It should not be undervalued. It's extremely difficult to find communities where not only is that valued by everyone around, but it's also greatly rewarded. And that's, I think, an example in the right direction and I think one that we can build on and create more of. And if this gets to be, I think if Ethereum and Filecoin and these networks get to be massive and end up like being at the same degree and scale as a whole bunch of the other other ways of doing things like the centralized companies and so on then we can then start looking at rewarding people across company lines. So here's an interesting problem, right? Like there's a ton of people that work at Google and a ton of people that work at a bunch of other places that could contribute massively to these projects by just spending a few hours maybe on a week or later on. And they're the right people that have the right insights, that have the right perspective. And right now they can't work for another company because it's like a conflict of interest but they can contribute to open source now like in many cases they do and then reward can be back propagated in a weird way right and so like it's it's a so people contribute and then later if value gets created then there's like this back prop that happens out of distributions of this token. So I don't know how that works with... Or how that's going to turn out and work with IP and so on. But I think it's going to come in kind of like a wrecking ball in that a ton of... I know a lot of researchers in crypto and game theory and so on that understood the crypto world and then either got a bunch of Bitcoin or Ether and now can just chill out and be grad students or professors in some cases and just do the research they really care about. And they're now personally wealthy. And it's awesome. Like, that's fantastic. Like, that is a great example of generated massive amount of value by slogging through really hard theory problems for years and came up with the right solution and so on are now able to correctly make contributions, in some cases short time span contributions. Because again, knowledge work is really hard to measure in hours. You can't measure knowledge work in hours. Somebody's investment over a decade can put them into the right perspective to make the right contribution at the right time that creates something like Ethereum or Bitcoin or whatever. And, you know, how do you correctly reward that? And I think like something like these cryptocurrency networks can reward that better than the normal notion of like yearly pay in a salaried thing that was built for the industrial revolution, where like you needed manufacturing and you needed to just bill for hours because like you had to spend a whole bunch of hours working on something, um and so i think like this is an interesting thing and i think we're starting to see this this this develop and you know we're like thinking about things like that of like how do we build protocol labs as an organization that can do deep research a bunch of different directions with a bunch of collaborators around the planet and a bunch of different organizations and how can we structure things in such a way that if those things we collaborate on succeed greatly, everyone gets rewarded. Everyone who contributed to that thing gets rewarded fairly. That's super hard to try and solve, but we want to do that. So I think this is a good place to pause. So you got a role. We do have some questions from Twitter, so that would be awesome to address. Cool. All right. We can just pause. Thank you. Thanks. Let's go into the Twitter questions. So we got a handful. You can answer them however you'd like. So from Startup Sanitana, how does Filecoin's data storage network, how is it natural slash unnatural disaster proof? Great question. So it really depends on the scale of the natural disaster. I mean, like if a comet hit the planet, that's a little hard. But there's a few pieces here. One of them is IPFS is by nature what I like to call fully distributed or logically decentralized, as Vitalik calls it, which is that the nodes in the IPFS network can continue talking to each other even if the rest of the network disappears. And so Filecoin, because it uses IPFS and so on, Filecoin nodes will be able to talk to each other even if they can't talk to the rest of the network. Now, there's a question there of like, how can you clear transactions? And like, that's the thing that we have active and deep research on. We want to have a network that can shard and where you can have a subset of the Falcon network operating even if it can't talk to the rest of the network and clear transactions, that's a hard problem. The first iteration of the Falcon network that goes live won't quite do that. But the way it'll be... And so there's like, you know, if you get isolated from the rest of the network, you may not be able to clear transactions, but you might be able to distribute files for at least for some period of time. And then if you are in the rest of the network, but then like half of it disappears because of some huge natural disaster, I guess slightly less than half, you know, and divided by two, we can survive those failures because when people add data to the network, it gets split up into pieces, gets erasure coded. So you can get this really nice replication factor where without adding too much overhead, where the replication factor does not add massive overhead, you can get a huge resilience factor where you can survive huge numbers of failures and your data can still be there. The exact numbers on this, we'll come up with and publish the exact details on those down the road, but it's going to be a tunable parameter. So you can crank up the level of erasure codedness effectively that you want. On the user side? On the user side, yeah. So if you have a megabyte of data that's really important that you want. On the user side? On the user side, yeah. So if you have a megabyte of data that's really important, you just like crank up the replication factor and like the splitting into pieces and erasure coding so that you have like hundreds of these. And like now you, and they all go out to a whole bunch of different miners. And so now you are in a much better position than if only three people were storing this. So that's one set of answers. Next question. Robert Andrew Smith. When will Filecoin sale details be released? And then following up on that. Yeah. Filecoin sale details will be released very soon. Unfortunately we can't give you an exact date, but it's weeks away. It's sometime in the next few weeks. It's very soon. We are working as hard as we can right now to get it out of the door. The reason that we can't announce an exact date yet is that there are a few things, especially around... There's a couple of processes that are running right now that we have a date that they're going to finish, and that's ideally a week or two weeks out. But there's a little bit of unpredictability there. So I want to be able to do the sale as soon as possible, but subject to that, so really like weeks. But expect news very, very soon. Then he also asked another question. What other plans do you have with CoinList? So CoinList, which is another project that Protocol this is a and this is in partnership with AngelList and and this is a Token sale platform that kind of will allow token project creators to launch their networks and run token sales without having to slog through the Hundreds of hours that we spent both building this kind of platform and going through legal and so on. And CoinList works with the SAFT. CoinList will have, we work with a lot of sales that both include the SAFT and others that don't. But basically, there's this important piece that if you want to run a token sale in the US, you want to... There's a question there around whether or not you're selling a security. And if you think you're indeed selling a security, then you should limit the sale of that security to accredited investors, at least in the US. And when you do that, then CoinList makes that easy, and you can accredit in the same way that you would accredit through AngelList. But that's not even the main selling point of Coinlist. The main selling point of Coinlist will be decreasing the amount of work for token sale creators and creating a network that focuses on finding really high signal projects. So there's a ton of projects in the space. And one of the things that we care a lot about is how do you find really, really good projects and help those gain attention and kind of stick out, and how can you help them prove it. It's one thing for that project to kind of convey a lot of things, but it becomes really useful when you have third parties that are independent think about those projects and kind of have... Yeah, we're very interested in solving that signal problem of how do you correctly figure out what are the really solid and outstanding projects. And so we think that's going to be an important value proposition from CoinLess of really finding the best things around. That was actually a question I wanted to ask before but didn't. Do you have any rules of thumb that you can give to people around filtering out all the noise right now? Yeah, so we've gotten a ton of applications and a lot of interesting stuff is coming down the pipeline, some really cool stuff. We've also seen some scams. We've actually seen some applications that are outright scams. We've actually seen some applications that are outright scams. I think we don't want to be in a position of being effectively gatekeepers that prevent really good ideas from... If we don't understand something, we shouldn't be gatekeepers that we have to convince. But on the flip side, we also don't want things that we can tell are outright scams on the platform. And we want at least some layer of barriers there to make sure that the projects that do get listed on CoinList pass a certain bar of quality. Now, there could be some very cleverly engineered and designed scams or whatever that fool even us or whatever. So anyone investing through any kind of investment platform is ultimately, you know, responsible for doing their own diligence. But at the very least, we're going to, I think, cut out a huge fraction of a lot of those things. And we're working on ways of helping project creators highlight their technical strengths and the value they propose in ways that let them shine against other projects that could probably spend a whole bunch of money on marketing and so on, but actually really have no important technical depth underneath the hood. And so that's a whole bunch of interesting problems that we want to help solve with CoinList. Okay. And obviously accredited investors is a major part of that. Yeah. Yeah. And I think accredited investors kind of weighing in on things is an important part. Although I would say, you know, I think this is an important piece or we're going to have to message this better in that not all sales that will go through CoinList are going to be only for accredited investors. There will be some sales that are not securities and then people can buy normally. And there also will be the case that some sales might want to do a Reg D 506 offering in the US, so that's accredited investors only, but are able to do a Reg S funding to the rest of the world and figure out things outside. So this is kind of similar to what Blockchain Capital did. So we're looking deeply into that, and we expect that a number of tokens will be able to do that. I can't definitively say that they will certainly be able to do that, because there's still some legal questions there that we need to solve. And additionally, we want to involve crowdfunding as well. We think that it's very important that people in the US that are not accredited, but that understand the tech really well and are able to make investments like that. It's just the burden on doing crowdfunding is quite large. And there's questions of like, how does that combine with cryptocurrency and so on that we are doing the legal review on and legal work on at the moment and we hope to have news on that relatively soon but that's stuff that we are actively working on and trying to enable because we don't want the accredited investor limit to prevent people that truly understand the tech and perhaps are much better investors than accredited investors meaning like, you know Having a million dollars does not mean that you know What cryptocurrency network is gonna be better or what cryptocurrency network actually will work? There were a lot of people investing in things that had a lot of money and could lose it On things that didn't work out and a lot of people that understood that something a theorem was gonna be really valuable So we want to we want to enable people to come into things like this. And so we're looking at crowdfunding. We're also looking at other ways of potentially involving people that, you know, for whatever reason, they can't directly invest in the pre-sale. But maybe perhaps they can come in when the token goes live in an actual token sale, broader in like live exchanges, at a discount, at some sort of discount that puts them in a good position. But sometimes that can be done by, instead of it coming in and investing early, rather helping the network. So one of the big parts of gathering investors through a network like this is gathering people that are really well aligned with the network and want to help it grow. And that's what investors should be. Investors should not be just random speculators that are just trying to make a quick buck. We are interested in helping create large-scale communities that have really strong buy-in from people that want to help create them and see the promise. And so one of the things that we're thinking about is like, okay, great. There's a lot of people that, you know, maybe are unfortunately limited by, by this, the, the, the laws around accreditation. However, they probably have the ability to get involved, actually involved directly with the projects and contributing in another way that would then, you know, in a sense, like they, they could get rewarded by either getting, getting paid for their work in, in tokens, um, or, um, or potentially being able to buy the token when it comes out at a discount that they have that other people don't have. That's a good point. I hadn't heard about that. Okay. Jesse Jumpcut asks, I'm having trouble understanding the market need for Filecoin. Is storage a burning pain that consumers face? Oh, definitely. I mean, all you have to think about is how much data is being generated by computers, right? So this is not just for consumers, although consumers do have a lot of data. Like, think about, you know, I have a phone here and, like, how much, I don't even know how much storage this has, but it has a lot and I use a lot of data lot of data by having applications that you know download video or whatever or or um you know when you take pictures and video and so on um people's like the right way to answer this question is look at the growth in market of cloud storage and it's growing tremendously um and so cloud storage in general is the idea of reselling storage for other groups. And consumers, massive businesses and so on are seeing exponential growth in data. So data and the need to store it is about one of the few things you can look at and say this is growing exponentially and shows no sign of stopping anytime soon. And so you kind of have to extrapolate, are humans going to continue proliferating and building more cities and replicating? MARK MANDELBAUM- I think I would reframe. Yes. And we're going to need a lot more and more data. MARK MANDELBAUM- Yeah. But I think I would reframe the question, actually. What is differentiated with Filecoin to Dropbox? why do I care about using it? Totally. And, I mean, Filecoin is not to be seen as a Dropbox replacement, although there will be Dropbox-like things that build on top of Filecoin. I think you should think about Filecoin as replacing cloud storage. So it's something that Dropbox would use. So a company like Dropbox would think about, like, oh, do we run our own managed infrastructure, or do we use AWS, or do we use something like Filecoin? And so that's where the economic improvement comes. What is the relative advantage of something like Filecoin to other cloud storage offerings, in a sense? And the thing here is there's a certain set of features that Filecoin will bring that other things don't have. So being able to have decentralized data means that if Amazon doesn't like you anymore, they can't just in one turn shut you off in a way that suddenly you have to move to another provider and you have to deal with changing all of your addresses and everything. Right now with Falcon, it would continue to work. And two, it's about... So there's a whole bunch of features like that and erasure coding and so on that we could go into. And then there's a whole bunch of other things around the market dynamics in general in that Filecoin is not, you shouldn't think of Filecoin as like another provider. Think about Filecoin as a market. So Filecoin is a market that layers across all providers and enables a whole bunch of providers that right now are not selling data in the world to come in and sell it. So think about how much storage there is on the planet that right now is not being sold to other people. And that if that storage came online, it would drive the price down. And the storage that right now is depreciating. A lot of people have invested huge amounts of money in having massive arrays of hard drives that are not giving them any money, and they're losing money on those investments. And so think about creating a market that enables anybody to then sell that storage to the rest of the world for a profit. And there's a whole bunch of questions there. They're like, wow, can you really achieve economies of scale with a network like this? Can you really get a better unit economics of like, can you provide bytes cheaper than something like Google Cloud or Amazon or whatever? And our bet there is that yes, that there's a whole bunch of places and cases where certain individuals or groups in the world have access to either really cheap storage or storage that's positioned well in the network that is kind of like, you know, somewhere between the backbone and like a whole bunch of consumers. And if they become Falcon miners and storage nodes, they could actually be in a better optimization point than even something like Amazon. And so that's a bet, and we think it's right. And that on its own is an interesting reason for people to opt to choose something like Filecoin. And so yeah, think about it kind of like an algorithmic market. Say, instead of this having a very inefficient market where you have to, when you want to hire storage, you have to go and research companies, and you have to look at them, where you have to when you want to hire storage you have to go and like research companies and you have to look at them and you have to like sign up with them and create you know you have to be a legal entity you have to be either a person or a company and or whatever like you have to like have a credit card and you have to like buy you know you enter into some like legal agreement and then you enter into legal agreement then you send them bytes. It's like this huge onerous process. And when you compare them, you see their websites and so on, to something closer to an actual spot market where any file, any storage that's available worldwide that has shown to have good metrics and shown to be online for a long period of time, shown to be good or whatever, can then be sold to you at the cheapest possible price that you want immediately, algorithmically. And so this is about changing the market completely. It's going from a world of centralized storage providers to a world where there's a huge market and it's mediated programmatically. Okay. So adding onto that, same person, Jesse Jumpcut, had another question. How does Filecoin plan to compete with companies like SIA and Storj, I don't know, who have been out for a while? So I think, you know, there's totally, and, you know, there's a few things there. One is the reason Filecoin is not out yet is because we spend a ton of our time building the IPFS project and getting that out of the door. And there's a ton of people that are using the IPFS project that desperately want Falcon to be out. And we know that already we have a ton of users lined up that right now are not going to those other competitors. They're actually either in S3 or other places and would jump directly to us. And then the deeper question and way to look at it is just think about the technology. And we're about to release the second version of our protocol. And it's just a fundamentally different thing. It operates in a different way. It offers different guarantees and so on. And we think that those different guarantees actually have a very significant market need and solve a whole bunch of different market needs than these other networks don't. And so that's kind of how we are going to be able to compete. Another thing is, and this is, I don't know how it'll play out, but I actually bet a lot of people will be mining on both networks or all of the networks and we'll see how that actually plays out. And then we'll see, kind of plays out um and then we'll see kind of like right now there's a lot of drivers driving for either uber or lyft and um we think that the tokens uh and like the rewards and tokens will will be a and people's expectations on like on like how those will will end up working will kind of drive to my people to mine in one so like i guess an interesting question right now would be did people switch from storage to sia or saya the SIA coin appreciated a lot? That's an interesting question that people should look into. Can I cross-list storage? So in some ways you will be able to, in other ways you won't. So it's actually very protocol dependent and different protocols allow it in different ways. Some of the things you won't be able to cross-list, some of the things you will be able to cross-list. And so there will be some kind of like, there people will try and get. MARK MANDELMANN- Try and game it a little bit? ALEXANDER BUZGALINI- Yeah, I mean, people are participating in two different networks. I mean, they're storing data. So because of the proof of replication, when you have proof of replication backed storage, that ensures that it is unique to this particular request. And that's a very important thing from a game theory perspective. You don't want networks of civils basically pretending to be storing huge amounts of data when they're only storing one copy. And the thing is not replicated, so that's what the proof of replication is there for. And so some things you won't be able to cross-test, but some things for fast retrieval and so on, those will be cross-testable. But I think answering the question in a deeper way is, I think I look at Falcon as something very different than these other networks. It's not solving exactly the same problem. Falcon is solving the problem of how do you create a market and allow any provider. So there's actually a possibility where SIA and storage make sense as route content to them because those networks provide kind of like a tiered structure. We'll see what happens. This one is a little bit in the weeds. So this is user Holy Nakamoto referenced a GitHub issue from a couple years ago. Oh, man. Yeah. I don't know if you remember this one. So is the idea of IPFS rendering DDoS attacks impossible hyperbole? Oh, well, it depends on how you... It's not hyperbole in the whole sense. There are some ways that you can take that question of DDoS prevention and say, oh, well, no, you can't possibly mitigate all possible DDoS attacks on something. But the way to think about IPFS is that when you have a piece of content, once you have the piece of content or anybody else around in the network has it, you can retrieve it from them, and it doesn't have to come from the original source. So we've already seen cases where people can DOS a specific location and can DOS a URL that some resource is at. But if it's a name that you know some providers that have that content and you can reach them but the DOS attackers can't know who those providers are. There could be a lot of reasons for this. It could be like they're actually disconnected. You're in a network that they're not connected to. Or you have access to a network where you have the ability to search through a whole bunch of nodes that are willing to share routing information with you, but are unwilling to open it broadly to the whole world. This starts getting into private networks. that are willing to share routing information with you, but are unwilling to open it broadly to the whole world. This is kind of like, this starts getting into private networks, like when people are building private IPFS networks where they have their own set of content that is not exposed to the rest of the world. And so, for example, you're going to be able to, like, search through some networks like that. And, like, right there alone, like, you have, you have entire barriers where people, like the DOSers, can't even get to the content, first of all. Or they can't even get to the machines that are serving it. So that solves it. The other case is, hey, if there's some really popular piece of content and suddenly it gets replicated to tons of people, now the DOS attack gets way harder. Now you have to DOS thousands of people. And so it's not fundamentally, in that particular case, it's not that it's impossible, it becomes intractable. So it becomes intractable for even a sophisticated attacker to doze all possible computers that have this piece of content. So this will be, especially with really incendiary things that a lot of people want to replicate, think about WikiLeaks type stuff, a lot of people want to replicate. Think about like WikiLeaks type stuff. A lot of people want to replicate it all over the place. And then very quickly, it will become very difficult for an attacker to actually silence all possible machines. And so it is not hyperbole. It is impossible in some cases and then intractable in others. MARK MANDELMANN- OK, cool. That's a good answer. Next question. Eric Tang asks, where do you see is the most immediate industry slash text stack slash use case for being decentralized? So what are the, basically a way to reframe that question is, where is it valuable to have decentralization? I think he's kind of leaning towards like, what is a product or use case for something like, something built on Ethereum to be decentralized in that way? Yeah, I mean, I think... Or maybe it's IPFS. It would be a better answer. Oh, I see. Well, so I think decentralization changes the properties of the infrastructure, and it shouldn't be a thing that the end user should have to care about. In a lot of cases, some users will care about it, but I think it's not something that they should have to care about. Meaning that developers are the ones that should think about whether decentralization matters, and that has to do a lot with the, again, specific use cases and specific applications that you're dealing with. When I look at things like Slack or GitHub or Google Docs that are consumer applications that people use daily to do their work and talk to their co-workers or loved ones or things like messengers and so on, and all of that flow of information is passing through a set of centralized agents that can be brought down and frequently are brought down. You know, there's like a lot of cases where GitHub does go down or Slack does go down or your connection to them gets severed in some way. Like you just can't reach them. Like maybe you're offline or whatever. That is a great example where logical centralization sucks. The fact that you can't reach that origin server prevents you from using any of the data or working together or whatever. And it gets so bad that you could have a room full of people with laptops open on Slack or on a Google Doc and they can't work together because their supercomputers, which again, like, let's be clear here, like these computers are more powerful than like all of the, all of the computers in the planet were like, you know, a few decades ago. Their supercomputers that they have in front of them can't figure out the content that they're, an application they want to run is really between them and the ones right next to each other, and are piping all of the data flows straight up the uplink, straight into the data center, and then back. And that's just stupid and wrong. We should not live in that world. And so I want to live in a world where if you have a computer and you're trying to work with somebody across from you, the data can flow from one person to another and you can continue working, whether or not some random machine somewhere else in the world is failing. So yeah, so to answer the question, like literally anything where like interacting between people. Yeah, it's an infrastructure thing. It's like there's a whole bunch of cases where it's like the underlying, you want to think about how the underlying data flows move. And answering the question for for the Ethereum case, it's really about power. It's like, where do you want people to be able to exert power? And doing a transaction through Ethereum and having a smart contract allows you to cut out trust and power all over the place and have a very clear thing that people agree to that is enforced by a computer, not by courts that are slow and expensive. And I think with a lot of these things, you don't necessarily have to make it obvious to the end user that this is what you're doing. It just works. It's better. So Eric asked one more question around decentralization. So where and how does decentralization gain advantage over centralized benefits where you think about scale and cost? So where do these centralization benefits actually provide better unit economics in a way? Like where your costs for providing the service are actually better? So I think this is where you want to think about having as effective of an optimization process as you can get. Providing cheap storage to the world or cheap distribution of content to the world is a huge optimization problem. You're dealing with billions of computers around the planet that are all trying to store or retrieve content and a whole bunch of places where you can store it and move it. And then you're dealing with, again, billions of people that are using those computers and that some subset of those billions of people could actually work on maintaining the network and some of them are going to be consumers. And so it turns it into like a super complex optimization problem. find all and use and leverage all possible local minima in a bunch of places where this is exactly the right place where you want to store something or distribute it from and so on and get the best costs, the best cost reduction. And so that's, I think, where decentralization has a massive advantage over centralized services where you're literally enabling any person in the world who says, oh, I have a clever idea of how I can get cheap power, cheap connectivity, cheap storage, cheap disks, whatever, and enabling them to bring in and create a service, right? And so it's kind of like, I guess a deeper way to look at it is, do you think markets are more efficient? Or do you think central planning is more efficient? And there's a lot of, you know, looking at this question kind of naively, it's like, well, you know, the naive answer is like, well, markets are better because central planning is bad. And the slightly deeper answer is, well, no, if you had like a massive computer that is able to actually calculate everything correctly, then you could actually solve that and you could have correct allocation of resources by just with one program. But then the even deeper version of that is not all agents are similarly incented, which means that one agent might produce an answer that it doesn't, is not actually optimal to everyone, it's optimal to that agent. And so markets are kind of fundamental in how we operate. And so markets allow individual actors to, you know, leverage optimizations. And so markets are kind of fundamental in how we operate. And so markets allow individual actors to, you know, leverage optimizations. And so like that's a thing. And those optimizations might not be optimizations for somebody else. And so that's, I think, where like decentralization of power is really important to these networks in that like decentralization of power and choice of how to run the service affects the kind of optimizations that people may want to do and so on. So a great example of this, I know of a lot of Bitcoin mines that have super cheap power and they're able to get super cheap power because they're in a particular country where they were able to get a certain deal or because they know the right people or whatever. And there's a whole bunch of reasons why they suddenly have much better unit economics than a major player would have. And they don't have enough power that they could service everyone in the world, but they could at least contribute that piece. And if you collect a whole bunch of these pieces, you actually can build a large-scale service. And so that's, I guess, one of the insights. Last question. What other projects should people be paying attention to right now? Oh, wow. Um, that is a great question. I think, I mean, oh man, like there's, there's a ton of interesting stuff. Like I think I'll like rattle off a few, a few names. I think, um, there's probably a's probably a lot that people already know about. Of course, I think if people don't yet understand how Ethereum works and all that, definitely dive in. It's the best interaction to the future, I guess, than Bitcoin ever was or that kind of stuff. So definitely dive into all of that world. Definitely look at things like OpenBazaar and a whole bunch of applications that are being built with these new kinds of networks things like Zcash and so on that bring in a new property into the world and then start looking at if we want to think about new and more earlier things there's a whole bunch of interesting developments around these networks there's a lot of people building on Ethereum. There's 0x, which is a decentralized exchange. There is LivePure, which is a peer-to-peer distribution thing that we'll be interacting with that aligns really well with a lot of the IPFS tech and the Ethereum tech. There are things like Tezos, which is a project to build a smart contracts platform where the smart contracts are written in OCaml and you have a lot more certainty about the programming language, the properties of the programs. Ideally, it would like to get to a point where everything is provable. That's probably unfeasible and probably a theoretic argument why you can't do that and actually have a useful thing, but maybe there's something there where a network could have everything be provable and still be really useful for a certain class of computation. Then Numerai is actually super interesting. So Numerai is a hedge fund run that kind of decentralizes the data modeling. So the predictive power of the models is decentralized. So individual participants can come in and contribute different algorithms to try and leverage the hedge fund's data to trade better. And so that, I think think is a very interesting mixing of both competition between those participants that are coming in, but also collaboration in that all of them together are gonna win together, Numerize using a token. And so I think those are a set of projects that are pretty interesting. There's probably like further out things that are gonna come out. I think if you're into research, I would highly encourage you to follow the proof-of-stake line of work. We're getting ever and ever closer, and I think we're quite close to something that can succeed and work at scale. There's already several provable protocols. So anyway, that's some interesting stuff. This was great. All right. Thanks, man. Some interesting stuff. This was great. All right. Thanks, man. Yeah, thank you. Thanks so much for having me.