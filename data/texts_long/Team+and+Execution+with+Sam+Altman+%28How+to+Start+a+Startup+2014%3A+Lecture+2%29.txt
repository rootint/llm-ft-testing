 Before I jump into today's lecture, I wanted to answer a few questions. People emailed me saying they had questions about the last lecture they ran out of time for. So if you have a question about what we covered last time, I am welcome to answer it now, starting with you. Can you hear the mic, please? It should be on. Can you not hear me? No? Maybe you can ask them to turn it on. Hopefully it'll come on. Anybody else? Yes? So one question that was submitted online was how do I identify if a market has a fast growth rate now and also for the next ten years? All right, so the question is how you identify markets that are growing quickly. The good news about this is this is one of the big advantages students have. You should just trust your instincts on this. Older people have to basically guess about the technologies that are sort of, that young people are using, right? because young people get older and they become the dominant market. But you can just watch what you're doing and what your friends are doing. And you will almost certainly have better instincts on fast growing markets than anybody older than you. And so the answer to this is just trust your instincts. Think about what you're using more. Think about what you're using, what you're seeing people your age begin to start using. That will almost certainly be the future. Maybe I can do one more question in the last lecture before we start. This isn't really the last lecture, but another question online is how do you deal with burnout while still being effective and remaining productive? Yeah, sure. So the question is how you deal with burnout as a founder. This, the answer to this is just that it sucks and you keep going. Unlike a student, where you can sort of like throw up your hands and say, you know what, I'm really burned out. I'm just going to like get bad grades this quarter. One of the hard parts about running a startup is that it's real life. And you just have to get through it. The canonical advice is like go on vacation or whatever. That never works for founders. It's sort of all consuming in this way. It's very difficult to understand. So what you do is you just keep going. You rely on people. It's like really important and founder depression is the serious thing. And you need to have support network. But the way through burnout is just to address the challenges, address the things that are going wrong. And you'll eventually feel better. All right. So last week we, or last lecture we covered the idea and the product. And I want to just emphasize again that if you don't get those right, none of the rest of this is going to save you. Today, we're going to talk about how to hire and how to execute. Hopefully you don't execute the people you hire. Sometimes. So first, I want to talk about co-founders. Co-founder relationships are among the most important in the entire company. And everyone says that you need to watch out for tension brewing among co-founders and address it immediately. And that's all true. And certainly in YC's case, the number one cause of early death for startups is, is co-founder blow ups. But for some reason, a lot of people treat choosing their co-founder with even less importance than they put on hiring. Don't do this. This is one of the most important decisions you make in the life of your startup and you need to treat it as such. And for some reason students are really bad at this. They just pick someone. They're like I want to start a business. You want to start a business? Let's start a startup together. There are these like co-founder dating things where you're like, hey, I'm looking for a co-founder. We don't really know each other, let's start a company. And this is like crazy. You would never hire someone like this. And yet people are willing to choose their business partners this way. It's really, really bad. And choosing a random co-founder or choosing someone you don't have a long history with. Choosing someone that you're not friends with so that when things are really going wrong, you have this sort of past history to bind you together. Usually ends up in disaster. We had one YC batch where nine of about 75 companies added on a random co-founder between when we interviewed the companies and when they started. And all nine of those teams fell apart the next year. The track record for founders that don't already know each other is really bad. A good way to meet a co-founder is in college. If you're not in college and you don't know a co-founder, the next best thing I think is to go work in an interesting company. If you work at Facebook or Google or something like that, it's probably almost as co-founder rich as Stanford. It's probably almost as co-founder rich as Stanford. It's better to have no co-founder than to have a bad co-founder. But it's still bad to be a solo founder. I was just looking at the stats here before we started. For the top, and I may have missed one because I was counting quickly, but I think that for the top 20 most valuable YC companies, all of them have at least two founders. And we, we probably fund at a rate of something like one out of ten solo teams. So, best of all, founder you know, co-founder you know. Better than that, or not as good as that, but still okay, solo founder. Random founder you meet. Again, students do this for some reason. Really, really bad. So as you're thinking about co-founders and people that could be good, there's a question of what you're looking for, right? And at YC we have this public phrase, and it's relentlessly resourceful, and everyone's heard of that. And I think that really is a very good description for what you're looking for with co-founders. You definitely need relentlessly resourceful co-founders. But there's a more colorful example that we share at the YC kickoff. Paul Graham started using this and I've kept it going. So you're looking for co-founders that need to be unflappable, tough, they know what to do in every situation. They act quickly, they're decisive, they're creative, they're ready for anything. And it turns out that there's a model for this in, in pop culture. And it sounds really dumb. But it's at least very memorable. And we've told every class of why I see this for a long time. And I think it helps them. And that model is James Bond. And again, this sounds crazy, but it, it, it will at least stick in your memory. And, and you need someone that behaves like James Bond more than you need someone that is, you know, an expert in some particular domain. As I mentioned earlier, you really want to know your co-founders for a while. Ideally years. This is true for early hires as well. But incidentally, more people get this right for early hires than they do for co-founders. So, again, take advantage of school. In addition to relentlessly resourceful, you want a tough and a calm co-founder. There are all the obvious things like smart, but everyone knows that you want a smart co-founder. Most people don't prioritize tough and calm well enough. Especially if you feel like you yourself aren't, you need a co-founder who is. If you're not technical, and hopefully most people in this room are, you really want a technical co-founder. There's this weird thing going on in startups right now, where it's become popular to say, like, you know what? We don't need technical founders. We're going to hire people. We're just going to be great managers. That doesn't work too well in our experience. You know, software people really should be starting software companies. Media people should be starting media companies. So in, in a YC experience, two or three co-founders seems to be about perfect. One, obviously not great. Five, really bad. Four works sometimes, but two or three I think is what to target. Okay, the second part of how to hire, try not to. So one of the weird things that you'll notice if you start a company is that everyone asks you how many employees you have. And this is the metric people use to sort of judge how real your startup is and how cool you are. And if you say you have a high number of employees, they're really impressed. And if you say you have a low number of employees, then, then you sound like sort of this little joke. number of employees, then, then you sound like sort of this little joke. But actually it sucks to have a lot of employees, and you should be proud of how few employees you can have. Lots of employees ends up with things like a high burn rate, means you're losing a lot of money every month. Complexity, tension, slow decision making. The list goes on, but it's nothing good. So you want to, you want to be proud of how much you can get done with a small number of employees. Many of the best YC companies have had a phenomenally small number of employees for the first year, sometimes none besides the founders. They really try to stay small as long as they possibly can. At the beginning, you should only hire when you have a desperate need to. Later, you need to learn how to hire fast and scale up the company. But in the early days, the goal should be not to hire, not to hire. And one of the reasons this is so bad is that the cost of getting an early hire wrong is really high. In fact, a lot of the companies that I've been very involved with that have had a very bad first hire in the first three or so employees never recover from it. It just kills the company. Airbnb spent five months interviewing their first employee before they hired someone. And in their first year, they only hired two people. Before they hired a single person, they, they wrote down a list of the cultural values that they wanted any Airbnb employee to have. One of those was that you had to ble, bleed Airbnb. And if you didn't sort of agree to that, they just wouldn't hire you. As an example of how intense Brian Chesky is, he's the Airbnb CEO, he used to ask people before he hired them at Airbnb if they would take the job if they got a medical diagnosis that they had one year left to live. He wanted them to be that committed. Later he decided that was like a little bit too crazy. And I think he relaxed it to ten years. But last I heard, he still asks that question. But like, you know, these hires really matter. These people are what go on to define your company. And so you need people that believe in it almost as much as you do. And it sounds like a crazy thing to ask. But he's gotten this culture of extremely dedicated people that come together when the company faces a crisis. And when the company faced a big crisis early on, everyone in the company lived in the office, and they shipped product every day until the crisis was over. One of the remarkable observations about Airbnb is if you talk to any of the first, say, I don't know, 40 or 50 employees, they all feel like they're a part of the founding of the company. And this is really hard to get right, and this is really rare. But by having an extremely high bar, and hiring slowly, and making sure everyone believes in the mission, you can get that. Okay, so let's say, you know, you've listened to the warning about not hiring, and now you absolutely have to. When you're in this hiring mode, your job is, it should be your number one priority to get the best people. Just like when you're in product mode, that's your number one priority, and when you're in fundraising mode, fundraising is your number one priority. One thing that founders always underestimate is how hard it is to recruit. You know, you think you have this great idea, everyone's going to come and join, but that's not how it works. To get the very best people, they have a lot of great options, right? And so it can easily take a year to recruit someone. It's this long process and you have to convince them that your mission is the most important of anything that they're looking at. This is another case of why it's really important to get the product right before anything else. The best people know that they should join a rocket ship. By the way, that's my number one piece of advice. If you're going to join a startup, pick a rocket ship. Pick a company that's already working and that the, you know, not everyone yet realizes that. But it's, you know, you know, because you're paying attention, that it's going to be huge. And, and again, you can usually identify these. But good people know this, right? And so good people will wait, and they want to see that you're on this breakout trajectory before they join. One question that people asked online this morning is how much time you should be spending hiring. The answer is either like zero or 25%. You're either not hiring at all, or it's probably your single biggest block of time. In practice, like all these books on management or whatever, say that you should spend 50% of your time hiring. But the people that give that advice, it's rare for them to even spend 10% themselves. 25% is still a huge amount of time. But that's really how much you should be doing, once you're in hiring mode. Okay, so if you compromise and hire someone mediocre, you will always regret it. We always like to warn founders of this. No one really feels it until they make the mistake the first time. But it can poison the culture. Mediocre people at a big company cause some problems. They don't usually kill the company. A single mediocre hire in the first five will often in fact kill a startup. A friend of mine has a sign up in the conference room that he uses for interviews. And he like positions the sign so the candidate is looking at it while they're interviewing. And it says that mediocre engineers do not build great companies. Yeah, that's true. It's really true. You can get away with it in a big company, right? because people just sort of like fall through the cracks. But, but every person in a startup sets the tone. So if you compromise in the first, you know, say five, ten hires. It might kill the company. And you should think about that for everyone you hire. Like, will I bet the future of this company on the single hire? And that's a tough bar. At some point in the life of the company when you're bigger, you will compromise on a hire. There will be some pressing deadline or something like that. You will still regret it. But this is the difference between theory and practice. And we're gonna have later speakers talk about what to do when this happens. But in the early days, you just can't screw it up. Sources of candidates. This is another thing that students get wrong a lot. The best source by far for hiring is people that you already know. And people that other employees in the company already know. Most great companies in tech have been built by personal referrals for the first at least 100 employees and often many more. Most founders feel awkward about calling everyone good that they've ever met and asking their employees to do the same. But you'll notice that if you go work at Facebook or Google, one of the things they do in your first few weeks is an HR person sits you down. And like beats out of you every smart person you've ever met. No matter how likely you think you are to be able to recruit them. And these personal referrals really are the trick to hiring. So you have to like go way beyond your comfort zone here. really are the trick to hiring. So you have to go way beyond your comfort zone here. Another tip is to look outside the valley. It is brutally competitive to hire engineers here. But you probably know very good people living elsewhere in the world that would love to work with you. Another question that founders ask us a lot about is experience and how much that matters. The short version here is that experience matters for some roles and not others. When you're hiring sort of like, you know, someone that is going to run a large organization of your company, experience probably matters a lot. For most of the early hires you make in a startup, experience doesn't matter very much. And you should go for aptitude and believe in what you're doing. Most of the best hires that I've ever made in my entire life have never done that thing before. So it's really worth thinking like, is this a role where I care about experience or not? Most of the time you don't, in the, in the early days. There are three things that I look for when I hire people. Are they smart? Do they get things done? And do I want to spend a lot of time around them? And if I get an answer, if I get, ended up with a yes for all three of these, I almost never regretted the hire. It's almost always worked out. You can learn a lot about all three of these things from an interview. But the very best way is by working together. So ideally, it's someone you've worked with in the past. And in which case you probably don't even need an interview. If you haven't, then I think it's way better to work with someone on a quick project for a day or two before hiring them. You'll both learn a lot, they will too. And most first time founders are very bad interviewers, but very good at evaluating someone after they've worked together. So one of the pieces that we give advice, one of the pieces of advice that we give at YC is try to work together on a project rather than just doing an interview. If you are going to interview, which you'll probably do as well, you should ask specifically about projects that someone has done in the past. You'll learn a lot more than you will with brain teasers. For some reason, young technical founders love to ask brain teaser questions rather than just ask what someone's done. Really dig into projects people have worked on. And call references. That is another thing that first time founders like to skip. You want to call some people that these people have worked with in the past. And when you do, you don't just want to ask like, oh, how was so and so? Like, you really want to dig in. Like, is this person in the top 5% of people you've ever worked with? What specifically did they do? Would you hire them again? Like, why, why, why aren't you trying to hire them again? You really have to press on, on these reference calls. Another thing that I've noticed from talking to a lot of YC companies is that good communication skills tend to correlate really well with hires that work out. I used to not pay attention to this. We're going to talk more about why communication is so important in an early startup. If someone is difficult to talk to, if someone cannot communicate clearly, it's a real problem in terms of their likelihood to work out. Also, for early employees, you want people that have somewhat of a risk taking attitude. You, you generally get this or they wouldn't be interested in a startup. But now that startups are sort of more in fashion, you, you want people that actually sort of like a little bit of risk. If someone's choosing between like McKinsey and joining your startup, very unlikely that person's going to work out at the startup. You also want people who are maniacally determined. And that is slightly different than having a risk tolerant attitude. So you really should be looking for both. By the way, people are welcome to interrupt me with questions as stuff comes up. There's a famous test from Paul Graham called the animal test. And, and the idea here is that you should be able to describe any employee as an animal at what they do. And I don't think that probably translates out of English very well, but you know, you need unstoppable people. You want, you want people that are just going to get it done. Founders that end up being really happy with their early hires usually end up describing these people as the very best in the world at whatever they do. Mark Zuckerberg once said that he tries to hire people that A, he would spend time with socially, and B, that he'd be comfortable reporting to if the roles were reversed. This strikes me as a very good framework. You don't have to be friends with everybody. But you should at least enjoy working with them. And if you can't have that, you need to at least deeply respect them. But again, the, if you don't want to spend a lot of time around people, you should sort of trust your instincts on that. While I'm on this topic of hiring, I want to talk about employee equity. Founders screw this up all the time. I think that as a rough guideline, you should aim to give 10% of the company to the first ten employees. They have to earn it over four years anyway. And if they're successful, they're going to contribute way more than that. They're going to increase the value of the company by way more than that. And if not, then they won't be around anyway. So for whatever reason, founders are usually very stingy with equity to employees and very generous with equity to investors. And I think this is totally backwards. I think this is one of the things that founders screw up the most often. You know, employees will only add more value over time. Investors sort of like write the check and then despite a lot of big promises don't usually do that much. Sometimes they do. sort of like write the check and then despite a lot of big promises don't usually do that much, sometimes they do. Um, but, but your employees are really the ones that build the company over years and years. So I believe in like fighting with investors to reduce the amount of equity they get, um, and then being as generous as you possibly can with employees. Um, the YC companies that have done this well, the YC companies that have been super generous with equity to early employees, in general are the most successful ones that we've funded. All right, so one thing that founders forget is that after they, after that they hire employees, they have to retain them. I'm not going to go into a huge amount of detail here, because we're going to have a full lecture on this later. But I do want to talk about it a little bit, because founders get this wrong so often. You have to make sure that your employees are happy and feel valued. This is one of the reasons that big equity grants are important. People in the excitement of joining a startup don't think about it much. But as they come in day after day, year after year, if they feel like they've been treated unfairly, that will really start to grate on them. And resentment will build. But more than that, learning just a little bit of management skill, which first-time CEOs are usually terrible at, goes a long way. One of the speakers at YC this summer, who is now extremely successful but struggled early on and had his team turn over a few times. Someone asked him what his biggest learning was. He said that it turns out you shouldn't tell your employees they're fucking up every day unless you'd like them all to leave, because they will. But as a founder, this is this like very natural instinct, right? You think you can do everything the best and it's easy to tell people when they're not doing it well. So learning just a little bit here will prevent this like massive team churn. It also doesn't come naturally to most founders to really praise their team. It took me a while to learn this too. You have to let your team get all the credit for everything good that happens. And you take responsibility for the bad stuff. You have to not micromanage. You have to like continually give people new areas of responsibility. These are not the things that most founders think about. I think the best thing you can do is be aware that as a first time founder, you are likely to be a very bad manager and try to overcompensate for that. Dan Pink talks about these three things that motivate people to do great work. Autonomy, autonomy, mastery, and purpose. I never thought about that when I was running my company, but I've thought about it since. And I think that's actually right, and I think it's worth trying to, to think about that. It also took me a while to learn to do things like one on ones and give clear feedback. All of these things that first time CEOs just don't do until they get burned a few times. But maybe I can save you from doing that. All right, and the last part on the team section is about firing people when it's not working. No matter what I say here, this is not going to prevent anyone from doing it wrong. And the reason is that firing people is one of the worst parts of running a company. Actually, in my own experience, I think it is the worst. Every first time founder waits too long. Everyone hopes that an employee will turn around. But the right answer is to fire fast when it's not working out. It's better for the company. It's also better for the employee. But it's so painful and so awful that everyone gets it wrong the first few times. In addition to firing people who are doing bad at their job, you also want to fire people who A, create an office politics, and B, who are persistently negative. The rest of the company is always aware of employees doing things like this, and it's just this huge drag. It's completely toxic to the company. Again, this is an example of something that might work okay in a big company, although I'm still skeptical, but will kill a startup. So I think you need to watch out for people that are, yes? How do you balance firing people fast and making your other employees feel like they're secure even if they screw up sometimes? You don't want them to feel like they're out the door. Yeah, sure. So the question is how do you fi, balance firing people fast and making early employees feel secure? The answer is the, when an employee is not working, it's not like they screw up once or twice. Anyone will screw up once or twice, or more times than that. And you know, you should be like very loving, not take it out on them, like be a team, work together. If someone is getting every decision wrong, like be a team, work together. If someone is getting every decision wrong, that's when you need to act. And at that point, it'll be, it'll be painfully aware to everyone. It's not a case of a few screw ups. It's a case where every time someone does something, you would have done the opposite yourself. You don't get to make their decisions, but you do get to choose the decision makers. And if someone's doing everything wrong, just like a consistent thing over like a period of many weeks or a month, you'll be aware of it. This is one of those cases where in theory it sounds complicated to be sure what you're talking about, and in practice there's almost never any doubt. It's the, the difference between someone making one or two mistakes and just constantly screwing everything up or causing problems or making everyone unhappy is, is painfully obvious the first time you see it. Yes? When should co-founders decide on the equity split? Great question. When should co-founders decide on the equity split? For some reason, I've never really been sure why this is. A lot of founders, a lot of co-founders like to leave this off for a very long time. You know, they'll even sign the incorporation documents in some crazy way so they can wait to have this discussion. This is not a discussion that gets easier with time. You want to set this ideally, you know, very soon after you start working together. And it should be near equal. If you're not willing to give someone, your co-founder, you know, like an equal share of the equity. I think that should make you think hard about whether or not you want them as a co-founder. But in any case, you should try to have the ink dry on this before the company gets too far along. Like certainly in the first number of weeks. Yes? Any experience would be okay. But then how do you know if it's gonna be crippling and fire that way? So the question is, I, I said that inexperience is okay. How do you know if that's going to, you know, if someone's gonna scale past, not scale up to a role as things go on and later become crippling. People that are really smart and that can learn new things can almost always find a role in the company as time goes on. You may have to move them into something else, something other than where they started. You know, it may be that you hire someone to lead the engineering team that over time can't scale as you get up to 50 people, and you give them a different role. Really good people though can almost always find some great place in the company. I have not seen that be a problem too often. What if your relationship with your founder or founders breaks down over time and you're ready to split back and be an entrepreneur, what's the best way to ? All right, so the question is what happens when your relationship with your co-founder falls apart? We're going to have a session on mechanics at the, near the end of the course. But here is the most important thing that founders screw up, which is every found, every co-founder, you yourself of course, has to have vesting. Basically what you're doing with co-founder vesting is you're pre-negotiating what happens if one of you leaves. And so the normal stance on this in Silicon Valley is that it takes four years. Let's say you split the equity 50-50. It takes four years to earn all of that. And the clock doesn't start until one year in. So if you leave after one year, you keep 25% of the equity. If you leave after two years, 50 and on and on like that. If you don't do that, and if you have a huge fallout, and one founder leaves early on with half the company. You have like this dead weight of the, on your equity table. And it's very hard to get investors to fund you or to do anything else. So number one piece of advice to prevent that is to have vesting on the equity. We pretty much won't fund a company now where the founders don't have vested equity, vesting equity, because it's just that bad. The other thing to do is as soon as problems come up in the relationship between the co-founders, which happens to some degree in every company, talk about it early. Don't let it just sit off there and fester. If you have to choose between hiring an employee that's not ideal and losing your partner, use this to another competitor, what do you do? If you have to choose between hiring a suboptimal employee and losing your customers to a competitor, what do you do? If it would be one of the first five, say, employees of a company, I would lose those customers. I just, I think the damage that it does to the company, you know, you don't want to, it's better to lose some customers than kill the company. Later on I might have a slightly different opinion, but it's really hard to say in the general case. How about one more question and I'll keep going. Yes? What's your experience with co-founders who aren't working in the same location? I'm going to get to that later. The question is, what about co-founders that aren't working in the same location? Don't do it. I am skeptical of remote teams in general, but in the early days of a startup where communication and speed outweigh everything else, for whatever reason, video conferencing or calls just don't work that well. The data on this is look at the, say like, 30 most successful software startups of all time. And try to point to a single example where the co-founders were in different locations. It's really, really tough. All right, we'll skip a little bit of this. All right, so now we're going to talk about execution. Execution for most founders is not the most fun part of starting a company. But it is often the most critical. Most people that start a company think that they are signing up to have this brilliant idea. And, you know, then they're just going to like be on magazine covers and go to parties. But, but really what it's about, more than anything else, what, what, what being a founder means is, is signing up for this years long grind on execution. And you can't outsource this. The way to have a company that executes well is to execute well yourself. Everything in a startup gets modeled after the founders. Whatever the founders do becomes the culture. So if you want a culture where people work hard and pay attention to detail and focus on the customer and are frugal, you have to do it yourself. There is no other way. You cannot hire a COO and have them, you know, do this while you go off to conferences. The company just needs to see you as like this maniacal execution machine. As I said in the first lecture, there's like a hundred times at least more people with great ideas than people that are willing to put in the effort to execute them well. Ideas by themselves are not worth anything. Only executing well is what, what adds value, or what creates value. A big part of execution is just putting in the effort. But there is a lot you can learn about how to be good at it. And so we're gonna have, I think, three classes that just talk about this. So the CEO, people have asked me a bunch of times, like the jobs of a startup CEO. And there are probably more than five, but you know, here are five that come up a lot in the early days. The first four, I think everyone thinks of as CEO jobs. Set the vision, raise money, evangelize the company to people you're trying to recruit, existing employees, partners, press, customers, everybody. Hire and manage the team. But the fifth one is that setting the execution bar. And this is not something that most founders get excited about or think about themselves doing. But I think it's actually one of the critical CEO roles, and no one but the CEO can do this. Execution gets divided into two key questions. One, can you figure out what to do? And two is, can you get it done? So I want to talk about two parts of getting it done, assuming that you've already figured out what to do. And those are focus and intensity. So, so focus is critical. One of my favorite questions to ask founders is what they're spending their time and their money on. This reveals almost everything about what founders think is important. One of the hardest parts about being a founder is that there are a hundred important things competing for your attention every day. And you have to identify the right two or three, work on those, and then ignore or delegate or defer the rest. And a lot of these things that, that founders think are really important, you know, interviewing a lot of different law firms, going to conferences, recruiting advisors, whatever, they just don't matter, right? And what really does matter varies with time, but it's an important piece of meta advice. You need to figure out what the two or three most important things are, and then just do those. And you can only have two or three things every day, because everything else will just come at you. You know, fires of the day. And if you don't get really good at setting what these two, two or three priorities are every day. You'll never be great at actually getting stuff done. This is really hard for founders, right? Founders are people that get excited by starting new things. Unfortunately, the trick to great execution is to say no a lot. You know, you're saying no 97 times out of 100. And most founders find that they have to make a very conscious effort to do this. Most startups are not nearly focused enough. They work really hard, maybe, but they don't work hard on the right things. And you'll still fail. One of the great and terrible things about starting a startup is that you get no credit for trying. You only get points when you make something that the market wants. So if you work really hard on the wrong things, no one will care. So then there's this question of how do you figure out what to focus on each day. And this is where it's really important to have goals. Most good founders that I know at any given time have a small number of overarching goals for the company. Everybody in the company knows, could be things like ship a product by this date, you know, maintain this growth rate, get this certain engagement rate, hire for these key roles, get this deal done. But anybody could tell you in the company every week, what are our, what are our key goals? And then everybody executes based off of that. The founder really does set the focus. Whatever the founder cares about, whatever the founders think are the key goals, that's going to be what the whole company focuses on. And, and the best founders repeat these goals over and over, far more often than they think they should need to. They put them up on the walls, they talk about them in one on ones, all hands meeting every week. But it keeps the company focused. One of the keys to focus, and why I said I think co-founders in different places struggle is that you can't be focused without really great communication. Even if you only have say four or five people in a company, a small communication breakdown is enough for everybody to be working on slightly different things. And then you lose focus and the company just scrambles. I'm going to talk about this a little bit more later. But growth and momentum are something you can never lose focus on. Growth and momentum are what a startup lives on. And you always have to focus on maintaining these. You should always know how you're doing against your metrics. You should have a weekly review meeting every week. And you should be extremely suspicious if you're ever talking about, we're not focused on growth right now. We're not growing that well right now, but we're doing this other thing. We don't have a timeline for when we're going to ship this, because we're focused on this other thing. We're doing a rebrand, whatever. Almost always a disaster. So you want to have the right metrics and you want to be focused on growing those metrics and having momentum. Don't, don't let the company get distracted or excited by other things. A common mistake is that companies get excited by their own PR. It's really easy to get PR with no results. And it feels like you're actually really cool. But in a year, you'll still have nothing. And at that point, you won't be cool anymore. And you'll just be talking about these articles from a year ago. That, oh, you know, like, these Stanford students start this new startup. It's going to be the next big thing. And now you have nothing. And that sucks. And then, as I mentioned already, be in the same space. This is like, I think this is pretty much a non-starter. Remote co-founding teams is just really, really hard. It slows down the cycle time more than anybody ever thinks it's going to. The other piece besides focus for execution is intensity. Startups only work at a fairly intense level. A friend of mine says that the secret to startup success is extreme focus and extreme dedication. You know, you can have like a startup and one other thing. You can have a startup and a family, or, but you probably can't have many other hobbies. Startups are not the best choice for work-life balance. And that's sort of just the sad reality. There's a lot of great things about a startup, but this is not one of them. They are all consuming in a way that is difficult to explain. You, you generally need to be willing to outwork your competitors. The good news here, wow, that's hard to see, is that a small amount of extra work on the right thing makes a huge difference. One example that I like to give is thinking about the viral coefficient for a consumer web product. How many users, how many new users each existing user brings in? If it's 0.99, the company will eventually flatline and then die. And if it's 1.01, you'll be in this happy place of exponential growth forever. So this is just one concrete example of where a tiny bit of extra work is the difference between success and failure. And when we talk to successful founders, they tell stories like this all the time. You know, just outworking their competitors by a little bit was what made them successful. So you have to be really intense. You know, this only comes from the CEO. This only comes from the founders. One of the biggest advantages that startups have is execution speed. And you have to have this relentless operating rhythm. Facebook has this famous poster that says, move fast and break things. But at the same time, they manage to be obsessed with quality. And this is why it's hard. It's, it's easy to move fast or be obsessed with quality. The trick is that you have to do both at a start up. You need to have a culture where people have very high quality standards for everything the company does, but still move quickly. Apple, Facebook, and Google have all done this extremely well. It's not just about the product. It's about everything they do. They move fast and they break things. And they're frugal in the right places, but they care about quality everywhere. You know, you don't buy people shitty computers if you don't want them to write shitty code. You really have to, you do have to set a quality bar that runs through the entire company. Related to this is that you have to be decisive. Indecisiveness is a startup killer. Mediocre founders spend a lot of time talking about grand plans, but they never quite make this decision. You know, they're, they're talking about, well, I could do this thing that sounds great, or I could do this other thing. And they keep going back and forth, and they don't act. And what you actually need is this bias towards action. The best founders work on things that seem small, but they move really quickly. They get things done really quickly. Every time you talk to the best founders, they, they've gotten new things done. In fact, this is the one thing that we've learned best predicts the success of founders in YC. If every time we talk to a team, they've gotten new things done, that's the best predictor we have that the company will go on to be successful. Part of this is that you can do huge things by, in incremental pieces. If you just keep knocking down small chunks one at a time, in a year, you look back and you've done this amazing thing. On the other hand, if you disappear for a year, and you expect to come back with something amazing all at once, it usually never happens. So you have to pick these right size projects. You know, even if you're building this crazy synthetic biology company, most people would say, well I have to go away for a year. I can't do this incrementally. There's almost always a way to break it down into smaller projects. So speed is this huge premium, right? The, the best founders usually respond to email the most quickly. They make decisions the most quickly. They're generally quick in all these different ways. And they just have this do whatever it takes attitude. They also show up a lot. They come to, you know, they come to meetings, they come in, they, they meet us in person. One piece of advice that I have that's always worked for me is they, they get on planes in marginal situations. How are we doing on time? I'll tell a quick story here. When I was running my own company, we found out that we were about to lose a deal. It was sort of this, this critical deal from the first big customer in the space. And it was going to go to this company that had been around for years before we were. And they had this like all locked up. So we called and said, hey, we have this better product. You've got to meet with us. They said, you know what? We're signing this deal tomorrow. Sorry. We drove to the airport. We got on a plane. We were at their office at 6 a.m. the next morning, we just sat there, they told us to go away, we just kept sitting there. Finally one of the junior guys decided to meet with us. Finally after that one of the senior guys decided to meet with us. They ended up ripping up the contract with this other company. And we closed the deal with them about a week later. And I'm sure that had we not gotten on a plane, had we not shown up in person, that would not have worked out. And so you just sort of like, you show up, you do these things. You know? It's, when people say get on planes in marginal situations, they usually mean it. Well, they don't usually mean it literally, but I think it's actually good literal advice. All right. Six minutes, so. I'll skip that part then. So I mentioned this momentum and growth earlier. Once more, the momentum and growth are the lifeblood of startups. This is probably in the top three secrets to executing well. You want a company to be winning all the time. If you ever take your foot off the gas pedal, things will spiral out of control, snowball downwards. A winning team feels good and keeps winning. A team that hasn't won in a while gets demotivated and keeps losing. So always keep momentum, is this prime directive for managing a startup. If I can only tell founders one thing about how to, how to run a company, it would be this. For most start, software startups, this translates to keep growing. For hardware startups, it tran, it translates to don't let your ship date slip. This is what we tell people during YC, and they usually listen and everything is good. What happens after the end of YC is that they get distracted on other things, and then growth slows down. And somehow, after that happens, people start getting unhappy and quitting and then everything falls apart. It's hard to figure out a growth engine because most companies grow in new ways. But there is this thing about if you build a good product, it will grow. And so getting this good, this product right at the beginning, is the best way to not lose momentum later. If you do lose momentum, most founders try to get it back in the wrong way. They give these long speeches about vision for the company and they try to rally the troops with speeches. But employees in a company where momentum has sagged don't want to hear that. You have to save the vision speeches for when the company is winning. When you're not winning, you just have to get momentum back in small wins. A board member of mine used to say that sales fix everything in a startup. And that is really true. So you figure out where you can get these small wins and you get that done. And then you'll be amazed how all the other problems in a startup disappear. Another thing that you'll notice if you have momentum sag, is that everyone starts disagreeing about what to do. Fights come out when a company loses momentum. And so a framework for that, that I think works, is that when there's disagreement among the team about what to do, then you ask your users, and you do whatever your users tell you. And you have to remind people, like, hey, stuff's not working right now, We don't actually hate each other. We just need to get back on track and everything will work. And if you just call it out, if you just acknowledge that, you'll find that things get way better. To use a Facebook example again, when Facebook's growth slowed in 2008, Mark instituted a growth group. They worked on very small things to make Facebook grow faster. All of these by themselves seemed really small, but they got the, the curve of Facebook back up. It quickly became the most prestigious group there. Mark has said that it's been one of Facebook's best innovations. According to friends of mine that worked at Facebook at the time, it really turned around the dynamic of the company. And it went from this thing where everyone was feeling bad and momentum was gone, back to a place that was winning. So a good way to keep momentum is to establish an operating rhythm in the company early, where you ship product and launch new features on this regular basis. Where you're reviewing metrics, you know, every week with the entire company. This is actually one of the best things your board can do for you. Boards add value to business strategy only rarely. But very frequently, you can use them as a force and function to get the company to care about metrics and milestones. One thing that often disrupts momentum and really shouldn't is competitors. Competitors making noise in the press, I think probably crushes a company's momentum more often than any other external factor. So here's a good rule of thumb. Don't worry about a competitor at all until they're actually beating you with a real shipped product. Press releases are easier to write than code. And that is still easier than making a great product. So remind your company of this and don't, this is sort of a founder's role, is not to let the company get down because of the competitors in the press. This great quote from Henry Ford that I love. The competitor to be feared is one who never bothers about you at all, but goes on making his own business better all the time. These are almost never the companies that put out a lot of press releases, and they bum people out. Should we move on to this section? You know what? We'll cover this in a later lecture. I will talk about finance, deal-making, and distribution. Are there any questions? Okay, so on Tuesday, Paul Graham is going to speak. See you then. Thank you.