 Okay, any questions? Have you experienced any difference between doing an in-person interview versus an online survey? So the question was, have I experienced any differences between running user surveys in person or online? Honestly, you'll probably figure out what the best solution is for yourself. Online honestly gets a lot of it right. I conduct a lot of interviews over Zoom. I think it's, again, it depends kind of on the context of the problem. Sometimes I really find it powerful to stand behind a user and ask them to use their existing tools. That can only really be done kind of well if you're in person, but I have seen some people do that pretty effectively over Zoom as well. There's something that I keep in mind. There's a UX researcher named Jared Spool, and he talks about some research where he says he noticed that in product teams, products tend to get worse over time if you find out that the product and design teams are not interacting directly with their users a minimum of every six weeks, some amount of time, some set of hours. And so it's one of those things where it's like, there's just so much to be gained from just talking and having a small conversation, where you just miss a ton of stuff. Because it's like, I don't know how many surveys you fill out, but the people who do tend to fill surveys, they fill a very weird bucket. Oh yeah. Sorry. I missed the, I mistook the question as just online or offline. Yeah, no, you definitely need this open ended conversation with a user rather than like a survey. Yeah, absolutely. So you always didn't want to supplement. Yeah, definitely. Yes? Do you have any examples of when your user is different from your buyer? So, for example, my startup involves potentially selling to countries. So I will be trying to get entire countries to sign agreements to buy from me. But the users of the product are going to be the people in the country. So who am I? Yeah, how do you work on that? We should repeat the question. Yeah, the question was, what happens if the users of your product are different from the buyers? And in the context of the asker, she was asking whether, or countries may be the people using it, but the buyer may be an individual. Yeah, this is a tough problem. This usually calls for more user interviews. So the best answer here is just to have conversations with different people in the buying chain. Remember that a great user interview is not actually a sales pitch. It's actually learning more about the context in which that person encounters the problem. So in your case, I might consider having several different layers of interviews with potential buyers, potential users of the product, potential influencers. Oftentimes in an enterprise sale, there are some people in the buying chain that aren't even involved in using the product whatsoever, but they have a say in maybe the budget or the timeframe in which they'll purchase or use new solutions. And so it helps to actually have conversations with them as well. So you can get context around maybe past attempts that they've tried to solve this problem, you know, millions of dollars that they've already spent that went down the drain. And you can learn how they may be helpful or how they may hinder your sales process in the future. Just a quick add to that. I would say for the economic buyer in the company or whoever government or whatever it is, talking to them and trying to understand how they're going to make the decision and what they actually value is probably most important. The only thing I would add to that is that when you're talking to your user, there's usually like in a complex B2B enterprise transaction, you have someone that's acting as your champion. Someone who's like super excited about using the product, usually the user, or there's someone who's like, I don't have to do this anymore if you get implemented or bought by my company. And so you need to use them as your, like, Virgil. Like, you're going to basically say, like, help me map out who's all involved, who needs to be in the room, and what are their sort of motivations. And so you're basically looking to get intel for all that process. And then the whole question is, like, you need to have all the arguments for things that they sort of care about. One of the hacks that I like to use at this stage, and it helps if you're still in university, but you can actually kind of talk to big companies as if you were, say, the reporter for a school newspaper or if you were working on a school project. You can use this as like a hack to actually get a pretty high level contact with someone who might become a champion simply by kind of saying, I'm just really excited about budget management software. I would love to learn more about this. I know that you work on this a lot. And so you can actually interact and talk to people at a pretty high level before you even announce that you're working on a solution for that. It's like, how much money do you control for your budget? Amazing. Whoa. So for some of us, we've already launched, we're already talking to a bunch of users a week. But as we scale, that might get beyond what any one person can talk. How do you isolate down the subset of users that you want to interview? The question is, when we get to scale, how do you segment just the users? What's the reason for segmenting the users? Well, if you have a broad user base that you talk to, you know, housewives in Nova Scotia, they might have different feedback than someone in New York. So if you only talk to those housewives, you don't get feedback from New York. So how do you decide, all right, do you just get a little bit of everyone? So there's a couple good tools for helping. The question is basically, let's say you have a really broad audience that you're trying to figure out what are their use cases. How do you best handle that segmentation so that way you get useful feedback to know specific direction of the product. So there's a couple of useful tools that I've used in the past and I've recommended to other people. So Google Consumer Surveys and SurveyMonkey Audience. So both of those you can ask really simple questions and choose the demographic. SurveyMonkey is actually a little bit more expensive, but they actually have proper survey methodology that actually will balance it out based on like US population. So for example, most people will fill out surveys, let's say for money or for nonprofits, it's mostly skewed towards women, and they tend to be older. And so like, if you were to ask Google Consumer Surveys, a lot of that stuff will tend to be skewed that way. And for them, you can actually specifically handle it and they'll actually use statistics to sort of balance it out. So that's number one, it's like directly asking. I tend to not, for a broad product, do like general surveys. Usually it's almost always to my direct users to figure out like okay who seems to be just already a fan of my product like who have i accidentally acquired who's like a super fan i'm trying to figure out how do i get more of you and then i'm doing everything i can get them to talk to me so i'd rather like i will spend like 50 bucks on a gift card to get that user to have a conversation with me so I understand who he is and see if there's ways that I could multiply him. And one of the things to remember is like never, remember that, you know, as the founder of a company, you can actually reach out directly, personally, to any one of your users and ask if you could just jump on the phone and chat with them. This is like something that is kind of crazy because, you know, no big company, like Microsoft's not going to do this, Facebook's not going to do this. This is a competitive advantage that you as kind of a small, early-stage company have. You as the product creator, the founder, can actually have a direct connection with any user in your user base. Some people productize this and do like tons and tons of emails, but others just choose to have maybe 10 conversations, 20 conversations with individual users every week. Others just choose to have maybe 10 conversations, 20 conversations with individual users every week. Yeah, one of the things I always do, if you have enough data in your case, like lots of customers, is to start tabulating for each customer, figure out the characteristics of each one, like female, where they live, income level, so on and so forth. And if you have all the emails, there's actually services out there that you can qualify all these people. And then after that, bucket all the customers into like, here are my best customers. Here are the ones that paid me a hundred bucks or more. And then try to find patterns and then go segment that way and talk to those people. And like Kevin said, how do I get more people who naturally pay me more? What are the patterns? What do they do every day? And offer them gift cards or whatever to do user interview sessions. I would aim, like if you have enough data and you have enough of those types of people, I would really aim to do a session once a week with a handful of people. I find that's the most informative thing and the best thing you can do for your business and move forward. Like an in-person session? It can be over the phone. It doesn't have to be in person, depending on the product. If you have an MVP and you're talking to users and trying to solve a problem, what approach do you have to introduce this product that's built for them to start using? So let's say you have an MVP built, you're starting to do this user interview, you're listening and not talking. When do you do the sales pitch? To play off Adora's point, once you begin to understand within your user base who are the best users, who are the people that are most disappointed if they couldn't use your product anymore, who are the ones that get the most benefit, you can actually go sideways. And you can try to dig deep and find more people that reflect the same kind of demographic. Some of the tips or tricks that we use, it's like, where do those people live on the internet? Which subreddits do they use? Which Facebook pages do they follow? Which kind of other services do they already use? And then you can like use the fingerprint of the users who you already know to find more and find out where they live online. So my strategy would be, if I was in that case, and I had a wonderful user interview with them, and it's looking like, oh God, what I've built is perfect for this person. So instead of being like, I feel like it's the wrong moment to be like, ah, I gotcha. Here's my thing. I'd rather be like, I'd go home, maybe wait a day or two and be like, oh my God, thank you so much for the conversation that we had. And based on what you talked about, I built the first version of this. I would love for you to check it out and let me know what you think. It's totally based on your feedback. And it's more likely that they're going to be honored, their ego is stroked, and they're more likely to use it. So to me, I feel like that gives you maximum benefit versus it feels like, did you even care about me at all? Was this really a sales pitch hidden as a... Exactly. And that Exactly, and that's what you don't want to have after being such a conscientious, empathetic listener. And no one's that quick a programmer, that they programmed it while they were talking. Yes. Right. Right here. Yeah, so I was looking at the AMA from a few days ago, and I saw you left a comment regarding beta releases, and I was curious to hear more of your thoughts about why you shouldn't release a beta as opposed to, you know, you want to limit the amount of people that are on your platform and just have a few people to talk to. I was curious what you meant by that. So in the AMA, I kind of poop poop beta versions or labeling your product as beta to artificially constrain growth on your product. And so the main idea for me is that it creates an affordance. It basically is a sign that says, my product's not ready for you. Don't use me because it's not ready for production. Expect bugs, et cetera. And the reason a lot of founders or engineers like to put beta on there is because it's like, hey, you know what? I know it's not that good. I built it myself. I know how many bugs there are. And I'm so scared of people being disappointed. So if I put this beta on, it's just going to remove all liability. And to me, I feel like there's no product I've ever seen in production that doesn't have bugs. And almost always what good founders do is they listen to the people, they respond to the bugs, they fix it as quick as possible. And even in your beta, you will probably do the same. So to me, I see no reason why you need to do that, is to put that beta on. So I don't like anything that artificially contains growth, because all that stuff you're to do for the beta to be a good founder listening fixing etc you're going to do that even in production so that's number one uh the second thing about beta is that you're going to spend your whole company's life trying to get as many users as possible. And so if you're thinking like, I've built something so good that if I don't put beta on there, I'm just going to be overwhelmed with demand, I'm going to tell you that the hypothesis is probably wrong at all. And so again, if something does go wrong or some issue that you're actually super scared of, don't have that feature revealed. If something does go wrong, just like, hey, thank you so much. I've only been working on it a week or I've only been working on it a month. I'm going to fix it really quickly and then get it back to you. Please let me know if you find anything else. And then you're more likely to get a more positive response and people actually using it the way that you're hoping you might find people use it as a result. I like real world honest test about do people want this thing and then is my thing ready? Yeah, the real fear that founders need to get over is, okay, I've built something. Crap, people are going to come. If it's not good enough, they're never going to come back. Hopefully, you're building a business that millions of people can use anyway. And so just the four or five people that come back, or sorry, the four people that come and don't have a good experience, get that feedback and then just iterate towards something better. You don't have to worry about them not coming back. And I think that's actually one of the main reasons why most people don't launch early. Or they put beta tags on everything. Or they put beta tags on everything I wouldn't do wait for a hundred to me they're going to happen in concert with one another. Oh, yeah. So the question is like, okay, how many interviews do I have to do before I start building, et cetera? And so if you don't have anything built and you don't even really know what the solution needs to be, you're just trying to figure out what is the problems set out there, you basically do user interviews until you have an insight. Be like, I think I can build something that will solve the problem. And then you immediately start building. But for the most part, you want to do them in parallel. And just to jump in, Kevin offered a framework to think about, is the problem that I'm facing or is the solution to the problem big enough to be a company, you can actually extract that from those early user interviews more effectively than after you have a product because you're not biased by thinking, like, I already like this. I have a great idea already. You can actually be in that kind of pure mode where it's like, is this a real problem? Is this really a burning problem that people are facing? When do you charge? When do you charge? When do you charge? I love it. Early and often. As early as possible. And so like, if you can get away with taking a pre-order, wonderful. If you're building, like we often give advice to companies who are considering making a complex like B2B enterprise app. We're like, go try to sell that first before you go commit six to 12 months making it. It's asking people to put their money where their mouth is. Remember how I said before that oftentimes users don't really know what they want. They won't be able to describe the future product, but they will be able to know it when they see it. And at that point, you can extract data from them by saying, well, this person has the problem so acutely that they want to solve it that they're willing to pay some random startup that doesn't even have a product yet. They're willing to pay them. That's like a very strong signal that you're onto something. Eric's model for talking to users is very similar to what the best salespeople actually do when they're trying to sell their product. They're truly trying to understand the users or potential customers' problems. And then they're immediately trying to craft as like, oh yeah, we've got that. We're able to solve that. They're able to reposition their product back to them. And so this is why you're able to actually, for even complex enterprise software, if you truly understand the user or talk to them, you're like, oh, absolutely. We could totally build that. We can have that this timeframe. And I think we can do it at this cost. Would that be something of value to you? Would you like to sign a contract and have us committed? We can start with a paid trial or whatever. Like the whole thing is like through the idea, you can sell it to the right customer if they believe that you're capable and that you truly are going to build something of value to them. And so I did something where like for my first product, even before Pebble, we set up a landing page with Shopify or we set up a sales cart where people could actually go through the checkout process to buy the product. We didn't feel comfortable about charging people's credit cards, but we made the checkout process look exactly like they would have to pay. So we figured we would get a better signal from those users instead of just like an email sign up form like, hey, are you interested? They actually went through the flow thinking that they were going to have to pay something. And at the end, we said, oh, we're actually accepting payment in a couple weeks. But at that point, they were already so invested in it. We think that it was a more effective way of kind of gauging interest. Over here on the end. So, Kevin, this is related to the belonging idea that you guys did at Moopoo before launch. And very later, the question started. I was thinking, you've now talked about the open source libraries. Almost, I was thinking about it as the fall problem, but actually a usable open source model where you release a product out for people to start using for free as a way of building up an audience that you eventually will sell to, is that pretty much how that model works? And so I think for most of the successful open source-based companies, like say for GitLab, yes, that's pretty much how it works. They're thinking of building up an audience. I think for us, like that advice for us came directly from Jason Fried of 37signals. So he had talked about this story at South by Southwest doing big things with small teams. And they had been blogging for years on their blog, 37signals, before they finally launched Basecamp. And they realized that was super valuable to them because people didn't start from zero when evaluating their product. They felt like they already had a relationship with these people, and they were all the exact kind of people, the audience, that they knew that they were building for. The segment story is pretty good in this way as well. Oh, yeah. Yeah, so the founding of this kind of segment, the story around how segment got started, they actually created an open source library that analytics.js that you can embed into your website and it would kind of duplicate all of your analytics to, or it would send analytics from your site to all of the different existing aggregators. It was an open source project. It just went crazy on Hacker News. They ended up using that as a way to then sell the rest of their offering from there. I think it was a crazy small number of lines in the first version. The CEO at the time was like, not a fucking chance. Nobody wants your stupid little code. Why are we announcing this? That became the whole company. It just went nuts. People on Hacker News just couldn't get enough of it. People were asking, how do I get access to this code, etc. It's a counterpoint to the charge money early because that was a free, open source project that had no business model whatsoever at the beginning. Again, got a bunch of users in there to figure out, like, okay, how do I charge? How do I turn this into something of value? Yes, I'm talking about MAP product releases. So especially with the Pebble, you have a hardware product. At what point is your MAPX representative? What you're trying to build, and when is it not in a future way? So, for example, like if you gave me a paper watch, like that's obviously not a smart watch, but launch something, you get that. I love talking about this, because this is a problem that comes up all the time. So, especially for hardware companies, but I would abstract the problem, the question to, like, broader, like, if your MVP actually takes a lot of work to do if there's a lot of building that needs to happen before you can offer kind of that first modicum of value to users how do you do that uh do you do a paper prototype etc so the um I love this because I think that there are great ways that you can hack around this problem it's very easy to say like oh oh, I'm building, you know, this super complex piece of software or hardware. I need to spend at least two years before I can talk to customers or before I could find out whether they're interested in buying this. That is not true. You can start talking to customers on day one and here's how. Talk about the existing ways that they're solving this problem. Figure out what are the products they currently use to solve it, and figure out what the pain points, what the problems are. From there, the way that you validate that they're interested in buying something is hack together off-the-shelf existing technology that kind of approximates the problem. Obviously, it's not going to be as amazing as your beautifully designed, perfect thing that you're working on, but you'll get an approximation of it. Show that approximation. Show that hack to the person who just described that they have a problem and try to sell it. Dress up other people's technology as your own. Like put it together. Put your own 3D printed box on it. You know, duct tape it together. Put your name on it and try to sell it. Because what I've learned is that if people aren't even interested in buying or using the HackTogether solution, then the thing that you're going to work on for two years may not actually be that much of a solution to the problem that makes it exciting. Really, if you're working on a problem that's so burning, that's such an acute problem, the user should be willing to work with a crappy hack-together solution before you finish your real one. You can do so much with a landing page to just understand interest, whether your message, the idea resonates. They'll be excited. If they have such a burning problem and they see a landing page for this product that finally solves their wildest hopes and dreams, they'll get in touch with you. I think the other thing is Dropbox actually started that way. So Dropbox was launched as an After Effects movie that approximated what the experience was going to be like, the shared Dropbox. And then everyone went nuts. It's like, I want to know when that software is available. And almost no lines of code had actually been written. And so it was basically a product demo that launched that company. Right here almost no lines of code had actually been written. And so it was basically a product demo that launched that company. Right here. At that time it was a little bit easier, it's crowded now. Instagram is very crowded now and it's very expensive. Top of the funnel, ads, Facebook, Google ads, very expensive. Are there any hacks around today's hacking ways to get... So the question is, you know, it's harder to get a consumer product out there, like the digital space on Instagram, Facebook, everywhere, it's getting much more expensive. And it's true. I see a ton of like new products that are launching on Instagram, Facebook, everywhere, it's getting much more expensive, and it's true. I see a ton of new products that are launching on Instagram, and I keep thinking how much money did they pay to get one ad in front of me? It's crazy. So what can you do at an early stage without that much money? Kind of going back to the theme of this talk, you can talk to users. Talking to users is actually pretty cheap because people on an individual basis are probably willing to pick up the phone and talk to someone. Like I said before, oftentimes they've never talked to a tech CEO. They've never talked to someone who could actually build a solution to their problem. So if you position yourself as someone who may actually be able to help them, they may talk to you just for free because they see an opportunity. Just as a side note, oftentimes when I talk to a founder who's working on a product that may potentially help me, I know that they're potentially willing to build the exact thing that I want if I just tell them that. And so you may find people that are willing to open up the kimono and share that for free. That's kind of a way to get a couple users to talk to. If you want to get more in aggregate, the most scalable ways that we've seen work for our founders are really putting yourself in the demographic of interested users and figuring out where they live in the world, whether that means like in the physical world, like we have companies that hang door tags on houses because that's like an effective way of getting people's attention. And kind of the digital equivalent of that is infiltrating communities where people who share, who have this problem are sharing their thoughts. Like oftentimes there's a Facebook group about a particular medical condition or like a particular travel destination. And it's actually pretty effective to just kind of like position yourself as an expert in the space and kind of organically enter and be part of that community. We're going to end questions. So you guys got 15 minutes to talk to one another. Thank you so much for coming to the first lecture. We're going to stick around for a little bit and then we have to clear out of this room. But enjoy and we will see some of you on Saturday in New York and then back here again on Wednesday. Bye guys. Thanks. Applaus