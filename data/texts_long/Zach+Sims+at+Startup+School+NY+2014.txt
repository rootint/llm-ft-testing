 I have a distinct privilege right now to introduce another one of those New York Y Combinator companies. CEO, this is co-founder and CEO Zach Sims who started Codecademy. You guys hopefully all know about Codecademy. If programming is the fluency of this generation, they are the place, they are the global place to learn it. Since they launched about three years ago, they have now served I think over 24 million students all over the world in every single country. Is that true? As well as Antarctica. Presumably we're gonna hear more about that. One of the things that's really exciting about this is not only was he a dropout from Columbia, but yes was that for dropouts or for Columbia? I'm not sure, but we'll say both. But like so many startup stories, you know, from the outside, it seems really simple, really clear, right? Figure something out, make something people want, grow, grow, grow. And before you know it, you're on the Colbert Report, which Zach was. It was a great episode. But in fact, every startup is its own cluster. And I hope Zach shares with you the story of the few weeks running up to Demo Day because Code Academy was anything but a sure thing. So please give it up for Zach Sims. Awesome. Thank you, Alexis. I didn't realize I'd have to compete with the soccer game today. I should have interwoven the score in my presentation. But anyway, my name is Zach Sims, and as Alexis just mentioned, I started a company called Codecademy with my co-founder, Ryan, and we teach people the skills they need to find jobs in the 21st century online. But as Alexis mentioned, it wasn't always that way. So when I go to a talk like this and I sit in the 21st century online. But as Alexis mentioned, it wasn't always that way. So when I go to a talk like this and I sit in the audience, I always ask, why is that person on stage? What experiences have they been through that let them stand up and preach to people? And what can I learn from that? And so today I looked at the slate of speakers that's here today and saw a lot of pretty awesome names. You have world-class investors. You have people who are changing the world with nonprofits and people with super fast-growing companies. And then I think they needed someone to fill the clich√© spot. They needed the dropout. So my story is somewhat similar to what you'd see on the social network, the movie that hopefully a lot of you are familiar with, but with a lot less Trent Reznor music and a lot less cocaine. So what I hope you guys leave with at the end of today is kind of our story and hopefully a few key lessons you can learn that will tell you some things you can do to eventually one day prepare yourself to start your own company. And then a lot of things that we did that you probably shouldn't do if you do start your own company. And hopefully a couple of fun stories in between. Because as Alexis said, you hear all the time about people who kind of just hit it and it just works. And I think the story that's been told about Codecademy a lot is that we built the actual product a few weeks before demo day and launched and had a lot of success, but it wasn't really that easy. So I want to go back to 2003 when I really started becoming interested in the Internet. And that was the year that the iTunes Music Store got really big. They ran the first advertisements for the iTunes Music Store. And somewhat ironically, they were headlined by Dr. Dre. And so now that's all kind of come full circle a few years later. But I got my first iPod in 2003. And I brought it with me everywhere. For the first time, you could carry and I brought it with me everywhere. For the first time, you could carry a thousand songs in your pocket. And so I brought it to the gym, I brought it on runs, and it skipped throughout the runs. But what I didn't have was a way to protect it when I dropped it on the ground, which happened all the time. And as all of you know, with hard drives, dropping them on the ground isn't so great. So I looked online and I tried to find a case that I could use for my iPod. And instead of doing what the normal person does and buying the first one that I saw, I realized I should just make one myself. So at the age of 13 in 2003, I emailed a bunch of different iPod case manufacturers across the country and told them that I had the greatest idea ever to build a waterproof iPod case. I didn't tell them that I was 13 and had no idea what I was talking about. So after around six months of emailing with someone who worked at a big case manufacturer across the U.S., finally I had something in my hands that had gone from having an idea when I first got the iPod to having something that now protected it everywhere. And then a couple weeks later, the guy on the other end who worked at the case manufacturer asked to get on the phone with me so we could talk about how we were going to launch and market what we had built. And so, you know, so what I thought was really cool was that no one on the internet knew that I was 13 and in my parents' basement. It's really the great equalizer. The great equalizer that is until you get on the phone with someone and your voice cracks 10 seconds into the phone call. So that relationship was really fruitful until he realized that I was 13. But what was really empowering about that was that I realized that being young or being somewhere not in New York or in San Francisco didn't matter on the Internet. It didn't matter that I'd never built hardware before. It didn't matter that I didn't know what marketing was. But the Internet allowed me to learn all these things very quickly and to build something that came out of that. So I think that was one of the first lessons I learned early on is don't know until you try. And so I started trying pretty early. So after that first experience, I kept going back to the question of how do I learn more about the internet and what I can do with it. I'd already seen what an amazing impact it could have on me and people around me. And so I went to the library, and I picked up a book on PHP and MySQL for dummies. I went to a shelf, and I saw a list full of yellow and black books. Picked up a few of them that had acronyms I didn't quite understand. And I figured, you know, a book for the rest of us. I can really sympathize with that. And I went home and I read a bunch of 4Dummies books, but it never really clicked. I never really built anything with the knowledge that I'd picked up by reading these books, because they didn't actually have me working on real projects. So when I turned 18, I went to Columbia in New York, as Alexis mentioned. And instead of studying computer science, for some reason, I decided to study political science. And I usually try not to mention that, but I'll tell you guys that secret. So I went to college. And my first semester, I tried to find people that were like me, that were interested in technology, that were interested in startups. But there was no one. I that were like me, that were interested in technology, that were interested in startups, but there was no one. I asked everyone around me, you know, what are you guys interested in doing with your future and your careers? And half of them told me we're definitely not thinking about that, we're just interested in partying. And the other half looked at me similarly weirdly and said, you know, we're working in banking consulting, obviously, like everyone else in New York. and said, we're working in banking consulting, obviously, like everyone else in New York. So I was a little discouraged. But second semester of my freshman year, I saw a poster that there was going to be a talk from someone who I thought was kind of famous in the New York startup scene. His name was Sam Lesson, and he started a company called Drapio. It was a file sharing company. And he was coming, and I showed up two hours early for his talk. I was thinking there was going to be a packed house. I got there, and it was in a really small room, but it was in that really nice building. So I figured, very important person, a lot of people are going to be here. Sam showed up on time, and no one else showed up. So that was New York in 2008, was a world where no one was interested in startups and you got ridiculed and there was no one to talk to about working in technology. And so Sam was the only thing I had so I pestered him for the next six months until he finally let me work for him for a summer for free and I tutored the SATs at night back in Connecticut where I'm from and I sat on the couch and I learned everything I could from what Sam was doing. I went back to college and I said, what can I do next that will help me learn more, help me become better than the experience I had at Drapia? I definitely wasn't taking another class on political theory, which at that point was interesting, but not quite relevant to what I wanted to do after I graduated. And so I got to know a lot of other people in New York who were working in startups. And I went to TechCrunch Disrupt that year. And I saw two friends of mine demo something called GroupMe that, at the time, allowed you to text one phone number. They created a group chatting application. You could send one text to one number, go to like five or six people, and they could all text back to that number. And I thought it was super cool. The two founders who were friends of mine had been at a music festival the week beforehand and experienced this themselves when they were trying to text, and there was no data for their emails to get through. And they could text each other, and they got lost. And then a week later, they built something that solved their problem. That was crazy to me. And so GroupMe went on to be super popular at TechCrunch Disrupt, and I eventually joined them to work on GroupMe when it was just the two of them and me in an apartment with a couple other people. And I realized that solving their problem was the key to their early success. They had built something that they needed to use. They figured there's a lot of people that go to music festivals and there's a lot of people that need to communicate. So they built something for themselves. And so what I had at GroupMe was something that finally my friends believed in. I went from my friends looking at me as if I had the worst ideas ever to adding them all to a group chat, and for the first time they thought that something I was involved in was pretty cool. And then a lot of other people thought it was pretty cool too. And so we went from nothing in, I think it was July of 2010, to sending hundreds of thousands of messages a day really, really quickly. We hired a team. We came up with a day really, really quickly. We hired a team. We came up with a sign, the pound sign. In retrospect, a little embarrassing. And I'll pass that slide quickly. And I realized that the most important thing I could do is get a front row seat on the rocket ship and watch as GroupMe grew from two people to 15 people to 20 people. And then less than a year after it was started, it sold to Skype. So after that, I went back to college. And I had such a good experience, kind of figured what most people would do is double down and go back and work in startups but I I felt prey to the peer pressure and I interviewed at banks and consulting firms like everyone else and I realized sitting across the table from all these managing directors there was absolutely nothing I wanted to learn from these people just absolutely nothing. I sat there and I regurgitated a discounted cash flow function. I learned the night beforehand. And even doing it in an interview was just massively painful. I figured if that was going to be my life, 18 hours a day for two years, I should choose something else to do. But what I also saw was that the skills that I had learned over the past two and a half years while I was at Columbia weren't relevant to what mattered in the job market. And I saw that all of my friends struggled to find jobs too. And a friend of mine, Ryan, at the time was a senior, and all of his friends were trying to find jobs. And even though they were seniors graduating from Columbia, a lot of them still struggled because the skills that they were learning weren't immediately practical. So I talked to Ryan, who at the time probably thought I was crazy, and said, we should fix this. This gap between education and employment, it shouldn't be too hard to solve. I sent him an email. The first email that I think really started the company was headlined, One Other Thing. That one other thing turned out to be our company. But we started talking about ways to connect people with skills that would eventually help them find jobs. And we realized we should just get started. We had a lot of free time and nights and weekends. And so we started building a bunch of different ideas. The first one, we've building a bunch of different ideas. The first one, we've always been really great at naming. So the first one is called Come Recruit Us. I believe, I think we had the .us domain name. So we were very inventive. And at the time, we figured the best way to connect students with jobs was to have them log in with their Facebook account and just say where they wanted to work. Seemed pretty simple. So we built the first version of this in 2011. And we talked to a lot of friends and mentors, people who worked at startups before. And all the people that worked at startups looked at us and just said, this is the dumbest thing I've ever heard. We're like, it's OK. You're not the market for this. So we spoke to our friends at Columbia. And we're like, we're going to help you get jobs. And they all looked at us, and they said, this is the dumbest thing I've ever heard. So it's very, very encouraging. So Ryan and I took that feedback. And we said, yeah, we'll roll with this. And we'll apply to Y Combinator application, and we asked for some feedback and got some of the best advice I think I've gotten since we started the company, which is we had too many words and not enough information. And that was probably because we didn't really know what we were building ourself. And so we just kind of put a lot of words around a thing. And then we applied to YC and figured we'd never, ever get in. It turned out we got an email a couple weeks later, and we were invited to interview. So we flew out to California, and we met with all the partners. And before doing that, though, we landed, went to a coffee shop. We figured I'm going to put the finishing touches on the thing that we had built that helped people find jobs through Facebook. And we realized on the plane, we somehow had an epiphany. This is just a horrible idea. Everyone who'd been talking to us was absolutely right. It was just the worst idea ever. So at the time, we figured, well, we can help programmers find jobs. That's a better niche. Because I was learning to program myself. My co-founder was a programmer. We were doing programming challenges. So we spent the next 48 hours in a cafe in San Francisco building a way for people to take programming challenges and then find jobs from there. And we're so focused on building the first prototype of that product that we didn't realize we had locked the keys to our Airbnb inside our Airbnb. So we went back that night and didn't have a place to stay. So next morning, we showed up at Y Combinator looking a little raggedy and just a total mess. And we figured we walked in, we spoke to the partners for 10 minutes, and we got question after question. But the weird thing was they were answering each other's questions. So we didn't know whether that meant we had a really good idea or a not so good idea. And we didn't have a chance to demo what we had spent 48 hours building. And so on the way out, one of the partners tapped us on the shoulders, kind of looked at us and said, can you guys even actually program? Kind of sheepishly nodded. They didn't ask how well. The answer was yes. So we left, and we said, well, we blew it. We flew out here. We had this big shot. We got asked a lot of questions. We didn't even get to answer any of them. And they don't even think we know what we're doing, which wasn't far from the truth at the time. And so we went from being on a super high before our interview to super low walking around Palo Alto. And then a few hours later, Paul Graham called us and said, we'd like to have you for Y Combinator this year. I think my answer to him on the phone was like, is this the wrong number? Are you serious? And then I did something smart, and I said, can I get back to you? Which I have no idea what we needed to think about, but apparently we did. So a couple weeks later, we got our first check from Y Combinator. This is the first feeling of like, wow, we actually made it. You know, everyone gets into Y Combinator, instantly successful. It's like pixie dust. So that's what we figured. And we moved out to Silicon Valley, and we said, you know, awesome. Everything's set from here on out. I'm going to live and work in a sweet office. You know, you see all those pictures of brick in San Francisco. And then we get out there, and we crashed on the floor of a friend's apartment who worked at Palantir. And so this was our office and where we slept for the first couple of weeks until we realized it's not productive when your desk is the box for a coffee machine. So we moved into our own office. Felt really warm and cozy. This is our apartment, too. You'll notice we're really good at naming. So the company's name is Ryzak, because my co-founder's name is Ryan and my name is Zach. We figured, like, very, very inventive. You'll see this is a recurring theme. We'll get back to this. So this was our first office. And finally, we were excited. Like, we're doing something right. We have an office. We have an apartment. Let's prove what we're doing. It shouldn't be so hard. So we spoke to a bunch of startups, and we said, we have a way for you to hire more programmers. And they said, that is awesome. The hardest thing we do is hire, and we can't find a way to find people. We can't find a way to evaluate them. And so we knew we were on the right track there. Then we talked to the programmers, and we said, we have this really awesome thing. We will help you get jobs. And to do it, you just have to do these fun challenges. And they had absolutely no interest in what we were building. Went to a Y Combinator dinner, and they were all like, we just started a company in YC, and I still get 50 LinkedIn email requests every day. Why am I going to mess around on your garbage platform? So we went back to the drawing board. And you'll notice this is not the first time we went back to the drawing board. But this time, it wasn't just metaphorical. And we didn't go back to the original concept that we had of helping people learn skills to find jobs. Instead, we basically became random startup idea generators. So here's a few of our ideas. You'll notice some of them are really good, like building a CRM for club promoters. Literally, if you spun like a jackpot wheel, you would not get anything as crazy as what we were coming up with. So we kind of sat there and we're like, well, unclear what we're doing, but we're in Y Combinator and we have $170,000, so that's cool. And there's two of us, and we figured we could move in with friends, we could eat ramen, and we would have five years of burn. Just work on CRMs for club promoters all day. So we were determined not to fail. And I remember going to office hours with Sam Altman, and Sam had called us, you know, the worst ratio of intelligence to ideas. So smart, but such stupid ideas. So every night we'd go home, and I'd sit there, and Ryan and I would write code for one of these ideas, and we'd get super, super frustrated, both with what we were building, but for me, without a'd get super, super frustrated, both with what we were building, but for me, without a formal programming background. I had taken CS 101 when I was at Columbia. I had read a couple of those For Dummies books. And Ryan had actually started an organization on campus at Columbia to teach people how to program. And so in the process, I was learning the skills I needed to do my job, basically. And so we started, kind of came back to where we started, which is can we teach people the most important skill they need to find a job in the 21st century, which was programming. And we had sort of patient zero, which is me. If I could learn how to program well, then probably a couple other people could use it too. And this was around three to four weeks before demo day at this point. And so we started building the first version of Codecademy. And we spoke to a couple of the partners at YC and some investors. And again, you'll notice this is a common refrain. They told us it was really stupid. And a lot of them told us that there are only 100,000 employed programmers in the US. There's just no market for something that teaches people to program. People are not interested in programming and never will be. That was something we heard a couple times. But this time, something was different. Ryan and I were super interested in what we were doing, mostly because we were building for me, and based on Ryan's experience. And so we'd go home every night, worked all the time. We did some research for some of the fundamental pieces of Codecademy. Ryan still tries to convince me that playing Farmville counted as research for how we eventually built the gamification into Codecademy. I think he was addicted. And then we showed the first version of Codecademy to a lot of investors and everyone at Y Combinator. And the line that people generally use is, you should be embarrassed when you launch for the first time. But what people told us was, you should be embarrassed when you launch for the first time, but not this embarrassed. It's like, you know, basically get out was what we were told. So we went back, and I played with it a couple times. I was like, well, this is made for me, and it works for me, and I know JavaScript now, so we're doing something right. And I really liked the experience. And this was another thing we learned. Again, as I learned in the GroupMe instance, it's much easier when you're building for yourself. All these people we were showing Codecademy to didn't get it because they knew how to program. But I didn't. So this was one of the first early versions of Codecademy. You learn in line, learning by doing. And there's no video and no boring books you have to read. It's all instantaneous feedback. And so we launched Codecademy, and we left. We left the apartment. Ryan and I bet that there wouldn't be more than 50 people on the site at the same time that day. And we installed Chartbeat, and we left. We went to get bagels. We got to the bagel store, and my phone started going off because there were 1,000 people on the site at the same time with something that we had built basically for me and my mom to use. And we noticed stuff like this on Reddit, where people just had no idea how to program before, how to learn this skill. And all of a sudden, we made it easy for them. And that was super, super empowering. Turns out that wasn't an isolated case. This is Ryan with our Chartbeat dashboard that day. You'll notice we actually broke the Chartbeat speedometer because so many people were on the site at the same time. And so immediately, we basically went from being the least popular company in Y Combinator that summer, where three weeks beforehand, it was actually suggested to us that we just not demo a demo day, because you don't have an idea. You haven't built anything. It's not possible to make anything in three weeks. Not possible. So we built something anyway, and we were the fastest growing Y Combinator company at that time. And this was sort of the bullet points. We taught people to program, and finally we had the data that millions of people do want to learn programming. And we were the answer. And this was a slide the two of us used to talk about ourselves, look a little young. And we went from having no one pay attention to us and no one returning our cold emails to investors texting me and saying they actually had a dream about Codecademy. Turns out I thought this whole thing was a dream. I was like, we're still eating ramen and nothing. This is not possible. To a few weeks later, we closed our series A with the gentleman who just was on stage with Fred and Union Square Ventures. We moved back to New York, and we actually went to an ATM to verify. It was like, this cannot be real. Like, how is this money in our bank account? So, armed with $2.5 million and on cloud nine, after raising our series A, we set about building a company. But we realized it pays to be a cockroach. And by that, I mean it pays just to not stop and just to not die. We thought everything along the way had tried to kill us, right? All of our friends were like, startups are dumb, you're dumb, your ideas are dumb. And we kind of just looked at all of them and said, whatever, and built Codecademy. So it pays not to quit. So after moving back to New York, we thought, we're on Cloud9. We have all this money, all these people on our website. Turns out that last part was not true. Because all those people were on our website because we were on TechCrunch. And so hopefully some of you are familiar with the TechCrunch of initiation, where you get super popular, and then you hit the trough of sorrow, where everything's miserable. And we had that. And we went back and we tried to find more people to join the team. We interviewed 100 people before hiring our first person. That is an exercise in frustration. So we realized startups really are a roller coaster. We went from getting into Y Combinator and thinking success was a sure thing to two weeks later realizing we didn't have an idea to eventually going back to the original idea that we had and finding the right implementation of it. And the thing is that startups are much easier to deal with when you actually care about what you're doing. So now every morning we wake up, we read the newspaper, you see that a year after they graduate, more than 50% of US college students are unemployed or underemployed, that by 2020, there is going to be more than a million open programming jobs if education keeps going at the same speed. And this is really motivating for us because this is a massive problem. Because the world, companies won't grow as fast as they can. People won't have jobs if we don't exist. And to this day, more than 24 million people have used Codecademy, something that we started building in our dorm room at Columbia and then built in California and now proudly build in New York. More than 24 million people have used something that we built. What matters most is the stories of the people that use it. People like Ryan, who a year and a half ago had absolutely no idea how to program, learned on Codecademy, built an app called SoarKit that was featured as one of Time's best websites of 2013. And then two weeks ago, Ryan sold his company. So he went from knowing absolutely nothing to a year and a half later building a company and a startup and a product and selling it. There's people like Amy, who at 13 started learning to program on Codecademy. And by the time she was 14, the EU had called her the European Digital Girl of the Year because she spoke all over Europe, telling everyone how important programming was for the future. So there's hopefully a couple things you guys will take away from today's talk. First, you shouldn't make excuses to get started. It's really simple. You have the internet, which is the biggest distribution engine ever, and the tools, which is all you need is a web browser and a text editor. You should optimize everything you do for learning. You should get a front row seat on a rocket ship so you know what it's like to build a company. And we're hiring if you want us to be that rocket ship. You should realize that startups are a roller coaster, and you should never, ever give up. And lastly, you should be passionate about what you're working on, because that will make all the difference. Maybe the most important thing I've learned after doing this for a few years, and speaking a few times, and speaking with a couple other people that speak, is that everyone up here has no idea what they're doing. And so even as you get further along and you build a startup, you realize that startups are hard, and there are new challenges at every step along the way. So despite the fact that none of us quite know what we're doing yet, you don't know until you try. So thank you.