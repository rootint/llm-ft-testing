 All right, hello. My name is Daniel. I'm a partner at Y Combinator. And I'm here today with Chi Lu, who's the COO of Baidu, and is in particular focused on a lot of their AI strategy. So Chi, thank you so much for coming today. You bet. Thanks for having me. Cool. So I guess first question that is on my mind is, and I think many others, is help us understand why you left. Previous to Baidu you were very senior at Microsoft and a lot of us are wondering why you decided to leave to Baidu. So two things. One is I left Microsoft purely for personal reasons because I had an injury. I broke my left hip. So I needed a second surgery and need to take some time off because my job at Microsoft was very critical to the company. I thought it's for the best interest of the company for me to move on. A great thing was that I had a good successor who was extremely capable. I'm super happy that he is taking over and leading the company's productivity business moving forward. And in particular, also, I was able to have a very good relationship with Microsoft. I continue to serve as the personal advisor to the CEO Satya Nadar and also to Bill Gates. So when I go back to Seattle, I often go see them. And then how did you decide to go to Baidu as opposed to any other place? So that's for a simple reason, which is AI plus China, because we all know, I guess most people in our field will agree, AI is the next big wave. I think AI plus China is particularly meaningful because, in my views, China has a structural advantage in terms of AI technological development and commercializations. In that context, Baidu offers a very unique opportunity for me. First of all, Baidu, in many ways, is the Google of China. Its heritage was so changing. And as a result, from an engineering capability perspective and a cultural perspective, is uniquely positioned to seize the AI opportunity. And also, I happen to be a friend, knows Robin Lee, the founder and CEO for almost 20 years. So there's a lot of long-term relationship and trust. So that was just a good opportunity for me to take on. So in what ways is China's approach to AI different from America's? I think, first of all, I think it's environmentally different. And approach-wise, I'll come back to the approach aspect from my vantage point. From environmental perspective, I think China has unique structural advantage for AI technological development and commercialization of AI technologies for a simple reason. If I may just explain my thinking on why this is so. Because in this wave of technology development, there's one aspect that's fundamentally different from previous generation of big technology wave, which is data plays an essential role. Because I often use this as a simple example. You can have 10,000 engineers, great engineers, or you can have a million great engineers. You will not be able to build a system that understands human conversations. You will not be able to build a system that will recognize objects or scenes of images because you need to have data. A simple analogy is very much like human. When you and I grew up, it's not like our parents or God is writing coding to our brains. Our built-in neural engines has the ability to learn through our sensory systems, essentially our perceptive systems, whether it's visual systems or whether it's auditory systems, that we are able to observe the world. Our observation, those sensors, these are data because these data carries knowledge and we are able to learn from our interaction with the world. So as we grow up, we acquire knowledge. These data carries knowledge and we are able to learn from our interaction with the world. As we grow up, we acquire knowledge. Same thing happens for AI technology. It's not about writing code this time. It's about writing code that implements AI algorithms with both software and hardware. They are able to learn and learn knowledge from the data. So if you take that perspective, data, data in my view is for the AI era, what becomes a primary means of production, which is by definition means of production is a form of capital. Because you look at historically in our human history, let's say in the agricultural era, land is the primary means of production so that you can see everything is organized around the land. All the walls are competing for land. In the industrial era, the means of production are primarily labor and equipment, different type of equipment, and certainly financial capital, human talent. But in the AI era, my view is data will become as a primary means of production. So harnessing data becomes key. And then comes back to China, because China has a different social, economical policy environment that makes, for certain segments, not on everything. For certain segments, it's much easier to acquire and harness data. And with that, it creates an environment for developing AI technologies and then commercialize those technologies towards market-oriented applications or social applications. So in that context, China has a structural advantage. And then in terms of approach, there will be cultural differences, even in the entrepreneurial world, the startups in China environment, they tend to work in their ways. That, I would say, Silicon Valley and China, there's commonalities, there's some different approaches, but that's not the bigger factor. In my view, it's the environment that's the more determinant factors making China to be relatively compared to other marketplaces or other regions a better place for AI development because of data. Interesting. And I guess one question I'm wondering in particular is, in the US there's this belief that one of the ways China's somehow doing better when it comes to technology is that the government is much more integrated with companies and their initiatives. Is that something that you see at Baidu as you guys focus on your different AI initiatives? Are you able to work very closely with the government? In general, the Chinese government at this stage has a lot more willingness to invest in infrastructures, in talent. And they, in particular, see AI as an opportunity for China to, in many ways, to ride that big wave, to elevate its innovation capacity. So there was a, about somewhere between one month, two months ago, there was a about somewhere between one month two months ago. There was a white paper that's published by the Chinese government. It actually spells out in pretty much certain level details about by 2030 how the Chinese government planned to systematically invest in infrastructures, talent, and technologies to enable China to lead in AI technologies in many different dimensions. So in general, the government indeed has a lot more willingness and commitment to invest. And with regard to private company, particularly a company like Baidu, which is more viewed as culture, practice-wise, closer to American companies. It's listed in NASDAQ. Internal working culture is very entrepreneurial, closer to Silicon Valley style. So we do, in many ways, operate independently. We view essentially market opportunities as the primary objectives to pursue those opportunities. And when there are win-win alignment with the government initiative, we welcome that. For example, Baidu is the host of a national deep learning labs. And Baidu is also working with various different government entities when they have expressed willingness to support in certain areas of AI technology, for example, let's say for self-driving cars. So we will work with those government entities to discuss opportunities that are mutually beneficial. But as a company, our primary means is market success. We don't have sort of any other agendas because we are an independent company. We want to build products that serve our users. When there is synergistic opportunity with government support, we will collaborate with government when they are truly mutual benefit, mutual win-wins. Do you think that China will beat the United States to having mass adoption of self-driving cars? Yeah. So my belief is the opportunity to commercialize and deploy autonomous driving technologies in various forms, China will have opportunities to get ahead of the United States over the next three to five years. Primary for, I would say, a few areas. One is different regions, whether it's municipality or provincial government or central government, they see this as an opportunity for the China's auto industry to get out of where right now the China auto industry does no real strong technology. Heavy fragmentation with over 250 OEMs. The Chinese government very much would like to take the autonomous driving dimension of innovations to enable the China auto industry to leapfrog, to be the world's best and leading in the world. So the government is a factor. For example, there's five municipal governments right now, members or partners of Baidu's autonomous driving ecosystem, open platform called Apollo. So they work with us on a variety of initiatives. For example, new kind of driving schools that will certify autonomous vehicles for different level of maneuverability. Just like a driving school today, they will certify human drivers. You pass through certain test. So we are working on that. And we're working with a new city is being kind of built up, by the Chinese government plan, will be bigger than Shenzhen, will be bigger than Dubai in five to ten years. It's called a Xiong'an. It's a massive new city that's being built up from pretty much zero. So working with them on designing new infrastructures, new segment of the cities, that makes much easier for autonomous vehicles to be deployed. Just as an example, let's say today's cities, you have street lights. The street lights in many ways is a sensor device. They enable the sensors of a vehicle to be able to better see the road. It just happened to be the one area that does the sensing are human, and human use the eyeballs. When it's dark, you won't be able to see the road, see the separation of the roads, and you have streetlights. But imagine in the future when the sensor is not done by the human eyeballs, but different sensor, whether it's a radar or cameras, whatever the sensor technology you use, the future city infrastructures, those streetlights, will be intended for non-human sensor capabilities to see the road, to be able to navigate the road. So we are actively designing those new type of infrastructures and having ongoing discussion with these municipal government to lay out plans to build those infrastructures with the intent to have commercial deployment of autonomous driving in various forms. So if you combine all those efforts together, I very much believe in the next three to five years, we'll see autonomous driving in China gets deployed in more variety in larger scales than other markets. Fascinating. Going back a little bit to kind of more broadly, China and the United States, you were managing very large software engineering teams here in the United States, and now you're doing the equivalent in China. What are some cultural differences you've noticed in terms of how people work, how you have to manage in between those two countries? Yeah. First of all, Baidu's engineering culture, product culture, is very similar to Microsoft, very similar to what I know of Google, even though I haven't worked at Google, but I have enough interaction with friends who worked at Google. Essentially very heavy in technology, very heavy in algorithms, very heavy in large-scale computing, very weak in product design, very weak in understanding user needs, human needs. As a result, the technology is good, the product generally isn't great. I'm not criticizing my former colleagues, but Microsoft as a company, in many ways, lagged behind companies such as Apple and Facebook in building truly mobile, particularly mobile consumer products that struck the emotional connections with users. And whether it's application or services or devices, the fit and the finish, the experience design is very much more than appeal to young demographic, young generations. Microsoft as a company struggled on that. And I see similar things from what I can see. Google as a company, their products that I use. And Baidu is exactly the same way. That's one aspect. I always try to change the engineering culture at Microsoft. Actually, that was the reason why I broke my leg, but it's a different story. Because you need to unlearn, learning new way of doing things. Can you just tell us, yeah, about the bicycle that you rode, which is I think how you got that injury? Yeah, because it was a, there's something called a backward brain bike. If you search on YouTube, how to ride a bicycle, there's plenty of videos. Essentially, the bike goes the other way. If you turn the handle this way, the wheel actually goes the other way. The reason, there's some profoundly important reasons because, first of all, we humans learn, there's three primary ways we learn. This is called experiential learning, and the bicycle riding is often said as the best example because you cannot learn how to ride a bicycle by watching other people riding a bicycle, by reading about it, by people telling about it. You have to ride a bicycle yourself and often bumping, bruising, hurting. But guess what? There's one thing. Once you learned, you never forget. It's in the muscle memory. You don't think about it. And that's the problem for large organizations, for cultures. Because the reason those big companies, they couldn't survive when you've come, that's based on Professor Rebecca Hederson's study at the Harvard Business School, is that those mature organizations, their muscle memory, the way they talk to customer, that they will do research, that they will design experiences was built like 30 years ago. And they don't, you know, they try to think, but their muscle memory don't think, right? So they would just do things that way. So if you're asking me why Microsoft couldn't get mobile at all, isn't that we're not working hard, we're working super hard, isn't that people are not smart. We tried everything. We buy Nokia. We build a Katana. You know, you name it. We tried everything. But the product honestly sucks. It's just because the muscle memory. So I was searching for an answer. Rebecca Henderson was the one who convinced me this is the real problem. So Microsoft colleague of mine, his name is Bill Buxton. he's one of the kind of people, he's like, hey, Chi, you should try this bicycle thing. It was really illustrating. So we built the bike, Bill Buxton, another one, the three of us, we tried to practice, because this bike, for a normal adult who knows how to bike, takes you about eight months training every day. And once you learn how to ride that bike, you won't be able to ride the normal bike anymore, because you need to rewire your muscle, your brains. And I think for larger innovation, culture change is that difficult, because it's your muscle memory. The way you do things, it just becomes a bit you don't even think about. Even though the CEO say, we're going to gonna die You guys have to figure out mobile, you know, they tried I tried the mobile product just like a PC product smaller form Right because that's how they how they do it. So We're coming back on culture. I see Baidu has very similar traits of Microsoft that I work with. So what I'm working on today was Baidu is really change that Microsoft that I work with. So what I'm working on today was by doing is really change that engineering cultures to be a lot more product-centric, to be a lot more understanding user needs, particularly for mobile product, for AI product. And then I will briefly answer the engineering culture between companies that are in China versus companies that are in the United States. There are various different aspects of it. that are in China versus companies in the United States. There are various different aspects of it. The biggest thing, and I need to perhaps think more about summarizing in my head what I observed so far, some of the key differences in terms of product engineering culture. The one thing I would say is, start off for me, I learned a lot in my eight months plus living, working in China, is the product people in China are a lot more philosophical. They are a lot more reflective. They think a lot deeper than what you would typically observe from a product people when they describe their product. And also the Chinese, the R&D product leaders emphasize a lot more self-reflection. They use the word cognition, but it means a person's ability to understand, to make judgment, make decisions. Essentially, they've emphasized a lot more self-improvement for product people in particular, how you elevate your cognitive capacity. So if you ask me, the one thing that stood out for me is I used to believe the product people in the United States companies is better than... Now I kind of held the other way around. I see better product people more often in Baidu and other Chinese companies in Rattlesnake than perhaps, I would say, on average, the percentage. Huh. Well, so on that point, there's another belief, I think, in the West that California and Silicon Valley are very creative environments, and they really allow ideas to come up and bubble up from any person in an organization, versus China, where the image, I guess, that we think to ourselves is a very structured society that is very good at implementing something, but maybe not as good at creative free thought. Would you agree with this sentiment at all? And if so, how do you think that plays out for, say, doing core research that involves a lot of creativity? Yeah. So great question. That's a good one. So I will say there are different degree of truth towards the top-down nature for Chinese company. Baidu, even though among the Chinese tech company, Baidu is the closest in terms of culture to Silicon Valley. A lot of people, their pedigrees are Google, worked at Google, worked at Microsoft. Meaning English is also kind of a common working language. You won't have any problem if you just speak English or write an email in English. But even that, the top-down phenomenon happens. And my hypothesis was, this is perhaps due to 2,000 plus years of Confucianism. The Confucius is essentially harmony through hierarchy. So that's the central idea of Confucius. So having said that, the company that I work with, including Baidu, all realize driver innovations is a lot more about empowering teams, empowering capable leaders to experiment, to try new ideas at a fast velocity. Baidu does a lot of those. And in the startups that I interact with, they emphasize that aspect a lot. There's no difference in terms of the belief and the practices than Silicon Valley startups that I see. And the large company, one company I'll probably point to, I believe overall does a good job is Tencent. Tencent, they have this challenging culture. Any ideas, they encourage the challenge, the more authority of senior peoples. And also for any major initiatives or any areas of new innovation, they tend to have two teams, three teams working on the same thing. There's a lot more internal competitive dynamics that are going on. And one last thing, in Baidu, we have this quarterly meeting. We have all our company's directors. We have about 200 directors. Once a quarter, we will invite speakers. And the past few speakers, they all emphasize the aspects of building a learning organization so that a truly thriving organizations, each cell, each teams, they are able to be nimble, adapt, quickly learn. So even though there are this couple thousand years of Confucianism, I think it's still somewhat there, reflects to different degree in different companies. But by and large, driving innovation, empowering teams, empowering leaders are the common understanding. And everyone is striving to do more and do better in that regard. So there's no fundamental difference than Silicon Valley, I would say. Interesting. And do you think that Baidu and Tencent then are kind of the exception to the rule? Like, do you guys feel somewhat alien compared to other Chinese companies, which may be more structured? Yeah. So I would say among the internet or technology, IT technology related to the companies, even though I haven't talked to a whole lot of them yet, based on what I have seen so far, are largely in the mode that I just described. But when you go out of that range, you go to much more traditional companies, let's say steel industries or traditional retails, then you will see more of the Confucian hierarchical styles in management. That, again, I haven't done studies. It's just my perception. I would say this is how I perceived. So today it feels like, in particular when it comes to AI research, most of the great research is still being done here in the United States. Do you think that will change over time when we start to see 20%, 30% of the papers suddenly be published from China? Or will America kind of always be the hub of AI innovation? So this is one topic I had a somewhat ongoing discussion with many of my colleagues in China. Our current view is the very top end of research that's fundamentally paving new ground, I would say the example in AI would be, let's say, deep-minded, open AI. I think that won't happen in the next few years. That won't happen in China. Unlikely, I wouldn't say won't, say unlikely to happen. The odds of that type of research happening in China perhaps will take quite a few years. Right now, we see the research community, particularly the upper echelon, the gap is closing. The leading Chinese universities, the way they, in many ways, the way the gap has been closed is a lot of those researchers, they are pedigree. They study in top tier university in the United States, whether it's Stanford, Princeton, and they go back. So the gap is closing, but the overall environment, the culture context isn't quite there yet, meaning that it's completely driven by your imagination. The socioeconomic surrounding is still not quite the same as the United States, whereby you have truly world-class people driven by pure the desire to seek knowledge, the desire to unleash imagination. Often these researchers are done doing the context of personal fame, economic payback. Once you have those, you constrain yourself. You don't see very far. You don't go pursue the bigger dreams. But our collective belief, at least myself, my bunch of colleagues, friends, we all believe given enough time, let's say in the next five to 10 years, you will see top-excelent research work happen in Chinese institutions. And it's certainly my hope that in the next, somewhere between five years to 10 years, Windows, we will have equivalent of research organizations, let's say, open AI, deep mind type, that would be truly do groundbreaking research towards AGI or different type of initiatives that would be at the very forefront years of extending the scope of humanist. It's take time. We believe it takes time. Not in the short future yet, but it will happen. How are you going to nurture that? Are you going to try to create a Baidu research lab that somehow has a different culture around it than what traditional Chinese academia has? So there are several dimensions. One is corporate research labs. Baidu is doing quite a bit, and our peers, whether it's Alibaba or Tencent, they are also investing quite heavily in corporate research labs. At the same time, the national labs, the top-tier universities, they are doing more and more. And there is also in the private sectors, there is always ongoing discussion. A new type of research entities can be envisioned and they can be created. So there's an ongoing set of ideas being explored. I think likely it will be a combination of corporate research lab, university, and somewhat new generation, let's say, open air type research organizations will be established over time that will be capable of carrying top tier research work that's based in China. Interesting. Shifting gears to a completely different topic, another thing that is a hotly debated topic out here in Silicon Valley is cryptocurrency. No one really knows how to understand China's approach to cryptocurrency. So what's your take on it? Yeah, so I will speak from Baidu's perspective, not necessarily my personal view, because I haven't spent enough time on this particular subject to kind of develop views that I thought would be educated views. I would say it's more from Baidu's company perspective. One is we view blockchain, the underlying technology, as a fundamental, foundational capability the company needs to have. Because Baidu is in the financial services business. We have a unit, we offer financial services, and we try to turn that into platforms to enable traditional financial institutions to be able to modernize their businesses. And we have a team internally build up a set of core infrastructures that enable us to build a future generation of financial services using that. And at the same time, we're also using blockchain-based technologies to build a new generation of data platforms. Because when I said earlier, data will be a primary means of production. And the ownership, provenance, value attribution of data will become increasingly important. So we want to make sure that we, Baidu as a company, build the right infrastructure to anticipate for the future of the world. We as a company at this stage do not have active participation in the cryptocurrency aspects of the equation. I want to add one more thing about the research you mentioned, which is in some ways important. I forgot to mention. Essentially, we now have a view, but this is more of a Baidu's view. I forgot to mention. Essentially, we now have a view, this is more of a Baidu's view. We thought that China as a nation has been a talent exporter. We essentially send our best people to the United States, some of them come back, most of them don't. We believe China as a economy, as a market, has the opportunity to become a net, not necessarily net, but at least top tier talent importers. So in some ways, the Baidu Research Lab in Silicon Valley is intent to be the base station, if you will, to attract truly world class researchers to work in an environment whereby they can have access to vast amount of computing resources, data assets they may not otherwise necessarily have access to had they worked in a research organization in the United States. And also in terms of collaborations, we are actually working with top-tier universities, whether it's MIT, Stanford, CMU. And the goal I set for my team is, one is we want to collaborate and fund some of the very best faculty members, graduate students. And when PhD students, in the future, form those top-tier university graduates, Baidu needs to be the top five names when they think about which company they want to work for. So it's not necessarily Chinese companies' research labs are done by Chinese. Those research labs increasingly will be done by global talent, and they're working on problems that's targeted towards the China market and then has the opportunity to globalize it. So can I maybe spend one minute to give you that? Because I think it's important lens on how we think about top tier researchers. The context is the technology market up to this point, by and large, is something we at Microsoft always say it's designed for America to slightly sell global industry because United States is the only country has all those ingredients, talent, capital, risk capital, technology, market. It's the only place. This conditions, this combination doesn't exist in Europe, doesn't exist in any other regions, but China now has all these. Not quite at the top tier, not quite as good as the United States, but they have all those ingredients. It is my belief the technology industry would be a, for a while, would be a two pillar, essentially driven by the United States and a portion of the company comes from China. So if you view from that perspective, the product that increasingly initially targeting for China market, we have globalization opportunities increasingly because this is how we're going to attract truly world-class people to work at a company like Baidu. Just as one example, let's say for smart homes, we believe the product that's landing in China market well for smart home product, whether it's speakers or new TVs, use voice, dialogue-based interfaces, will have a better shot of globalizing than those products will be designed in the United States for one important reason. Homes in the United States only works in North America, maybe a little bit of Europe. Outside those, you don't have homes like this. You have very spacious, different rooms, the acoustic environment, far field, speech recognition, wake up order has to be five meters or long. And you optimize for this, a home in China is a lot closer to a home in Japan, a home in India, a home in Brazil. So we actually do have that view. So in Baidu, we're building our version of Alexa, our version of Echo type of systems, with the long-term aspiration of globalizing those products. And because we believe we are targeting a home environment, acoustic environment, usage environment, that's closer to our initial target market than the United States, the initial target market. So I think these cases, we will find more and more of those cases as we move forward. And that's one important factor. Those leading Chinese companies, increasing in my views, will have the opportunity or ability to attract world-class researchers to be part of what they try to do. Interesting. I want to shift gears kind of one last time to a different collection of topics, which is around management. A lot of people listening to this podcast may be CEOs or managers, and they're trying to figure out how to manage their first engineering team. So what are some learnings that I guess you've collected along your way, managing very large teams at Yahoo, Microsoft, and now Baidu that you would give to someone who's just starting out in engineering management? First of all, I would say managing an engineering team, particularly if for the first time you're managing an engineering team, you need to focus on making sure that the engineering foundations, particularly build processes, build tools, well designed, well engineered, well taken care of. My learning of managing engineering teams is that if you take slacks in those regards, ultimately what you pay, it's like the boat angles, becomes bigger and bigger. Anytime you, because you will always have pressure to ship product, build the business, get our customers, there's always the temptations to cut corners don't, because you will be far better served up front making sure that your engineering foundations are sound. That's one important aspect for first-time managers managing the entity. The second is engineers, I would say, is means to an end. The leader himself or herself and the teams pay attention to product, pay attention to how the product gets used, understand that today's usage scenario, usage patterns, anticipate the future usages, in my view, is extremely important because you won't be able to truly build great engineering systems or engineering capabilities without grounding those in the product context. In particular, immerse yourself in truly understanding what the users are using your product today and how that usage will grow in the future so you can anticipate. That's another aspect. The third related to that is understand the business because a lot of times the engineering work will be driven by monetizations, driven by distributions. And these are just as important as you grow the company's business. And understanding the business models, how that impacts your product, how that impacts your engineering capabilities early on and embrace those challenges upfront. It may slow you down in certain aspects, but it pays off for you to take time to understand these and build those capabilities in and anticipate the future needs. I would say the last thing is just cultivate a learning iterative experimentation culture and mindset because it's always been a journey. You may think at the first point, you figure out, I know how to do this. This product should do it this way. But the market is always fluid. The competition is always dynamic. Setting yourself, your team up for rapid iterations, for quick iterations through different types of ideas and to be able to seize new opportunities is also a very important part for a first-time engineering manager to set the team up for. And I guess a related question is, what does Chi Lu look for in people when you interview them? They plan on different jobs. So right now, for my current job, the type of people I'm looking forward to are people who really understand the future mainstream usage patterns, particularly in-depth understandings for human needs. And also be able to see through the noise and understand the fundamental undercurrent that's driving those human needs. Because I think more and more engineering tools become more mature, product development methodology become more mature, and development methodology become more mature. Those all become table stakes. What's at the premium will be those individuals who really understand humans and can anticipate human needs and can envision experience in that context. That's what I think will be at the premium for most companies that I can see. And if I look for different type of jobs, even though I may not necessarily be hiring a product manager, but I still look for that aspect. My view on this is product sensitivity is at the center of every line of work, whether you're a salesperson, a marketing person, an engineer, even an HR person. If you understand the product, it helps you to do your job better. So kind of understanding products and predicting future usage patterns. Anticipating, seeing the future. To me, this is increasing a foundational strength for any type of leaders. I spoke to some of your earlier colleagues at Microsoft, and almost everyone said that you were an incredibly productive person. And so I'm curious to ask you if you were always that way, and if not, what are some tips or tricks you've learned along the way that have kind of made you what you are today? I wouldn't say I'm always productive. I try to be productive. And I think what helped me was a simple mindset, more of a personal belief, which is a very simple view. I view myself as a piece of software. Today's version must be better than yesterday's version. Because there's a cliche, life is too short, why live the same day twice? And tomorrow's version has to be better than today's. So even though I make mistakes, the mistakes are an important opportunity to learn. So you can imagine the software will have more if statement so that when similar situations happen, you will avoid those. So it's that simple mindset. Keep the curiosity. Keep learning. Again, I wouldn't say I'm always productive, but I always try to be more productive. If someone is listening to this podcast now and is just thinking of somehow getting started, either in the AI world or software engineering more broadly, what would you recommend they do? How should they go about figuring out what to do, where to apply, where to work? I would say go to hackernews.github, read a few articles, comments, and go to comments and go to githubs. To me, get your hands dirty, grab some piece of code, run a model and soon you will have inspirations, ideas coming to your mind. And as you keep doing this, I'm pretty confident you'll find what you love to do. Was there a point in your career where you considered doing something else or was it always clear to you that this there a point in your career where you considered doing something else or was it always clear to you that this was going to be your craft? I actually, yeah, along the way I thought about doing various different things. When I was in China in early childhood, I always wanted to be a philosopher because I thought that in order to truly solve the world's problems, we need to have philosophical underpinnings. At the time, it was a little bit influenced by studying communism because it was a required study. We were required to study what Marx said, that there's the Communist Manifesto. In my view, even though the theory in my view has issues, but it was one of the best written manifestos. So I was always envisioning myself being a philosopher. But along the way, pragmatic constraint led me to the current path. Because when I was young, I tried to be an engineer, go to a shipbuilding factory. At the time, I think that was in the mid or late 70s, building big ships was the most glamorous job. So if you say I work for a ship building companies, you're kind of, wow, people. But I wasn't strong enough because in my years, only 3% people can go to college. I wasn't tall enough, I wasn't heavy enough. You had to be like, for those type of schools, you need to be over 50 kilograms. So, and the way they do is they weigh you before you kind of go to the exam. So I remember, you know, keep eating, keep eating, every day weighing, just couldn't get to that 50 kilograms. Couldn't get to that. So I wasn't qualified for a lot of those. And then I ask around, the people say, oh, I have eyesight problem, I have an eyesight. I couldn't really go to some of the discipline that I want to study. And then there are only two choices left for me in terms of field of study, mathematics and computer science. And ask my neighbors or people for feedback or advice, what should I pick? People will say, if you study mathematics, you can be a kind of a middle school teacher. If you study computer science, maybe you get to work at the radio factory. So my parents thought radio factory was better. So I was like, okay, let's pick computer science. So I really had no idea why. Once I start to work on this, I truly fell in love. I think very, very blessed, lucky that I get to work on the thing that I was able to do. Do you still code? Not anymore. So I read the code. I read because coding, I gave up quite a while ago, actually, when I was at Yahoo. I was still doing coding when I was SVP. I thought that's important for me to remain hands-on. But when it was reaching a point, my boss saw that at the time, he was yelling at me, like, you are blocking our teams. I think he was right. Because if I don't check in or if I have more bugs, it's actually hurting them more. So what I end up doing is, this is actually a brainstorm with at the Microsoft we built quite a bit. Essentially, you need to remain hands on, remain sharp. My approach is for the core algorithms, I must understand all the details. For the foundational systems, the architecture design, I want to put myself, I can go toe to toe with the best architect, best algorithm people to debate with them why you design that way. But coding, I thought that wasn't the productive thing for me to do anymore. So I gave up when I was at Yahoo at that late stage. I actually want to dig into that a little bit because it's a question I noticed as well at Apple, which is if the SVP is involved intimately in the algorithms, on the one hand, you're in control of the entire system. It's quite good. On the other hand, it could be seen as kind of micromanagement. You're not giving an opportunity for the directors and the managers to grow. So did you ever get that feedback? Oh, yeah. All the time. Yeah. To me, it can be managed properly. Because I view my role as not to make decisions. My role is to challenge you. So I always say, why have to design this way? No, I want you to give me a perfect solution because I know algorithm can be this way. But also, always made it clear, it's your decision to make. But I see you have holes in your thinking. I want to challenge you, I want to debate with you. So I kind of ask Bill, how do you keep up? What's your approach? He essentially uses a similar approach. He knows Excel code base extremely well, probably better than anybody else. Bill Gates. Yeah, yeah, yeah. So, even like when sometimes we have like, trust me, I know the code better than you do. I know, I got that, but I, and then you also surround yourself with a bunch of technical, senior technical talent. They all are superb in each of the domains. You have ongoing dialogues. This is how you essentially keep your mental level very sharp. But the decision-making to me is managing entirely differently. I think it's very, as a principal, you want to make sure that your chief scientist gets to make algorithmic decisions. For me, like, young person, now he is a Twitter. He and I have debate, argument for, I don't know, God knows on so many fundamental issues, but always medically young, you make the decisions. But I think you're wrong here. I disagree with you, I want to debate with you. So I participate on a lot of those to keep myself grounded in my thinking, understand the low-level detail of the algorithm, the key algorithms, whether it's rankings or content quality, all those. And then on key systems, the underlying systems, low-level fabric, I thought that it's very important to understand those. And you pick a few more of a pillar type so that your high level understanding can all the way go to the physical layers. And that helps to calibrate other different type of systems, right? You have something to anchor your thought with. And then in management, maybe I'll say one more thing. This is a great way to not people bullshit you. Because bullshitting happen all the time. If you do a few times, they know you can't bullshit this guy. Because he's going to challenge you. So otherwise, people will cook up beautiful stories, try to bullshit. Because in large organizations, everybody wants to be promoted. Not just for anybody's intent, but sugarco coating, exaggeration happens all the time. If you yourself are grounded in core technologies, it helps to set the tone right. When we talk about technology, let's have honest debate, sharp contrast debate, but make it clear the leaders are in charge of making decisions. So pick a few key technologies that you actually have full stack knowledge of, but don't try to have that knowledge for every single part of the organization. I think it's impossible. I used to... Then you break, yeah. In terms of management, I can tell you my practice. At Yahoo, I was able to largely do this. Essentially, my requirement for myself is I can do the jobs to level down. For a number of important reasons, because I can tell whether my guy gets bullshit or not. Right. Because I can often tell you, dude, you got bullshit about your guys, because I talk to them, I know what they do. Because I do that a few times, you set the tone. They work super hard, they make sure that I don't spot them, they got bullshit. So it really kind of anchors the engineering organizations. Everybody's doing the best work. Everybody's honest in their communication. Nobody tried to bullshit your boss. So I insist I would be able to do the jobs to level down. So I always do that. But at some point, it's just too much. It's just physically impossible. Then you pick a few key, to me, I call it my mental model, there's a right hand, left hand, particularly for product search. Essentially algorithm and system architecture play equally important role. Pick the core set of algorithms. I study everything, essentially all the details I study and debate, discuss with the best people. And then core systems, whether it's content systems, serving systems, from all the low level all the way up, just to pick those. And then you can calibrate all other systems. You can just see, oh, that system is similar to this. I don't need to understand detail, but I can extrapolate on how that system works. That's a very interesting rule. So be able to do the job two levels down. Now, something that I think will be on the mind of any CEO listening to this, does that apply to Satya? That is to say, do you anticipate Satya being able to do your job and the people that report to you's job? Satya used to report to me for two years. We kind of talk about that. We all understand there's a spirit of that approach, and there is also a limitation on what you can physically do. But if you can find ways that works for you, but achieve the same effect, meaning the effect is each leader, you are grounded on technological, the real end of the pin of technology. You don't build your strategy based on shallow, unsupported understanding of technology. That to me is important. Our industry is driven by technology. And there's many different ways to do that. Different people may have different approach. As long as you achieve that, as long as you set the tone for any sort of discussions, nobody should bullshit on things. You don't exaggerate. You don't try to get extra credit that you don't deserve. You honestly talk about your technology, honestly talk about your pros and cons. As long as you achieve that, I think, because it's the outcome versus the approach. For me, I used to do that because I went to Yahoo. It's kind of easy for me to do that. When I leaving Yahoo, I had an organization of about 3,000 people. I thought that I pretty much knew all of them, hired a lot of them, work with a lot of them. So you kind of get used to it, say, okay, tell me, you know, show me your code. Let's look at the system, how you do that things. But in Microsoft, it's a different setting. I don't think you necessarily have to follow that approach as long as the goal is achieved. Each senior executives is making decisions based on grounded understanding of the technology and its trajectory. What drives those technologies forward? And then additionally, there is a truthful, honest conversation. If there's a side to error on, too much or too little rope, it seems like you would err on the side of too little rope. That is to say, if you can micromanage or be too distant, would you err on the side of micromanaging almost? No. Let me say this, it's a evolving journey for me. If you ask me today, I would err on the side of giving more for seven important reasons. It's my learning, particularly more recent, working in China. Increasingly, what I come to realize too is, each company, there's overall operating output capacity. there's overall operating output capacity. The capacity is really driven by the leaders understanding and the learning capabilities. And the structures they set up to enable, unleash more independent points of views, independent learnings to pursue for the same objective, which is the company's overarching vision and mission. If you overly constrain, to say there's some degrees of tight harmony along certain dimensions, you tend to overly constrain the collective imagination, creativity capacities of organizations. So therefore, I'm more and more in the mystery of designing organization structures and meta models that enable organizations to have more leaders, senior leaders, that are able to exercise different way of thinking, different lens of looking at the same problems, and to be able to pursue an experiment when we are trying to solve a larger problem, so achieve larger missions. In the past, I was more on the operating more of a so-called tight ship, ensure everything falls in line. But out of my own learnings at this stage, I see a lot more good by having an organization that gives more ropes to our leaders, give them more autonomy, give them more independence, but somehow orchestrate the entire endeavor in a way that the effort all add up towards a common mission, common goals. That to me is an important question, but I would lean towards giving more ropes. So I guess you just have to be very careful with those leaders to make sure that they themselves are not giving too much rope and so forth and so forth. Yes, you need to design a meta structure. And in that context, motivation is very, very important. Understand the human motivation become a key part of designing that meta structure. And I think what Reid Hoffman's book aligns actually is one of the simple but effective model. Essentially, you have three different type of tour duties. And particularly for senior ones, are you really foundational? Let's say we're going to go all the way into the end. We're so aligned, our shared goals, or you are much more of a transformational. You just want to get something under your belt so you can move on to the next phase. As long as you are very clear and then you know that you are senior leaders or you are important position, each people, they are motivated driven by what? Because motivation is very important. Capacity, motivation in a structure that ties these things, loosely ties these things together, to me is perhaps at the, again we use the word, at the premium of company design, organization designs that enables original funding teams or management teams to unleash a lot more innovation capacities. As someone who is very philosophical, but also has an engineering mindset, how do you kind of marry both of those worlds to live by specific rules? The answer I will give you is when I joined Microsoft, Steve Ballmer asked me to, my first speech is, give a self-introduction about myself, what I live for, how to do my work. So essentially I wrote a simple set of slides. I think I mentioned five things. These are not necessarily rules, but I think largely I think will answer your questions. Essentially, first, learn every day. I view myself as a piece of software. Don't live the same day twice. The second is integrity. To me, integrity has three subsets. One is always speak truthfully. You will not hear me say the same thing differently when I talk to different people. Always say, I may be wrong, but I will say the way I see it. That's one aspect of integrity. The other is keep my word. If I give my word, I will do everything I can to give my word. To me, it's very important. A third part of integrity is acknowledging my mistake or weakness. To me, as a leader, this is an important part of having high integrity because we're going to make mistakes. The leader should publicly acknowledge the mistake you made or your weaknesses. So that's integrity. And being frugal always, to me, a penny saved is same as a penny earned. There's always rainy day when you can save financial resources, always save because there's always better way to use those resources. So being frugal to me is always important part of what I do. Let me see. There's five things. Integrity, learn every day, work ethics. I always say, for me personally, I would do something, I would do a work only if this work I thought that I love it so much I would be all in. Essentially leave something, I will do a work, only if this work, I thought that I love it so much, I will be all in. Essentially leave nothing behind. Every ounce of energy, it's all in there. So that's work ethics. I'd also, when I say work ethic, it's always make it clear that people in my world, you don't have to follow what I do. So, because having a balanced work-life balance is always good thing for, but for me, I'll always be all in. I forgot there's one more thing. There's one more thing I, it's, I remember there's five things I said, give me a little bit more time, maybe I'll be able to remember. But this is what I share with my teams when I initially joined Microsoft to say who I am, how do I work. You can consider those are rules, but these are the fundamental sort of beliefs that guides what I do. I feel like that's a very good note to close on. Chi, thank you so much for spending the time with us today. You bet. Thanks for having me. Real pleasure.