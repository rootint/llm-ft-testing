 Okay, Jeremy Rossman, welcome to the podcast. Glad to be here. You are one of the co-founders of MakeSchool. So for those who don't know, what is MakeSchool? MakeSchool is a new college in San Francisco. We offer a bachelor's degree program in applied computer science. It's a college in the ways you'd expect a college to be a college. There's dorms and a campus and full-time faculty. We're located near Union Square. What's really special about it is that students don't have to pay tuition unless they get a job. The curriculum is entirely project-based and our faculty come from industry backgrounds, a lot of partnerships with the companies that our students want to work at, and they can get a bachelor's degree in an accelerated timeframe. So you can actually graduate with a four-year bachelor's in two years if you take our intensive track. And so how does that intensive track differ from the normal four-year program? Because when I went to NYU, I was pretty much working all the time on school stuff. So yeah, how do you guys get it done in two years? So when you look at how colleges typically structure their academic calendar and even a given week, what happens is a lot of students are basically going to lecture here and there, going to lab here and there with a lot of dead time in between that's self-directed. We want to be preparing our students for a transition into the workplace. And we've realized that the best way to do that is actually to structure their week like a work week. So students are typically expected to come in at 9.30 in the morning, have what looks a lot like a morning stand-up with their individual coach, which will be their coach for the rest of the program, and then spend the day working on their projects, attending certain classes and labs. And when you add up doing the credit math that universities do, when you add up the time that students spend all day, every day in that 40-hour school work week, plus the time they spend outside on homework, which for us is all projects. There's no traditional problem sets and that kind of thing. You're able to award students enough credits that if they take the course load that we recommend and they come in and they're spending 40 hours a week in the school and working outside on their projects, they can get enough credits to get a bachelor's in two years. And so how are your students trying to differentiate themselves from people coming out of traditional CS programs? So we are all project-based and we equip our students with these portfolios that basically speak for themselves. So from the very first weeks at MakeSchool, even in your CS theory class, which almost sounds like an oxymoron, but our CS theory classes are project-based and applied. You're going to be building and launching small projects and then larger products. And by the time you make your way to being in front of a recruiter, they can see a tremendous amount of evidence of your coding ability, the skills and technologies you're familiar with, your theoretical background, your practical background, because that all is visible in the portfolio that you've built. So we recorded an episode with Austin from Lambda School. And in listening to a couple of podcasts with you doing research for this episode, you started talking about parents. And it's something I had never really thought about with Austin. And I think perhaps the people who are attracted to Lambda school, uh, versus make school are later in their career, maybe thinking about switching up. What is it like for you dealing with the parents of 18 year olds? At this point, I've come to love it. I'm, I'm usually the point person, the team for, for parents. And it's, it is important to note that our student audience is majority students who would otherwise be in college or who are college age. So when people, you know, we just had a prospective student weekend last weekend, 100 students coming in from all over the country, parents coming in from all over the country. And the questions are, you know, it's make school versus Georgia Tech, make school versus Stanford, make school versus, you know, a community college or a state school, not make school versus a boot camp. Because our student audience is really looking for, they're going to a college, it's a question of which college, or they're looking to transfer to a better college. And so the parent questions often have to do with, why is this different? Why is this worth it? But also, how can this possibly exist where you don't pay tuition unless you get a job? The parents have more of that. You know, they have exposure to the professional world. They're trying to do the math in their heads. Like, how does this, how can there be a campus and dorms? How can all this exist if they're not charging up front? Right. And, you know, there's two simple answers to that question. One is that we've been running the income share-based program since 2014. since 2014. So we actually have five years of data. Our students getting jobs at Facebook, Google, and Tesla, and all these great companies. So the salaries are there, and the payback is there, and it's really working well. And the other is that we get financing to cover our cost of educating students. So we're the school that actually goes in debt when students enroll. It's kind of a reversal. So normally, you enroll at a college, you go into debt. When you enroll at our college, we go into debt and we hold the risk and you only pay us later if you get a job, but we're on the hook for that debt anyway. And that puts us in a position. And that's what parents really appreciate when they realize it, where we have no other incentive than to be providing the kind of education that's going to get you a successful career outcome once you finish the program. Because at the end of the day, do you find that that's the core driver for parents? Or is everyone just going in because job is the most important thing? Because you know the historical thing is like, oh, expand your mind, teach you how to think, et cetera. Those things are incredibly important. And actually, we rediscover a lot of those same liberal arts concepts and values when talking to employers. So if you say, OK, make school's primary goal is to get students access to top software engineering jobs that are typically only hiring these days out of top universities. That's the reality, right? Everyone tries to get their funnel out of the MITs and Stanfords of the world. So if you want to go to employers that hire there and get them to consider a MakeSchool student, what you discover is that even they are going to tell you that a lot of those liberal arts educational experiences are part of what makes a candidate stand out. And so even if you were just narrowly career focused and you rediscover that actually a lot of the well-rounded education, the critical thinking skills, communication skills, cultural skills that come with a liberal arts education are things that employers do value. But we have to realize that the pure liberal arts education that is explicitly not career focused, that doesn't make any claims about whether it's going to be relevant to a job later, that's an education that was pioneered for and by elites. And any student who's considering attending a school that offers that kind of education needs to be conscious of the fact that the flagship schools, the Harvards and the Yales and the Princetons, they practically don't have low-income students. They do a lot of PR about the scholarships they offer and all this. But the reality is anywhere from 60% to 75% of the students who go to schools like Stanford and MIT come from the top 20% of families by income. And oftentimes, you get up to a quarter of the student body that's from the 1% of families by income. So they don't get a career training. They learn the liberal arts, but that's really like a luxury education where you don't have to worry about your career because you're from the 1%. Of course, there's going to be opportunities lined up if you went to Harvard and learned about culture and literature. We serve a student body that is demographically much more diverse. We get students who transfer in from top schools. We get students who come from wealthier families. But by and large, the majority of our student body come from low to mid-income families. It's a demographic almost inverse from what you see at a Stanford or MIT. And you simply cannot, with good conscience, provide a luxury, expand-your-mind-only education to a student who is not in a position to have any of the privileges or sort of freebies that you get from being a one percenter who goes to Harvard. And so it's not an either or, it's really an and, and, but we start with a focus of how do we introduce a technical education that is both theoretical and practical and all project-based so that students are employable? And then how do we ensure that five to 10 years down the road in their careers, they're just as competitive as a student coming out of a Harvard or a Sanford or an MIT. And so we do also have a liberal arts component to the education that is integrated with the technical education. So this is related to one of the questions that was sent in about being an autodidact. So William Triska asked, what are some ways to encourage greater independence and autodidactic behavior in the students pursuing technical skills and knowledge? greater independence and autodidactic behavior in the students pursuing technical skills and knowledge so in the context of okay we're going to teach you whatever uh like parse and jquery and like whatever you might need now but how do you ensure that you're teaching someone how to teach themselves technical skills so this is another thing that's very important to employers right they don't want people who've just learned a trade, who know how to assemble Ruby code today. And then when the framework gets updated next year, they're kind of lost. Or when the company makes a shift to a different framework, they don't know how to relearn. So we do a number of things to ensure that students are really strong in that front. The first is we do have a robust theoretical computer science fundamentals curriculum that students have to go through to really understand kind of behind the hood, like under the hood, what is going on? And how do all these concepts work together? How do these different paradigms and structures underpin the different technologies and tools learning how to use? We also teach the concepts in sort of repeated in different contexts. So if you only learn programming in one language or one framework, it's hard to actually differentiate in your mind, what is a property of the language, what is a property of the framework, what is a property of best practices, and what's actually a theoretical CS concept that underlies it all. When you start seeing this across different technologies, different languages, different frameworks, and you've had that theoretical CS education behind the scenes, then you're able to pick out and understand what is core to a specific framework versus what is a general and universal concept. And so, you know, as a simple example, we see a lot of our students taking a lot of our iOS development courses and then getting jobs as Android developers, right? We see students learning, you know, a number of stacks for web development and then getting a web development job in a totally different stack and language. And we're seeing that again repeated across data science and machine learning. There's a number of different packages and tools that different companies use. And onboarding onto a new one is not a foreign experience by the time a student has completed their main school education. Yeah. And I'm kind of curious about this word in general. So what percentage of the world do you think is an autodidact anyway? Like that might be a false premise. Right. I think it very much is. So while it is absolutely important to be a school that is augmenting students' ability to be lifelong learners and making sure that they are future-proof, the way that you do that, I think for most students, has to be through mentorship, dedicated curriculum, structure. And what I found actually was that I was not an autodidact. And I failed over and over and over again to teach myself computer science. I actually tried for the first time in eighth grade. My dad gave me a book. He's a huge autodidact. He taught himself everything out of books. He was like, Jeremy, here's a book on visual basic. And I just couldn't do it. But I was actually a very high-performing programming student because I was lucky to have a really amazing CS teacher in high school, actually two really amazing CS teachers in high school. What I learned then was that probably the majority of people who could be awesome software engineers are not autodidacts. And if you look at courses that are kind of self-serve, like the MOOCs, you see that it's industry standard to have two, three, four, 5% completion rates, meaning that probably 95% of people are actually not a fit for the type of education that is autodidact first. And so what we need to balance is recognizing that actually, when we look at industry and we see that the best programmers that we know taught themselves, we're probably seeing a survivorship bias. We're seeing the best programmers that we know taught themselves, but we're probably seeing a survivorship bias. We're seeing the fact that there aren't really good structured forms of education that enable people who are like me, who weren't good at teaching themselves, to actually be excellent software engineers. And so at the other end, you see an overrepresentation of self-taught, autodidact software engineers that almost has biased the industry towards that profile. When in reality, when you look at the data behind a lot of different educational programs and you look at, frankly, what our students are doing who have landed these awesome jobs, I'm now certain that the majority of people who could be a great software engineer at a really competitive and selective company, the majority of those people are not, by default, autodidacts who could just go to a MOOC and get all the information they need. So that's why students come to us, right? An 18-year-old who's looking for their first higher educational experience generally wants to go to a college because they recognize that that structure is going to accelerate them. And it's going to be better than just trying to do something self-serve online. And I think that addresses the majority of the population. Yeah. Yeah, no, I feel the same way. Like basically everything I've taught myself has been just enough to get the project done. But then if you were to throw me into like a Google production level environment, it would be a disaster. When I tried to deploy our website for the first time, because in the early days when we were going through YC in 2012, I was also, I was not only like writing curriculum and, and, and one, basically one of two instructors, my co-founder and I were the two faculty. I was also a web developer and we were, we were going to deploy a simple Django website. And even at that level, even though I was like, you know, MIT, I was, I'm an MIT dropout. I'm like decently clever. I could not get this going without a mentor. And I hired a Django developer to tutor me for 30 minutes a day during that week that we were going to get the first website off the ground because my speed of learning and ability to actually be high performing as a software engineer was literally 10x if I had a smart human available in real time to notice where I was blocked and unblock me as I got stuck and ran into conceptual hurdles. And that's one of the things that I'm most glad that we can provide to our students. And just seeing that happen live, a lot of folks who, frankly, have accumulated a huge amount of self-doubt. Because with that survivorship bias, you look around in your CS class, right? And you see that maybe the faculty is not so good, teacher is not so good. Curriculum is old school and traditional. It's not working for you. It doesn't match your learning style, but there's that one kid who's still crushing it. And you go, Oh, must not be for me. Right. I can't be like that. Right. They've been coding since they were 12. They just read online and they're fine. And, and, and actually if with the right teacher, with the right curriculum, with an, you know know project-based learning is is is in the context of computer science the best way to activate people's passion because it's like the reason you're learning this is because you have an idea that you want to see exist in the world and you're learning so that you can launch the thing right and that's what every single one of our classes is about that kind of structure can get you to the level of of the person who's been you know learning online since they were 12 but but uh people often don't turn don't realize that because they look at the industry where it is today and they kind of work backwards and draw the wrong conclusions. Well, you're just like, in the fact that you're not sitting next to someone, you don't realize that even the best programmers get stuck like setting up an environment for 10 hours. Every day. All the time. All the time. They're just like these little things that you bash your head against the wall and then you sleep on it and then you realize it. Yeah. And, you know, you asked me, like, how can you do a bachelor's degree in two years? Another thing is just from a pure competency and speed of learning perspective with our faculty in the room who've been engineers in the Silicon Valley who are there and it's all project based learning. So they're not there to lecture to you. They're not there to just be the transmitter of information. The information is already available. We have our curriculum, you know, it's a flipped classroom-ish model. A lot of it is available to students in the form of written materials that we produce. So the faculty's job is actually to be the kind of the live tutor, the live mentor, the unblocker. And that is like, again, for most students, a 10x acceleration in the speed of learning, because you shouldn't be spending 10 hours setting up your IDE when you're starting a new framework, especially as a student, what a waste of time, right? You should be spending 30 minutes and then learning all the concepts and the conceptual stuff that you need to know to be successful, right? Yeah, no, I mean, I got stuck learning Ruby and then I often attribute Python to my learning, but I think actually it was learning Python while I was friends with people who are much more technical than I was. It really helps. Because they could just debug me. So a question, like going back to the parents really briefly, you are in an interesting position where you kind of have like two stakeholders making purchasing decisions. That's right. How do you go about like communicating to both the potential students and the parents? So for the potential students, the message is very much from the heart, this is the college that I wish existed. I was a student who was at the cusp, learning how to program at the cusp of the app store revolution. My co-founder and I, in our junior and senior years of high school, were amongst the first to start teaching ourselves how to make iOS apps and launched iOS apps. And that experience was so fulfilling that when I got to MIT, I was pulling all-nighters to work on my app with friends and not on my problem sets. And that gave me some insights as to what are the motivational factors that drive a college student to focus on their education. And so what our message to students really resonates because it mirrors my experience and my co-founder's experience, I think really mirrors what a lot of students are experiencing, which is a stagnant style of education and the in-classroom experience being very old school and a really significant set of questions about whether what they're learning in class is going to translate to what they actually want to do later. For parents, it's different. There's some overlap. Parents latch onto the fact that I'm a college dropout who started a college. So that's an interesting thing for them to wrap their heads around. For students, it's like, oh, that's really cool, right? He was at MIT. He thought of something better. I co-founded Dropout at UCLA. We teamed up and we started this. For a parent, they want to know, I think they're thinking a bit more long-term. So they're worried, is my child making a short-term decision? Is this a shortcut? Are they going to get all the fundamentals and foundations that are going to set them up for success later? Or should they fall back on a more traditional option because that's what the parents are comfortable with? But what I will say is that there's been a huge shift in the last two to three years. Parents are way more aware of the student debt crisis, the ROI challenges in higher ed, the fact that a huge number of college graduates are underemployed. And so whereas two, three years ago, a lot of my conversations with parents were dealing with skeptics, I now get more conversations proportionally that are parents asking how they can advocate, who say, we've been freaking out as our student, as our child is now a senior, or they're at a college accruing debt. And we're realizing this is not the way it was when we were going through college. This is not a world where you can take a summer job and graduate without debt. This is not a world in which the economy is booming to such a degree that everyone can have a middle-class life out of college, right? That you need to actually be tactical about the higher education you choose to make sure you don't end up in one of the many traps that parents have seen their older children or other folks fall into over the past few years. And so, you know, I had 30 parents visiting campus this weekend. And whereas before it was a lot of questions about legitimacy, now I think the biggest questions are about future-proofing and just making sure this isn't a shortcut and that the integrity of education is still very high and not at an opportunity cost to something that might set a student up for longer-term success. And so we have to discuss how the project-based learning that we provide actually encapsulates a whole bunch of future-proof skills. Because you teach computer science in a project-based way you also got to do some design you got to do some user acquisition you got to do some customer discovery you got to work on a team and actually you get more communication skills than you might in a liberal arts communications course and so on and so forth and so these are a lot of the questions that parents have that we have to that we have to address yeah it seems like a lot of these learnings, right? It's just like one generation learns it the way that they were brought up and then they got their jobs. Right, and it worked. And then they teach it to their kids and then their kids get screwed. Well, and for many, many years, they teach it to their kids and then it worked. And over the past 20 years, it stopped working. And so as you say- But college is a relatively new phenomenon. It is, yeah. So like maybe since the 50s or 60s, a lot of people. Right, and it's been a huge wave since then, and we're seeing the crash now. Yeah, yeah, big time. So what do you think, like, for instance, like, do you have kids? I don't have kids. No, that's good, me neither. But say we had a kid today, and they were one year old. I'm their college age. What do you think this environment looks like? I think that the landscape has dramatically shifted by 18 years from now. So there's a few forces at play. We are, I think, the first of what I hope to be many new entrants in what has been a market that has traditionally been dominated by incumbents that have not faced any new pressure from new schools. One of the things that's really fascinating when I talk to parents and students is that it takes a few times of repeating for people to be able to visualize that there is a new college in San Francisco, that we have a campus building. We have these beautiful dorms, like that there's full-time faculty. People are not used to the idea that a new college could be born because colleges are something that, that just have been there forever. Right. And so in any market where you have the only players have been there forever, right? And so in any market where you have, the only players have been there forever, they've been stagnating and they've not been facing pressure to sort of improve their efficiencies and their quality. So I think 18 years from now, there's gonna be an increase in pressure on traditional higher ed to be aligning their incentives with their students as more and more students tune into the fact that if you just copy the default path to success, which is try to get into the highest ranked school that you can, and then trust that if you follow your passion, that you will get an education that will set you up for success. That as more and more students realize that's just simply not true, there's going to be demand for alternatives. We are actually one of the first colleges to be created under new accreditation rules. So we were accredited this past fall. We offer a real accredited bachelor's degree, accredited by the same accreditor that accredits Stanford and UC Berkeley and so on and so forth. But they created these new policies in 2014. And what that means is we're relatively early in what is potentially a new wave of colleges being born all around the country. I wave of colleges being born all around the country. I also think that the financial structure of college is going to have to change. Students also start tuning into the fact that the incentive between them and a college is not right. And for students who really are passionate about research and academia, things are working a little bit better. And we have deep respect for students who want to go that direction and are very close to a lot of folks who are in that world. It's awesome to be dedicated to the furthering of fundamental knowledge and to be doing research and to be preparing for that. But a lot of surveys show the majority of students' primary concern is at the end of their bachelor's, are they going to be employable? And so in the face of that primary concern, that's going to drive a lot of decision making. That's going to put a lot of pressure into colleges. What we've started seeing actually is that other colleges, even big ones, are adopting our income share agreements. The largest example is Purdue. The documents that we helped co-author back in 2014 when we piloted our first college program, which has turned into this accredited bachelor's that we offer now, those same documents as they've been iterated on over the years are now being used by a number of other colleges. And so what we're starting to see is that income share agreements are not just this thing that applies to programming schools and make school the new CS college. It's actually higher ed is taking notice and is starting to roll it out at a larger and larger scale. And so 18 years from now, I think you're going to have options that look like the options we have today, but it's going to be a lot more obvious what they are. Harvard is going to be more obviously recognized as a luxury good, as an expensive purchase that works for the elites. And it's something that if you can afford to get your kids there and you can afford to not focus on hard skills, then great, you've purchased a luxury education. It's going to be more obvious what is actually tied to real world outcomes. And there's going to be schools that are increasing, going to increase their level of innovation in curriculum and also in financing to prove to students that they're putting their money where their mouth is and that their incentive is to help students achieve their goals. And so do you envision they will also shorten their programs like you have in doing so allow for people to basically make a stack? So you're like, okay, I'm going to buy fancy Harvard for two years to drink, and then I'm going to go to make school and actually maybe learn something. I think that's Dartmouth, but yes. Yeah, all right. I think that students, we've actually seen this line of thinking with students, like the idea that they're going to stack. It tends not to play out. Students, once they have an opportunity to exit education with a career or a next move they're happy about, are generally not going to look for education again for a little while. So instead of a stack, what I think it's going to be this lifelong learning pattern where students are going to do it. They're going to enter the workforce a bit earlier. They're going to work for a few years. And then they're going to return, whether it's for a master's program or a second bachelor's, that's going to refresh their skills or maybe expose them to something that has emerged that was not a big thing at the time that they graduated. If you graduated college five years ago, you might be wanting to go back to really learn what's fresh and new in machine learning, for example. And so I think that kind of phenomenon is going to repeat itself. And we're going to see students, you know, entering the workforce earlier, but then returning for further education at a higher rate. But I think that's not going to be stacked. It's going to be, you know, years down the line. Okay. So what about degrees in general? So Vikram Malhotra asks, when are we going to do away with degrees? You know, for instance, like I saw this article, I didn't read it, but I saw the headline. As we all do. Yeah, exactly. Like, Google and Apple do away with college requirement or something to that effect. So companies here and there do PR around this idea that they're dropping college as a requirement. And we've been on the ground talking to companies every week since 2014 when we've had our first inaugural sort of college program and the reality on the ground is is quite different top schools the ones that attract majority wealthy students and that have a lot of prestige associated to them continue to be the major hiring funnels for new grads for these companies including google Google and Apple. The large, a large number at some companies, it can be almost all, but a large number of new grad hires are typically sourced from internship classes, meaning students who, while they were in college, interned at that company and then come back for full time. And I can tell you with certainty that there is no university recruiting internship program that I've come across that has dropped degrees as a requirement in any sort of systematic way. Maybe there's been a one-off exception here and there, but the reality is university recruiters have a territory of universities they recruit from, and they're only there to work with people who are in degree granting programs. So on the employer side, we haven't seen this play out nearly commensurate with the amount of PR that's been associated with it. Interestingly enough, though, several of our students without degrees who went through our program before it got accredited have landed at Google and Facebook and so on and so forth. So there is some truth that it's not a hard requirement. It's a question of what is the proportion of their workforce that actually is representative of that shift in policy. Yeah although the it should be important to note uh this is just for cs right that's most of your data also true yeah yes and so it's probably less true in other fields to be honest so well it might be strictly true as i've seen with my students i have you know i have two alums who are at google neither have degrees i have you know two alums who are at facebook neither have degrees um because they were in our program before it was degree granting. It is true. Now you can get full-time jobs at these companies without a degree. But if you look at the proportion of the workforce that's actually being sourced in that way, it's not addressing the fundamental equity problem, which is there is no structural pathway for low-income Americans to access high-earning, software engineering jobs at large tech companies. There's a substantial number of anecdotes of people who come from lower-income backgrounds who are there, but nothing that even makes a small dent in the statistics. And when you think about the fact that 100 companies are going IPO this year in the Silicon Valley, we are having billions of dollars of wealth transferred to the founders, investors, and employees of companies who all, on average, come from the top 20% of families in the US. And what I want, when we talk about 18 years from now, what happens, I want us and hopefully other schools like us that are educating students who are lower to mid-income to have it such that when there's the next wave of 100 IPOs in the next boom cycle, 10 years from now, that that wealth creation accrues evenly to folks from all backgrounds and not just to the folks who are kind of the incumbents who've had access to elite education and who've had access to elite job opportunities. So yeah, it's technically true, but if you look at sort of a societal level, it's not moving the needle. Well, it's the same thing for YC, right? Like everyone thinks like, oh, well, you know, Bill Gates and all these people dropped out of Harvard. So therefore I need to go to Harvard and then I need to drop out and then I'll create a multi-billion dollar company. And in fact, I was an MIT dropout going through YC at the age of 20. And I was basically one of like five of my profile. Way below average. In my entire batch, people thought, I would meet people who thought, oh yeah, you are the prototypical YC founder. You are an MIT dropout, 20 years old going through YC. And I would tell them, actually, there's only like five other people in our batch out of over a hundred people who are younger than like 25. And in fact, my co-founder and I are the only young founders in our batch whose company is still alive. So when you look at it from that perspective, you look today, what are the companies from my YC batch that still exist and are still successful? There are zero examples beyond MakeSchool of a still existing company that was founded by a college dropout who was young. So yeah, like YC, people kind of have mistaken perceptions. I think the other part of Vikram's question, whenever we do away with degrees, is less of a practical question about, well, our companies drop the requirements and so on and so forth, but more of like a higher ed question, right? Are degrees still relevant? And are we going to increasingly have to circumvent degrees because so many degree programs are dropping in relevance? And there's a bit of an arms race here. I think in a lot of the country, it is totally true that degrees are dropping in relevance and students are looking for alternative routes of education. I think there's going to be a pop in a sort of higher ed bubble where a lot of colleges are going to go out of business and it's going to be a lot of pain in higher ed because of this factor. So Vikram is on point about that. time, there are going to be folks like us who are going to try to make degrees relevant. We're trying to essentially bust this false choice between should I get a degree or should I get relevant skills? And it's like, why not both? And the answer has often lied. Well, accreditation standards, for some reason, hamper your ability to do both. The good news is, at least in the West Coast, our accreditor, WASC, is under new management. Jamie Studley, new president at WASC, created these new regulations in 2014 that we've fallen under to become accredited and be able to offer accredited bachelor's degrees. Involves, you know, partnering with established institutions as a quality control measure. It's really thoughtfully put together set of rules. The end result is now there isn't that false choice and we're a great example of it. And I think if we can pull that off, if we can be a fully project-based, like some of our faculty don't even have master's degrees, right? Things that people think are not possible as an accredited school. But it turns out that the accreditor in the West Coast is very open-minded to this and understands. They see what we see, which is all the things that Vikram sees and makes them ask that question, like, are degrees still relevant? And they want to be relevant. And so the last thing I'll say on that point is our views shifted on this tremendously as we started talking to and better understanding folks who are in our student audience who came from lower income backgrounds. To say that you can succeed without a degree is on the face of it true, but it is most true if you come from privilege. And as a college dropout, I went to a high school that is in the richest zip code in the United States. And when I look at my buddies who are also college dropouts and doing okay, we have something in common, which is that we all come from relatively privileged backgrounds. Yeah, you have a safety net. We have a safety net. So when you talk to students who are lower income, and especially parents of those students, you realize that to tell somebody who is African-American or Hispanic, Latino, or otherwise underrepresented in tech, who might be the first in their family to go to college or the first to get a credential, they don't default belong in the way that we've structured this industry, which is a big problem. And they don't have the safety nets and the privileges and the networks. I got a professional network out of my high school that is as good as what people go to get Stanford MBAs for, right? That's totally unfair. But if you're like 90% of Americans, that's not you. And so this notion of degrees no longer being relevant ends up really applying to those with privilege. The two to 4% we discussed were autodidacts and who can bypass all traditional education and still emerge as skilled, and it leaves behind basically 90% of Americans. Yeah. And so what about the schools now that exist that aren't necessarily technical? So Evan Ward asks, should liberal arts colleges consider adopting income share agreements? I think that the advice that YC would give to any organization is talk to your users and make sure that the product you're building is a fit for your users' needs. Universities don't do this. They should do a lot more of it. But other organizations do pull college students. And it is known that the majority of college students, even at liberal arts colleges, primary concern is, am I going to get a job after graduation? Americans want to live the American dream, that very clearly, right? And so ISAs are a mechanism to align incentives between the college and the student, and also to be able to be more open about what is a program that actually can be ISA compatible. I don't think it's just CS. I think it's actually widely applicable to a whole bunch of fields that have sort of lagging student supply relative to industry demand. It could be everything from medical fields to teaching to software engineering. And any program that you cannot apply ISA to, you have to ask yourself, is this program really a good fit for the 90% of Americans who don't have that safety net, who are looking for something that will better their lives? Or is this actually a program that's more of a luxury good that should have a pay-up-front price tag? And I think it'll make it a lot easier to know actually what you're getting into. It'll be very telling when a college says, hey, you can go to our nursing program, our education program, our CS program on ISA. Oh, but, you know, English majors have to pay this much up front. That tells you something, right, about their confidence level in being able to deliver on the American dream for the students in those schools. So I think ISA is going to turn out to be widely adopted in spirit. I don't know if it's going to look exactly like ISA everywhere. The key feature of ISA is you don't pay if you're not successful. And there's ways to replicate that with loans, through loan forgiveness. There's ways to do that with income share agreements. The core structure that's going to matter that we want to see higher ed adopt is this idea of aligning your incentives and not having students be paying you if the student is not successful. And I think that there might even be more innovation in how that is structured exactly. And other schools may do it in a way that is not ISA. But what's important is that more and more higher education institutions should absolutely be looking at what outcomes they provide and be starting to make that their number one priority because it is their students' number one priority. Yeah. Have you seen instances of predatory ISAs? Yes, to some degree. So there's definitely folks who are using it in a way that makes us nervous. And we're like, okay, you're not disclosing appropriately to students what their future payback burden might be, things like that. We see also schools use it as a way of actually reducing the amount of scholarships they give. So here's how that might work. You have a school where list tuition is $40,000. And on average, students pay 20K upfront and 20K in scholarship. In most schools, by the way, there's no such thing anymore as students paying list tuition. Schools keep track of this thing called the discount rate. And basically, most schools don't actually charge the list tuition price to almost any students, right? So let's say the average student is getting a $20,000 scholarship and $20,000 in tuition. Some schools are realizing that what they can do is they can replace a $20,000 scholarship with a $20,000 ISA. At enrollment, it feels similar. You only have to pay 20K up front. But now what used to be scholarship money is actually extra revenue for the college. And so you haven't expanded access, really. You've increased the total cost of education for the student when the whole point is actually not to do that. And you are not aligning your incentives with your student because you're still getting half of it up front, right? So I think ISA or similar structures are most powerful when schools do the kind of like the bet the house model on it. When they say, okay, we're really not going to take enough money from you up front that it's worth it for us. It's only going to be worth it for us if if you are successful after graduation. And schools that do intermediate models where they supplement with paid, I have mixed feelings about that. Even though we do let students mix and match if they want to, 90% of our students go full ISA. And that's what we want. Like we would love that to be 95, 99%. Because we want to be every day waking up and thinking our only priority is not what is the fancy new renovation for the multi-billion dollar campus building? What is our sports team doing? How is our research going? None of that. We want to be thinking every single day, how do we help students be successful? And, you know, taking no money up front kind of forces you to be that way. Yeah. I think it's awesome. And something that only like a startup would have tried all out. Uh, what do you think about the students who come in who want to be entrepreneurs so we get a lot of those students um at our prospective student weekend had 100 students in the room um and we had a guest speaker who was like you know show of hands if you want to start a company someday and it was like three quarters of the students in the room what we tell those students is hey i was a young college dropout entrepreneur. There are almost no people like me out there. All the successful entrepreneurs I know look like somebody who is in their late 20s, early 30s or older. My father himself is on his like eighth startup. And it's folks who've had significant exposure to building and launching products. So when they understand a problem that they want to solve, they have experience in doing customer discovery, crafting an MVP, iteration cycles, getting feedback, making sure that they're building something that actually has product market fit. And then it's folks who have had experience in the real world enough to expose them to categories of problems that are worth solving. And the challenge with, if you're a college student who wants to start a startup just out of college, which of course there will continue to be students like that, and that's awesome. But the general challenge is you haven't had enough exposure to building things. So your startup might be your first rodeo in building something, which is higher risk. And the problems that college students face are limited to problems that are faced by like a very narrow segment of the population. With no money. No money. And most of the purchasing power is held by people who are between the ages of like 22 and dead. And most of the big problems in the world that really need solving are not necessarily visible to a student in college. What we do to mitigate that is obviously A, the whole education is about building products that solve problems. The entire culture of the school, from every brainstorming phase to every welcoming talk at orientation and so on and so forth, is about pushing students to see software as a creative tool to make impact on the world and solve real problems. And so we're always asking students, even in their CS theory class, right, how can you leverage what you've learned and the projects you're building to actually be solving a concrete problem? And that forces students to go out and already go through essentially test cycles of being an entrepreneur, where they have to conceptualize a product, they actually have to launch it, they actually have to acquire users for it. And doing that in the context of college, I think, sets our students up for success as entrepreneurs later. And my suspicion is that two to three years after graduation, when students have had a couple years of work experience, we're going to see a lot of our students leaving to start companies. And I'm excited for that, because when they do, they'll probably come back to us to hire. And it's going to be great for the ecosystem. We've already seen, there's already, I think, three groups of students starting companies at various scales out of the program already. Awesome. So just in closing, we have a new batch YC coming up. So you're an alum, your company's still alive. It's been a while, winter 2012, and now it's way longer. What would be your advice to someone going through the batch? So I think that the anti-pattern that I saw in my match and in many matches was to think that you are above the generic foundational YC advice. The generic foundational YC advice, as I remember it, is make something people want and be darn sure that what you're making is something people want. Focus. Don't be doing fake work. Don't be going to conferences unless it really impacts your bottom line. Don't be taking coffee meetings don't be going to conferences unless it really impacts your bottom line don't be taking coffee meetings left and right don't play entrepreneur and execute to a high degree of fidelity based on what your you know based on what your um customers want once you get out of yc what other thing that we see is you know students playing up not students you see yeah entrepreneurs playing optimization games around funding and that kind of thing. And, you know, way more startups that I know than I would have expected came within weeks of running out of money. And so the other advice that I think emerged a little bit later in my YC life, which was this notion, are you default dead? Are you default alive? How aware are you of that on a weekly or monthly basis? And being very, very clear on how at a strategic level, you're going to steer your company to ensure that you're shifting from being default dead to default alive is probably one of the most significant things you can do. And so if you're making something people want, if you're focusing on only that and not the other stuff that seems like work but isn't, and you're shifting your company towards default aliveness instead of default deadness without trying to optimize too much on the terms of your fundraise and really trying to optimize for not dying, I think you'll do great. And the biggest tragedy is to really be onto something and then through a tactical strategic sequencing mistake end up running out of money or having to do a fire sale when you could have changed the world Awesome, thanks for coming in you