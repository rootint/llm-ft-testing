 So I'm going to talk about how to operate. So I've watched some of the prior classes, and I'm going to assume that you've already sort of hired a bunch of relentlessly resourceful people, that you've built a product that at least some people love, that you've probably raised some capital. And now you're trying to build a company. So you've been forging a product, and now you've got to forge a company. And I'd actually irrational. Building a company is basically taking all the irrational people you know, put them in one building, and then living with them 12 hours a day at least. So it's very challenging. Now there's techniques for coping with that, and some people get good at it and some people don't, but that's really what operating is about. So basically what you're doing when you build a company is you're building an engine. And at first you have a drawing, literally on a whiteboard, and you're architecting it. And it looks very conceptually clean and beautiful and pretty. But when you start actually translating it to practice, it actually looks more like this. And you're holding it together with duct tape. And it takes a lot of heroic efforts of people to actually hold it together. That's why people work 80, 100 hours a week. Is that heroic efforts is actually necessary to keep this thing together because you don't actually yet have polished metal in place. Eventually you want to construct a high performance machine. A machine that actually almost nobody really has to worry about every hour, every minute. And you know, as we used to joke about eBay, that if Martians took over eBay, it would take like six months for the world to notice. That's what eventually what you want to get to. Or as Warren Buffett says, you know, build a company that idiots can run, because eventually they will. So this is what you want. Basically a performance machine that idiots can run. Now as a leader, what is your real job? What's your role? Strictly speaking, there's only one book ever written that actually explains how to do this. It's a little old. It's written in 1982 by Andy Grove. It's quite famous and quite successful. And his definition of what your job is, is to maximize the output of an organization, your organization that you're responsible for, CEOs, everything, and a VP would be part actually are responsible for the performance of the product team too, or the marketing team, because you have influence there. So this is how you measure people, and you want to focus on the output, not the input. The old adage about measuring, not measuring motion and confusing that with progress, you're measuring only progress. And this is gonna sound like a fancy and glamorous thing to do. Maybe people get excited about managing a whole large organization and being responsible for the output. But in practice, what you're going to learn today, hopefully, is that it's more about things like ordering smoothies, teaching your receptionist how to answer the phone properly, and serving as a $10 an hour task rabbit for your employees. So let's talk about that. So at first, when you start a company, everything's going to feel like a mess. And it really should. If you have too much process, too much predictability, you're probably not innovating fast enough and creatively enough. So it should feel like every day there's a new problem. And what you're doing is fundamentally triaging. So some things will look like a problem, and they're actually a cold. They're just going to go away. So somebody's annoyed about this or that. that may be a cold and you shouldn't stress about it and you certainly shouldn't allocate a lot of your time to it. And some things are going to present themselves as colds, but just like in the emergency room, if they're not diagnosed properly, they actually can become fatal. So what I'm going to try to do is help give you frameworks for thinking about which things are colds and which things are potentially fatal. So one of the most important things I learned at Square is actually a concept of editing. And this is, I think, the best metaphor I've ever seen in like 14 years of running stuff of how to think about your job. It's natural. It's a natural metaphor, so it's easy to take with you every day. And actually, it's easy to transmit to each of your employees so that they can figure out whether they're editing or writing. It's a natural construct. You generally know when someone asks you to do something, am I more writing or am I more editing? So an editor is, is the best metaphor for your job. And we're gonna talk about the specific things you're doing in editing. The first thing an editor does, and you've probably all had this experience in school, is you submit a paper to a TA, a draft to your friend, and the first thing an editor does is they take out a red pen, or nowadays, you know, online. And they start striking things. Basically eliminating things. The most important task of an editor is to simplify, simplify, simplify. And that usually means omitting things. So that's your job too, is to clarify and simplify for everybody on your team. The more you simplify, the better people will perform. People cannot understand and keep track of a complicated set of initiatives. So you've gotta distill it down to one, two, or three things. And use a framework that they can repeat, they can repeat without thinking about, they can repeat to their friends, they can repeat at night. Don't accept the excuse of complexity. A lot of people will tell you that, well, this is too challenging, this is too complicated. Well, yeah, I know other people simplify, but that's not for me. This is a complicated business. they're wrong. You can change the world in 140 characters. You can build the most important companies in history in a very simple to describe concept. You can market products in less than about 50 characters. There's no reason why you can't build your company the same way. So force yourself to simplify every initiative, every product, every marketing, every, everything you do. And, and basically take out that red and start eliminating stuff. Second thing is what editors do is they ask you clarifying questions. So when you present a paper to somebody, what do they usually do? They, they find some ambiguity somewhere. And they say, well, do you really mean this? Do you mean that? Do you have an example of this? That's what your job is. So you're in a meeting and people are gonna look to you. And the real thing you do is you actually ask a lot of questions. And they can be simple, basic questions like, should we try this seven days a week or six days? They can be fundamental questions like, where's our competitive advantage here? We try to do this actually as investors too. Some investors will ask you a billion questions about a billion things and they'll have you do diligence forever. We try to narrow down to what are the one, two, or three, four things that actually matter for this company and only focus on those things. So it allows us to be more decisive and we can make decisions rapidly. It allows us not to distract you from your day job, which is actually building a company. And yet I think we still get to the highest fidelity answer because we don't have all these extra extraneous pieces of details and data. Now, it's hard. It's something you have to practice. But when you're good at it, every step you eliminate, Andy Grove estimated that you can improve performance by 30 to 50%. The next thing you do is allocate resources. So the editing construct, this is what editors do all the time. They take editors from the mid-east and covering the mid-east, and they move them to Silica Valley, because Silica Valley's now, now more interesting. Or they move them to a sports section, because they want to compete on the basis of sports with other journals and other publications. So that can be top down, where I take a bunch of allocate, resources and people and say, we're now going over here. We're gonna compete on this basis. And then next month, next quarter, next year, I'm like, well, that Middle East coverage is getting boring and bland. We don't wanna do that anymore. Let's go chase after something else. Or it can be bottom up. Just like journalists mostly come up with their own stories, the people who work with you generally should be coming up with their own initiatives. So a reporter will generally, who covers Google, come up with the interesting stories that they're hearing in the ether and propose one or two to their editor for approval. But it's not like the editor is saying, go cover Google and this is the angle I want. Once in a while they do that, but that's not the day, the day, the meat and potatoes of what a journalist does every day. Your goal over time is to actually use less red ink every day. So one way of measuring how well you're doing and communicating to your colleagues about what's important and what's not, what, why some things are important, some things are not, is how much red ink you're pulling out every day. It's okay if you have a bad day and the red ink's all over the place. But it's not okay if the red ink next month is more than it was last month, and next quarter is more than this. So measure yourself of how much red ink you're creating. The other thing that's very important that actually isn't as intuitive to a lot of people is the job of an editor is to ensure a consistent voice. So if any of you read The Economist, you can tell that there's one consistent voice. You can pick up any article, any post in The Economist, and it feels like it was written by the same person. Ideally, your company should feel like on your website, on your PR release, on your packaging if it's a physical product, anywhere on your recruiting pages, to feel like it was written by one person. That's extremely difficult to do. And at first you're going to be tempted to do that yourself, which is okay for a founder to do that, him or herself initially. Over time you do not want to be doing all of the consistent voice editing by yourself. You want to train people so they can recognize the differences in voice. So if you see this website page, it looks very different than the recruiting page. You start asking questions, why is that? Is the reporting messed up? Is one of the leaders over here not really understanding the voice of the company? So you gotta, you have to fix that over time. But you want to start with the objective of everything should feel exactly the same. It's quite, quite difficult in practice. almost every company has at least one piece of the organization that isn't exactly on the same voice. At Apple, which is notor, you know, under, even under Steve's regime, which was notorious for getting this right, if you ask someone who worked at Apple, talk, ask them about the internal tools about recruiting. Do they really feel like Apple products? All of them will tell you no. So you never 100%, but you definitely want to get as close to that as you can. The next complicated topic is delegating. So just like the other thing I like about the metaphor of editing is writers do most of the work in the world. Editors are not actually writing most of the content in any publication. So that's actually true of your company. You are not going to do most of the work. You shouldn't be doing most of the work. And the way you get out of doing most of the work is you actually delegate. be doing most of the work. And the way you get out of doing most of the work is you actually delegate. Now the problem with delegating is that actually you're responsible for everything. So a CEO, founder, there is no excuse. There's no like that's that department over there, this person over there screwed up. You're always responsible for every single thing, especially when things go wrong. So how do you both delegate but not abdicate? It's a pretty tricky challenge and both are sins. Like if you over delegate or you, and you abdicate. Or you micromanage, those are both sins. So I'm going to give you a couple techniques for solving this. First, and this actually comes from high output management in Andy Grove, is what's known as task relevant maturity. It's kind of a fancy phrase for basically has this person ever done this before? It's really simple. Like how mature is this person in doing something? And the more they've done the exact same task before, the more sort of rope you're going to give them. And the less, and the more they're trying something new, the more you're going to actually instruct them and consistently, constantly, regularly monitor. So that's kind of a basic concept, but it's worth keeping in the back of your brain. The interesting implication, and this is pretty radical, is that any executive, any CEO, should not have one management style. Your management style actually needs to be dictated by your employee. So with one particular person, you may be very much a micromanager, because they're quite low on this scale. And with another person, you may be delegating a lot, because they're actually quite mature on this scale. So it's actually a good thing if you do reference checks on somebody and half the people you call say they're a micromanager. And the other half say they actually give me a lot of responsibility. That's actually not a, that's a, that's a feature, not a bug. I didn't understand that at first at all. Like I used to be befuddled when people would do reference checks on me and come back with this like complicated mosaic. And I basically finally figured out that, maybe I was actually doing my job correctly. So then, of course, taught other people that this is the way to do it. A more nuanced answer though that I've sort of came up with is how do you make decisions and delegating versus doing it yourself. You don't want to do it yourself too often. So what I've basically borrowed from Peter, this is my first two by two matrix ever in my life. But he taught me something at least. Is you basically sort your, your own level of conviction about a decision on a, a grid. You know, extremely high, extremely low. There's times when you know something's a mistake. And there's times where you wouldn't do it that way, but you have no real idea what the, whether, whether it's the right or wrong answer. And then there's a consequence dimension. There are things that if you make the wrong decision are actually catastrophic to your company and you will fail. There are things that are pretty low impact that really at the end of the day aren't going to make a big difference, at least initially. So what I basically believe is that where there's low consequences and you have very low confidence in your own opinion, you should absolutely delegate. And delegate completely. let people make mistakes and learn. On the other side, obviously where the consequences are extremely dramatic, and you have extremely high conviction that you're right. You actually can't let your junior colleague like make a mistake. You're ultimately responsible for that mistake, and if it's really important, you just can't allow that to happen. Now, the best way to do that is to actually explain your thinking, the why. It's easy to shortcut when you get busy explaining why's of the world, but it's very important to try. When I was at LinkedIn, I had a colleague who's quite, quite talented, but occasionally would get annoyed if I didn't exactly agree with his opinion on something. And so I'd spend a lot of time trying to persuade him of why I was making a decision a certain way. And his wild card, the card he would ultimately call out if I didn't quite persuade him was, he's like, okay, you're the boss. And that meant to me, like, I was burning a lot of social capital. Every time he said that, I knew I was like really creating a thin line. And that ultimately, that was going to backfire if I did that too often. So you want to track the times that you're doing that. An example of this is Square is one of my favorite people in the world, and my second hire, first marketing hire, had this program he wanted to run called Inner Square, which basically allowed people to give out square merchants to give out ten other squares to their call, imagine a food truck outside, put like ten squares on the counter, and people could just grab them. And Kyle had this great idea, this would be an awesome marketing program. Squares would s- spread squares to other people. And, you know, to some extent, the, it was on brand, so it didn't have catastrophic consequences. Each of these ten squares didn't cost that much money, so financially we could afford to do it. But at that time, my ten years of experience said there's just no way this is going to work at a meaningful enough scale to move our metrics enough. And I actually would prefer we not do this. But Kyle was so excited about this that I decided to just let him do it. He learned that actually when you measure this thing, it's not massive. It doesn't create massive value for the company. It did require a fair amount of operational complexity to ship all these squares to people and figure out how to get them squares, etc. But it allowed him to be excited about his job and to learn how to filter future ideas. So it's totally worth letting him make the quote unquote mistake. The next and most, possibly most important thing you do is actually edit the team. So these are the people that you work with. And nobody's going to have a perfect team, and you're certainly not going to start that way. So what I'm going to try to do is maximize the probability for success in editing the team. So I like this idea of barrels and ammunition. So most companies, once they get into hiring mode, as Sam pointed out, you should defer that for a while. But once you do, they just hire a lot of people. And you expect that as you add people, your throughput, your horsepower, your velocity of shipping things is going to increase. Turns out it doesn't work that way. Usually when you hire more engineers, you actually don't get that much more done. You actually sometimes get less done. You hire more designers, you definitely don't get more done. You get less done per day. We can talk about why. But so the reason why is that most people, most great people even, are actually ammunition. But what you need in your company are barrels. And you can only shoot through the number of unique barrels you have. So that's how the velocity of your company improves, is by adding barrels. And then you stock them with ammunition. And then you can do a lot. So if you go from one barrel company, which is mostly how you start, to a two barrel company, suddenly you get twice as many things done per day, per week, per quarter. If you go to three barrels, great. If you go to four barrels, awesome. Barrels are incredibly difficult to find. But when you have them, like give them lots of equity, promote them, take them to dinner every week, because it, they're virtually like irreplaceable. because they're also very culturally specific. So a barrel at one company may not be a barrel at another company, because one of the ways, the definition of a barrel is they can take an idea from conception all the way through shipping and bring people with them. And that's a very culturally specific opportunity, specific skill set rather. So two questions probably are occurring to you is how do you figure out who's a barrel and who's not? One is you start actually with a very small set of responsibilities. It can be fairly trivial. It can be something like I want to reward the engineers that are in my office at 9 o'clock at night, every night, with a nice cold fresh smoothie. This is actually a real example. I was frustrated. Our engineers were working really hard at Square. And, you know, maybe 20% to 30% would stay very late into the evening. And I wanted to sort, we already had served them dinner, but I wanted to give them something cool to reward them. You could think about alcohol, but that's a little complicated. So smoothies were probably a little bit better than the pizza, which drains you of energy. But nobody could get smoothies in my office to show up at 9 o'clock sharp, that were cold, that tasted good, and delivered in the right place so that engineers would find them. You'd think this is simple, but in fact, it took months to get this right. So we had an intern start, and I think on his second day, I was explaining this problem, and he said, well, I'll do it. And I was looking at him like, there's no way. I've seen my office manager fail, my assistant fail, all who were actually pretty good. This all who are actually pretty good. This isn't going to happen. And then, lo and behold, that night they show up on time, cold, delivered the right place. And my first instinct was great, not, not, nothing about the smoothies, but okay, now I can actually give them something more important and consequential and complicated to do. And that's what you actually want to do with every single employee, every single day, is expand the scope of their responsibilities until it breaks. And it will break. Everybody, like I couldn't run the world, like everybody has like some level of complexity that they can handle. And what you want to do is keep expanding it until you see where it breaks, and that's the role that they should stay in, that level of sophistication. But some people will surprise you. There will be people who you don't expect, with different backgrounds, without a lot of experience, that just can handle enormously complicated tasks. And so keep testing that and pushing the envelope. The other signal to look for is once you've hired someone is with an open office, just watch who goes up to other people's desks, particularly people that they don't report to. If people start going to your desk, someone individual employee's desk, and they don't report to them, it's a sign that they believe that that person can help them. ask and they don't report to them, it's a sign that they believe that that person can help them. So if you see that consistently, those are your barrels. Just promote them, give them more opportunity as fast as you can. The other question everybody asks about people is, when do you hire somebody above somebody? And when do you sort of mentor somebody, or when do you need to replace somebody? And the way to, the way to think about this is every company has its own growth rate and every individual has their own growth rate. So some companies that are very successful, let's say LinkedIn. LinkedIn was always a very linear company. It never went like this. So for example, I joined LinkedIn 18 months after we launched and we had only 1.5 million users, which in a social product is a very small number. And when I joined, I was the 27th employee. When I left two and a half years later, we only had 57 employees. In contrast, when I joined Square as the 20th employee, two and a half years later we had like 250, 300 employees. So each company has its own velocity on this curve. And if the company's going like this, you can only keep people in the roles that their own personal learning curve is going like this. On the other hand, if the company's growing like this, anybody whose learning curve is faster than that, you can keep giving them the same role to do. So always track like the individual slope of an employee and the company's growth rate. Now that you have your barrels identified, so you're gonna pick out the people that can really take an idea that you have in the back of your head, scope it out, run with it, make it happen, ship it and it's perfect. Where do you aim these barrels? So I'm going to argue that you really need to spend a lot of time focusing people. This is something I've learned from Peter Thiel actually. He used to insist at PayPal that every single person could only do exactly one thing. And we all rebelled. Every single person in the company rebelled with this idea. Because it's so unnatural, it's so different than every other company, where people want to do multiple things. Especially as you get more senior, you want to, definitely want to do multiple things. And you're, you're like, you feel it's like insulting to be asked to do just one thing. And Peter would enforce this pretty strictly. He'd basically say, I will not talk to you about how great you're doing over here. Like, just shut up, and Peter would run away. And then focus until you conquer this one problem. And the insight behind this is that most people will solve problems that they understand how to solve. Roughly speaking, they will solve B-plus problems instead of A-plus problems. A-plus problems are high-impact problems for your company, but they're difficult. You don't wake up in the morning with a solution, so you tend to procrastinate them. So imagine you wake up in the morning and you create a list of things to do today. There's usually the A plus one on the top of the list, but you never get around to it. And so you solve the second and third, and have over an entire company of hundreds of people that just cas add value, but you never really create that breakthrough idea because no one is spending 100% of their time banging their head against a wall every day until they solve it. So I highly recommend some version of that. You can be less stringent, you can be like, you can get three things to work on, but I would still track at least the concept of what would happen if you only gave everybody one thing to prioritize. Now, because you can't make decisions, you don't want to be making all these decisions yourself. You have to create tools that enable people to make decisions at the same level, ideally, of fidelity that you would make them yourself. So how do you create scale and leverage? First thing I'd recommend is building a dashboard. This is an old square dashboard. It actually looks pretty presentable even today. The construct of a dashboard, first of all, should be drafted by the founder. You need to basically simplify the value proposition in the company's metrics for success on a whiteboard. You can have other people build the dashboard. I don't actually care about that. But you need to draw it out. Like what does business success look to us and what are the key inputs to those? And then have someone create something that is very intuitive for every single person in the company, including customer support, to use. And then the key metric of whether you've succeeded is what fraction of your employees use that dashboard every day. If it's actually useful, it should be close to 100%. It's not going to be probably 100%, but you want to measure that. Just like you have quality scores for all your other KPIs with users, the dashboard needs to be as intuitive as it is, as your product is for users. Other things, wait, hold on. Yeah, let's go back one second. Another concept is transparency, and people will often, that's weird. We'll fix it. Okay. Transparency people talk a lot about. It's kind of a goal that everybody ascribes to. But when push comes to shove, very few people actually adhere to it. So let me, let me walk through a little bit of transparency and different stages of transparency. Metrics are the first step. So everybody in your company absolutely should have access to every single thing that's going on. Other things that I like to do are take your board decks, and as you get more formal, the board decks will get more complicated. And actually review every single slide with every single employee after the board meeting. You can strip out the compensation information if you really want to. But every other slide you should go through with the entire employee base and explain it. And if you can remember to, but every other slide you should go through with the entire employee base and explain it. And if you can remember some of the feedback you got from your board, that's really cool to pass on. Another thing we did at Square as your company scales, everybody's not going to get invited to every meeting, but they're going to want to go to every meeting. The way you scale that is you create notes for every meeting and you send it to the entire company. So we created a notes at alias for every single meeting involving more than two people. Someone would write notes and send it to the entire company. So people felt like as the company added employees, they could continue to monitor and track what was interesting, what was going on. And they never felt excluded, hopefully. The other thing is like even like details around conference rooms. Every conference room at Square has glass walls. Because as soon as you have regular walls, people wonder what's going on. It's amazing, like if they can see who's actually in the meeting and who's meeting with who when, they don't start, they don't worry nearly as much as what's going on behind those closed doors. Stripe, you may have seen a blog post, but I think Patrick wrote it, um, about email transparency, about actually allowing everybody to have access to email. That's pretty far out there, but it's actually got interesting, you know, certain merits to it. I would all call the tactics that you read about and hear about as sort of minimal viable transparency. I actually think you could push the envelope a lot more. Steve Jobs tried this at Next. He actually tried transparent compensation. I actually think, although Next didn't do extremely well, it wasn't the, the real reason wasn't because of the experiment around compensation transparency, and that there's a lot of merit to that. And, you know, the critique of like compensation transparency is often, well, we want people to be teammates and work together and collaborate. And if you look in the sports world though, where people are actually teammates and they do have to collaborate, all of their compensation is completely public. In fact, each of us can look up anybody's compensation in the sports world and get it exactly accurate. And somehow it seems to work. So I'm not totally bought into the idea that you need to keep compensation non-transparent. Then finally, metrics. So you want to measure things. You want to measure outputs, not inputs. And again, you should dictate this yourself. You should draft the dashboard to tie this all together. One important concept or what are known as pairing metrics or pairing indicators, which is if you measure one thing and only one thing, the company tends to optimize to that. And often at the expense of something else that's important. A classic example in payments and financial services is around risk. It's really easy to give the risk team the objective and say, we want to lower our fraud rate. It sounds great. Until they start treating every single user in this audience as a suspect user because they want to lower their fraud rate. So they require each of you to call them up on the phone and give them more supplemental information and fax in things. And you have the lowest fraud rate in the world, you also have the worst, you know, sort of customer satisfaction score. So what you want to measure at the same time as your fraud rate is your false positive rate. That forces the team to actually innovate. Similarly, you can give recruiters metrics around hiring. And guess what? You'll have a lot of people coming through interviews. But if you're not tracking the quality of hires, you may be very unhappy with the quality of people you're interviewing or the people you're giving offers to. So you always want to create the opposite as an indication and measure both, and the people who are responsible for that team need to be measured on both. Finally, around metrics, one insight I've had over my career is what you, you kind of want to look for the anomalies. You don't actually want to look for the expected behavior. So the, a famous example was at PayPal. None of the top ten markets that the company was planning to go after included eBay. But one day someone noticed that 54 power sellers had actually handwritten into their eBay listings, please pay me with PayPal. And brought this to the attention of the, the executive team at the time. The first reaction of the executive team was what the hell's going on? Let's kick them out of the system. That's not our focus. Fortunately, I, I think David Sachs came back the next day and said I think we found our market. Let's actually build tools for these power sellers. Instead of forcing them to write into their listing, pay me with PayPal, why don't we have an HTML button that they can just insert? Well, that started to work. And then he said, well, actually, why don't we make them insert it? Why, why should we make them insert it all the time? Why don't we just auto-magically insert it for them? So they can insert it once, I, I was at LinkedIn, and I saw this stat that made no sense to me. The UI of the site was a little bit different back then, but 25% of all clicks, maybe 30% of all clicks from the homepage were people going to their own profile. And that made no sense whatsoever. I mean, like the, it was the settings, like you had to literally go to the right margin, find a link. And it was 25 to 30% of every single click at scale. I mean, so this is like statistically valid stuff. And it made no sense whatsoever. Never, never seen like a UI perform that way. And I, I, I kind of went around for weeks trying to figure this out. And then someone very smart, actually it was Max Levchin, said something to me and I was like, he's like, it's vanity. And I'm like, aha. People are looking at themselves in the mirror. That's a pretty good answer. So, because they weren't editing their profile, nobody has like something to edit every day in their profile, but they actually were just looking at themselves in the mirror every day because it made them feel good. And then you could actually test that hypothesis and say, well, if I have more content, do I look at myself in the mirror more often? Turns out you did. So we actually figured out what was actually underneath the utilitarian product that the product team thought they were building was actually a lot of emotional vanity. It didn't exactly translate it to the best possible feature like the PayPal example, which you couldn't easily put a button that said be more vain today on the homepage. That would probably not work perfectly. So it never really took off the way the PayPal example did. But it really clarified what the user, what users of the product really wanted. And we wouldn't have found that without looking for anomalous data. The final topic I want to talk about is details. And there's in my assigned reading there's a great book I really like by Bill Walsh called The Score Takes Care of Itself. And the basic point of the book is that if you get all the details right, you don't worry about how to build a billion dollar business, how to have a hundred million dollars of revenue, how to have a billion users. That's a byproduct of getting all the details of what you do every day to be excellent. So the example he talks about in the book that really resonated with me was, he took over the 49ers in 1979. They were the worst team in football. I believe they were two and 14 the year before, which is really bad for those of you who don't know football. In the next ten years, he managed to transform the team into the NFL's best, won three Super Bowls. And what's the first thing he did to start going from a terrible team to the best team ever in many ways? He actually taught the receptionist how to answer the phone properly. He wrote a three-page memo about how to actually answer the phone. Now, that may sound absurd, but his point was if the organization as a whole does everything exactly the right way, then receivers, for example, will start running their routes at seven and a half yards, not seven yards, not eight yards, and that actually will matter. And if everybody on the team executes exactly up to the same standard of performance, you will have a, organization that is performing at the highest possible level, and then with enough random variation, the highest possible performance team will do the high, the best. So, the way you translate this to a company are to a lot of details that may not matter. They may not seem that they matter superficially. Most people would agree that the details matter when it, when it faces the user. But where the real debate is on things that don't face the user. So Steve Jobs famously in the Mac insisted upon an immaculate circuit design board. You can read about this in various books. The Mac, for those of you who don't remember the Mac, probably everybody here, but some of you may have seen it, actually couldn't be opened. So the circuit board design couldn't be seen by any single person in the world. There was no way to open the Mac except the people who worked at Apple, and Steve insisted that it be absolutely perfect and beautiful. That's the kind of detail obsession that this sort of philosophy of building a company requires. Examples that may be more practical for you instead of circuit boards are things like what food do you serve people? It actually matters more than you might guess. When people don't like the food you serve them, what do they do? They go gossip. They go complain to their friends. They go walk over to someone's desk. And all of a sudden at lunch, what they're complaining about is, they're mostly spending time gossiping and complaining instead of brainstorming. So you don't have this serendipitous like idea, matching another serendipitous idea that creates a spark. Instead, they're all wandering and willowing around. So the best thing you can do is actually give people the food they want, or food that's good for them, that makes them more productive. So it may seem a lot like this glorious job you thought you have is actually more like running around being a task rabbit for people. But it's to, to take the things off their plate that are a distraction, so that they can be high performance machines. And if you take enough things away from people that distract them and give them the tools to be successful, all of a sudden, your organization produces a lot more. Similarly, another example that's often got wrong is office space. So one natural instinct is when you need an office, you just have an office manager or someone on your team go out and find offices. And they'll go on tours with agents and they'll come back with photos and ideas. You need to do that yourself. The office environment that people live in and work in every day dictates your culture and how people make decisions. It dictates how hard people work. There's almost no important more decision other than what company you're going to be, then what's the office environment you're actually in? And most people don't do that. And then the final thing, and then I'll take some questions, is around effort. Ultimately, I don't believe that you can build a company without a lot of effort, and that you need to lead by example. So Bill Walsh, the first chapter of his book is, gets asked this question of how do you know whether you're doing your job? And this is the answer he gives coaches that used to ask him that question. So if this is what you feel like every day, you're probably on the right track. And if that doesn't sound appetizing, you probably shouldn't start a company, truthfully. All right, with that, I'm done with the prepared part. Let me see if anybody has questions that I can try to be helpful with. Any questions? Yes? So you talked about making compensation transparent. How would you do that, especially when people equate themselves to the values of how much the salary is? I would do it in probably bands. You could do it either just everybody in the company gets paid the same, or you could have like all discipline, all engineers, or you could do it by experience, like extreme, the way Steve did it actually at Next was there was a high band and a low band. And you either had a lot of experience or low experience, and that was it. So low band back then, you know, now it would probably be like $85,000, kind of everybody just flatly gets paid $85,000. And if you're super experienced, everybody gets paid like $130,000. And that's just it. Like it's sort of the Next translated for inflation. . . You'd be amazed. Well, yeah, so the question was besides food, what other kind of details do people care about? The laptops they use, I mean, this is now the default that everybody has. But five years ago, it was a benefit to give people high quality machines, as opposed to optimizing our costs and having dull machines and ugly monitors, just as an example. So if you think about all these people that are relentlessly resourceful, incredibly talented in a massively competitive ecosystem competing for talent, you want to give people the best possible tools to do the best possible job, and so rigorously thinking through, how do I make people more successful? What things do they not need to be working on that are distracting? And what things can I actually give them that make them more valuable per day? And then just break that down every day and solve that stuff yourself. So when you're in a startup environment, how do you optimize for those things? Because, you know, resources are scarce and. It's a good, it's a good question. I actually think that you should start, first of all, you must have your own office. I don't believe ever in shared office spaces. Peter talks a little bit about this, that every startup, every good startup is a cult. And it's really hard to create a cult if you're sharing space with people. Because a cult means that you think you're better than everybody else in the world, that you have a special way of doing things that's different than everybody else in the world. And if you're sharing physical So I, I would start there. But it is a prioritization question that when we have, every, every company has scarce resources. Just a question of magnitude, like how many zeros are you paying attention to? You know, probably not $10 expenditures, but $100, then $1,000, then $10,000, then $1 million, then $10 million, starts being your rounding error. So what I would do is figure out like what's most important in a, a high quality office that creates a good vibe that allows you to recruit people, because recruits are very savvy about this. They walk into your office and they can tell a lot about the culture instantly. I sometimes, I walk into a company office and I can tell often whether I'm going to invest as soon as I walk in. Like I can absolutely rule things out that I just don't want to invest in as soon as I walk in. And there's times I walk in the office and it Office is like, wow, this is really impressive. You can tell how people work together, how hard they're working, how distracted they are. Roloff Boatad made a point to me about YouTube. So when I invested in YouTube at the very, very beginning, it wasn't obviously going to be successful. And then Roloff led the series A investment for Sequoia and YouTube, and we were on a board meeting together. And he said, you know, I think YouTube's really gonna work. And I said, why? And he said, well, every time I go to one of my portfolio companies, half the office is watching YouTube at lunch. And I was like, pretty good sign. So like, you pick up on these little things and you can predict a lot. Thank you. Yeah. What do you think is the best way to gain street cred for a new manager? Oh boy. Yeah, so the question is, how's the best way to gain street cred for a new manager? Almost all good managers in Silicon Valley are promoted because of their individual performance. In cultures that are meritocratic, you know, the percentage is even higher. So we tried at PayPal to only promote people that were basically kicking ass at their discipline. So Peter didn't believe in general managers. In fact, I remember going for a jog around campus with him my first week at PayPal, and he was asking me, you know, how things going, usual kind of CEO questions. And then we got into this debate about whether the company needed any managers. And he's like, nope, no managers. We're only going to promote people. So the VP of engineering is going to be the single best engineer. The VP of engineering is going to be the single best engineer. The VP of design is going to be the single best designer. The VP of product is going to be the single best product person. And they're going to learn to manage later. And the advantage of that is you don't demoralize people. Because everybody knows that their boss actually is better at their job than they are. And they can learn stuff. And you can learn a little bit of the management techniques later, as opposed to promoting people who are just good people managers that don't actually have the discipline and skill, and that does demoralize people. So I think just being excellent at something and then getting excellent at getting a bunch of people to do something is the next task. But people, you just have to learn some things you have to learn by doing. You can't learn to play the guitar by reading a book. You've actually got to try to manage a bit, and you won't do it well. I have another sort of set of tactics and classes on what you actually do when you transition from a manager, individual contributor to manager, and it's hard. One of the first things people don't get right is their time allocation. And so actually I would recommend doing what I call a calendar audit, and tracking for a month what do you spend your time on and how much is managing and editing, how much is writing, etc. And then optimize it over time. You can get a mentor. Find somebody who's been a manager before that will work with you, not your boss, because your boss has a set of complicated objectives, including how much are we shipping. A mentor can just focus on you and making you more successful. Could you give some more examples of things you can do to ensure a consistent voice of the company, especially when the company is growing? Yeah. So I would look at every piece of copy in every department. So like another area that almost never is done, so look at your recruiting website. Almost never done to the same quality as your conversion funnel. I'd look at customer support, another classic area that isn't up to the same quality and treat customer support like a product so that you actually have an engineering team and a design team over time that actually focuses on making that world class. Usually where you have different executives at a scaled company, most executives were trained differently at different companies and they bring some of that with them. So you've got to cross train that. So if you've hired a VP of engineering from Google, it's very different than a design leader came from Apple. They don't actually learn how to do anything the same way. So you're going to have to stitch that together somehow. Either one or the other is going to have to learn in the other style, or you're going to have to create your own style and really teach that to your executives. So it shows up All you do, all you need to do is just pick up the company's products and look for things that have a different voice. And you can see it, visual voice, word choice, all, all over the map. Sam? Could you talk a little about the tactics of how you manage people? Like how often do you meet with them? Are you given calls often? Do you talk through the email? So the canonical advice, and this now sounds obvious, but actually was pretty radical in 1982 when Andy Grof wrote his book is, you should have a one on one roughly every two weeks. Some people say every week and I don't think you want to go longer than two weeks. One week can be ideal actually in many companies. The reason why in fact there's another adage which is you should only have five to seven direct reports. That actually derives from the concept of a one on one every week. So that the direct reports, so that you can fit enough one-on-ones in your calendar and still get other things done. So I think one-on-ones per week are a good idea. The agenda should be crafted by the employee who reports to the manager, not the manager. The one-on-one is mostly for the benefit of the employee. So they should walk in with, here's the three or four things I want to talk about. Ideally, they circulate that. It can be even bullet points in advance by email. But in advance, you have time to chew on it, and you're not on the fly winging your responses. But that's probably the best structure. Now, if someone's really good and really talented and has been doing something for a long time with a lot of internal credibility, you might push out the one every week and relax that to one every two weeks, possibly once a month. I don't know that I would go beyond once a month ever. When is it acceptable to compromise and hire someone who's ammunition rather than a barrel? Yeah, so the question is when, when do you compromise and hire more ammunition instead of a barrel? Truthfully, you're going to hire more ammunitions by, by definition than you are barrels. So there's a ratio between the two. The question is the ratio. So at some point the ratio is gonna get out of whack. So if you're the only barrel in the company and you have 50 engineers, you might as well only have 10 engineers, cuz you're not gonna get any more done. So you're just wasting resources. You're gonna frustrate engineers, cuz everybody's gonna need your approval, your sign off, your editing. It's just gonna stack and frustrate people. So it's really, now different disciplines, engineering, like I actually think like roughly one to ten to twenty is probably about the right range. Like you don't, you don't need, you don't need more engineers until you have more barrels. Designer's a little different, but it does, it's always going to be hiring more ammunitions. And they, a good leader, a good barrel will kind of have a feel for that. So one way to, one way to correct for this. Natural tendency is to increase your head count on your team. Like sort of an empire building tendency. Like, oh, so I manage 20 people and Sam only manages 10. And you manage three, so I'm more important than Sam and you're more important than you. One way to do that is you put an x here of the number of people that, the output, sorry. Spec specify how, how many things they've done successfully, then divide by the number of people on their team. And tell them that this is gonna be their grade and their performance review. Shockingly, this Y doesn't start increasing on that team. It's amazing how this works. And be really explicit about it. How often you intervene with the support of other companies and what's your ? So how often do I meet with them? Yeah, how you intervene. So the question is, as a venture capitalist, So for the broader company and what's your ability to come back? So how often do I meet with them? Yeah, how you. So the question is, as a venture capitalist, how often do I interact with my companies, meet with them? Generally when we invest in, we do do some seed investments where we invest less money, but when we invest a fair amount of money and lead a round, like a series A or series B round, we join the board and roughly I meet with the founder CEO every two weeks. That's the default. Now there can be, obviously there's reflection moments and things go right, go well or wrong. And that, you know, that's on an ad hoc basis. These days actually, surprisingly, I do a lot by text message. I even have one CEO who Snapchats me all the time. I'd actually rather not, but the world, the world has changed a lot. But I try in-person meetings every two weeks. But you don't internet, it's the operation, right? No. I mean, really, it's like, being a venture capitalist is more to me, like being a psychologist. So if you come to my office, you'll see, actually, we have two chairs kind of arrayed like know, and then it's like a question. It's like so have you, and then, and then my response is usually well, have you thought about this, have you talked to this person, have you tried this, etc. And it's just asking a lot of questions and going back that way. But that's 90% of what I do. So I see, you know, when you, when you've a startup company, you've got two really good engineers, and you're working on this product. I've heard that you should always do recruiting. Yes. How do you balance that? Well, it depends on where your prioritizations are. So, Sam talked a little bit about this in his lecture, but every company will move recruiting first, second, or third somewhere in that sort of spectrum. If it's your number one priority, then about 25% is probably a pretty good allocation. Actually, I like the calendar audit for CEOs even more so than for new managers. So when I work with CEOs, sometimes who aren't thriving in that role for the first time, I actually force them to show me their calendar. And before I do that, and now I'm going to ruin this trick because I'm going to tell it to you. I actually ask them to rank their priorities, write them down on a piece of paper. And, you know, just specify whatever they are. Then we go pull up their calendar and see if it matches. And it never matches. Like never. Like recruiting is the one that's most often awry. So, you know, let's say half the CEOs you meet with will say recruiting is the number one priority biggest block of time on anybody's calendar. And so that's what you're trying to do is match resources and inputs against priorities and a calendar audit. Unfortunately there's no software that does this really well. It would be great, like actually we literally pull up someone's Google calendar and kind of manually add up the hours which is somewhat insane. But that's, that's the best way is just what are your priorities? If your priorities are raising money, you don't want to allocate 100% of your time to recruiting. You want to allocate a fair amount of your time to raising money for that block of time until you're successful at it. How about one more question? One more question. Anybody, okay, go ahead. On the surface, some of this advice seems contradictory because you've emphasized focusing on A plus tasks and delegating less important things. But then you've said it's good to write like a three page script for your receptionist and focus on all the details. How do you harmonize those goals? It's a good question. I think the way to harmonize, the question is really how do you harmonize things like where details can really matter, but you only get one thing, you know, to do and you've got to allocate to the top one, two or three things. How do you, how do you put those two things together? And actually there is some tension, and even in a healthy organization, there's some tension of like why are we actually focused on, you know, writing the script as opposed to something a user may see. I think the underlying philosophy of getting the details right is pretty important to install in the very, very, very beginning of a company. Because people will start acting that way and making decisions that way themselves. So you won't have to actually literally do that. And if you have to do that, it actually shows that the foundation isn't actually that solid. So when you first start the company, it's about getting the details right, that everybody is precise, everybody on every task is always thinking that way. And then that scales, and then the people you bring in, it's a little self fulfilling. People who can think that way will tend to get hired. People who can't won't get hired. Each team and each leader will tend to enforce that themselves. So CEOs almost never doing it. So it's partially like how do you start. And then cultures like that, I mean, the key to culture is it's a rule, it's a framework for making decisions. And if you have a culture baked, people learn how to make decisions across that culture and and you're never saying anything. You never have to really do anything except just, yeah, watch and, you know, and promote and move people around. Cool. Well, I guess that's it. Thank you. Thank you. you