 Okay, we're live. Hi, my name is Eric. I'm the course facilitator at Startup School. Hi, I'm Michael. I'm a partner at Y Combinator and helper. Yeah, our volunteer today to help answer your questions. So thanks very much for joining in. We've got a bunch of questions that people asked about MVPs on the forum. We're planning to spend a couple minutes just answering each one and really trying to dive in and give some advice tailored specifically to the startup. So let's just do it. First question from Luke at Zephyrus. Zephyrus is an analytics platform for competitive gamers that provides users with game-specific tools and data to help analyze, track, and improve their performance. Well, let's start with the one-liner. I thought it was pretty clear. I kind of knew what it was. I'm from the space. It's not the sexiest one-liner in the world, but it definitely accomplished the goal of me having a good picture of what it does. Like I'm nodding my head and I understand where this is going. That's like an A- for sure. Yeah. Currently is focused on StarCraft 2. Awesome. Consumers expect more than a scrappy MVP if there are existing products in the space. Do you have advice for MVPs entering the space with the existing developed competitors? So I thought that was the funny bit because I felt like the first sentence in that should have been the paragraph. Do consumers expect more than a scrappy MVP if there are other existing products? I know, I was wondering that as well. That's the question. And the answer is hopefully no. Because as a startup, your ability to build more than a scrappy MVP is very challenging. I would say that if I go back to the Justin TV days, if you can find a small population of people that have enough of a problem that the other folks aren't solving, that they're willing to use something that's pretty bad, that's a very good sign. If the only way you can find any group of users, even 10, even 100 who love you, is if they have a very polished product, that's not a good sign. That's actually a good sign that the other folks are doing a really good job. Yeah, that the product's working. Yeah. One of the hacks that I like to use at this stage is to actually layer the MVP onto the existing product. So, for example, if there's already some software that your users, not your users, like the people in the community are already using to track their competitive StarCraft 2 analysis, what you could consider doing is actually like building, say, like a Chrome extension that sits on top of the other products and just overlays the extra data because you're really like the goal of any good MVP is to test your hypothesis. Is what you're making like important enough for people to care about? Like will they actually care that you're building it? And so you want to do that with like the least amount of effort. And if there's already existing good products,, it's possible that you may find the users of those products pretty easily and you can build that little bit that's special to you. There you go. Yeah. Number two. Cool. Next up is from Plummen at Flatro. We're Flatro. We automate billing, customer care, and maintenance for property managers. Okay. The only thing that's confusing to me is that I thought that property managers do billing, customer care, and maintenance. So are you replacing property managers? Is it software for property managers? Yeah. Or is it like the billing of property managers? Yeah. So maybe a bit of clarification, like maybe a bit like, I would probably just start off by we make software for property managers. We help them automate billing, customer care, and maintenance of their properties. Something, yeah. If it's a tool that property managers are using to be more efficient, then that should be more clear in the upfront. And maybe even speaking to how much more efficient. Does that mean a typical property manager can go from managing one property to five or from five to 15? Yeah, like what's the value prop that you're offering to them? Yeah. I'm not a property manager. Me neither. I don't get it right off the, I mean, like I can't visualize the pain. Though I'm sure there is brain tears. We are currently starting with a few clients and are basically tailoring our service to them. Cool. How do we avoid the trap of making our service too specific and how do we balance between the requirements of a few clients with the need to build a platform that is more universal? So I kind of think that like when I see a startup like this, I really have this basic question, which is, are you going into this space with knowledge of the space? Like were you a previous property manager? If so, you should have a lot of insights on the types of problems that are general that can be applied across the industry. And so you should have a lot of insights on what your initial product should be. Step A. Step B, if you're coming into this with little personal experience, you think there's an opportunity here, but you kind of don't know what it is, I don't know any, this is your problem. And, like, I don't know a clever way of avoiding it. Just learning the business means you're going to be building a lot of features that probably are not generally applicable, and that's the cost of learning about this business. So in my mind, like, if you already know about the business, use your gut. If someone asks you to build something that, like, your experience tells you is not general, great. Don't do it. If not, consider the first five customers as you just getting an education on the industry, and it might be a very expensive one. That's fine. For the case of someone who's coming into the industry that they're not already a participant of, some of the best founders that I've seen, they just immerse themselves in it. Like, for example, they may actually become a property manager. Like, they may volunteer or they just, like, go and say, I'm going to help you run your business for, like, a week or two. I think like... That would be great. Yeah. Even if, I mean, if you are a property manager yourself, you don't necessarily have to do that because hopefully that's why you're starting this company. That seems like an even better offer than giving them software. Be like, hey, I'll just do some of your work for you so I can learn. One of the things that I learned from kind of like to this question of like, how do you prioritize features? I always like try to, as I'm doing user interviews or talking to initial users, I really try to find pain points that people are already trying to solve. So for example, like if you're talking to property managers and they're totally comfortable doing all the books by themselves, like they just have like their weekly like hour that they spend doing all this, that might not actually be the right place to start with. Maybe you could start with like are they actively experimenting and trying other tools? Have they tried like a competitor product? Those are usually the problems that I like to start with because the person's already trying to find a solution. So they're primed when you come to talk to them to be excited and to try it versus you having to pitch them hard and changing their entire business workflow or whatever. Yeah, I think we see the opposite a lot where somebody says, if something's being undone on paper, there is a business in putting it into the computer. And by nature of the fact that it's being done on paper, you could build a billion-dollar company and bring it to the computer. And that's actually not true. There are some things that are done on paper that are not broken. That's the build it and it'll come. Yeah. It really works. All right, what's next? How do you know this one? Oh, yeah. That's a good one. Okay. We're answering a question from Sky, who has started Fridgeworthy. Well, let's see what Fridgeworthy we use first. There we go. Maybe we'll be your initial users. Okay. Fridgeworthy, a social network where people share their accomplishments. Cool? Sounds good for Ivy Leaguers. Like, you mean like LinkedIn? People are using LinkedIn more as a social network. Yeah, that's crazy. Fridgeworthy. Oh, there's just an urban. I'm trying to see if there's like a website. No website yet. Okay. Okay. How do you launch an MVP of user-generated content platform? If I make an MVP with minimal content, users will probably leave since there's not too much to consume. So the classic answer to this is, one, does your platform have a lot of replay value? Is there any reason why I should come back daily or weekly? I think that that's a really important question to ask because even if you get a lot of people, if there's no reason for them to come back, it weekly? I think that that's a really important question to ask, because even if you get a lot of people, if there's no reason for them to come back, it doesn't really matter. I think, too, is there a smaller community that if that community was using the product, they would find it useful, even if others weren't? The classic, I guess now old example of this was Facebook at Harvard. Like, as long as the Harvard kids were using it or even a class, even just one of the grades in Harvard was using the product, it was useful. And so therefore they didn't need to have millions of users day one. Literally users on the order of like a couple thousand was very useful. So the way that I'd be thinking about this question is one, how frequent do I get value out of it? If it's not that frequent, is there any value I'm creating? Two, is there a smaller population of people who can find this useful, even if all their friends aren't using it? And those people might use it, like have the problem or whatever on a more regular basis. So they'll be like participating more. So start with like a focused smaller group. I think there's always, you know, tricks of the trade, like generate them yourself. A lot of the best user-generated content networks, like 9GAG, which is now this, like, massive meme website, was started by, like, scraping memes from other sites. Like, that's not, that shouldn't be something too crazy to think about. Reddit, same story in the early days. Exact same story. So, like, in this case, if you're talking, like, if you're building a network for people sharing their accomplishments, you could look to where people are already sharing this and like prime prime it by grabbing the accomplishments. Like for example, if someone's tweet like if you're trying to like get someone who's already on Twitter onto your platform, you could potentially like go through each person's Twitter account and scrape their the things that they're proud of. CrunchPage is actually an interesting example of this. Before people cared about their CrunchPage profile, TechCrunch just built the profiles on CrunchPage. Yeah, with media reports and everything. With media reports and so on and so forth. And then after a while, people cared about their profile, and so they tried to keep it updated. And when I'm thinking more about this problem, it's true. We're on GitHub. We're on Dribbble. There's all these different platforms that people may participate in. So that's a service right there, not having to generate your own page. Yeah. Cool. Next up. Dennis at Swish Technologies. We're building self-driving cars for ride-sharing in retirement communities and for schools in the U.S. Okay, so I'm imagining like club cars or whatever. Gotcha. Please share some of your advice for founders like us with a product that can take a very long time to launch. How do we get users even before we launch? How can we generate sales even before we launch? So I deal with a lot of companies like this. You've seen a lot of this. I'm currently helping like 20 bio companies that are all working their way through the FDA process. And we've also funded a lot of supersonic aircraft companies that will probably take a little while to launch. So this is like, this is totally. And self-driving car companies. In fact, probably we funded this exact idea. Yeah. So there's a couple different ways that you can go with this. I'd say that in areas where there's the possibility for harm or there's safety concerns, you have to be extremely careful about what you consider an MVP in any way that can actively harm somebody. So that having been said, we have had companies test smaller versions of what they're like, smaller versions of their larger vision with kind of off the shelf technology. Some of the best hardware companies that I've worked with, even though they now make their own hardware and they build a bunch of custom stuff, they started by using off-the-shelf systems like Raspberry Pis, cameras, just existing technology and put them together in interesting kind of novel ways. So in this case, there is now more and more kind of off-the-shelf tech that you could use to craft together a rudimentary self-driving car. I think for getting back to why we work on MVPs, one reason we do is to actually validate that people want this. The second reason we work on MVPs is to demonstrate that we as founders have the skills and capabilities to kind of take the problem from just an idea to an actual implementation, even if that implementation is not the long vision of this. So in this case, it's very easy to have the idea to say, I want to build a self-driving car or something like that. But there's a huge gap. There's a huge discrete bump between people who have the idea for a self-driving car and people who have built something that resembles it. So in this case, building something that demonstrates your capability could separate you dramatically from the pack. So we've had companies that are now off building like Embark which builds self-driving trucks like literally they're running on the streets and the highways in Nevada. They started with a club car. I think like at Demo Day they had a golf cart that they rigged up with like six cameras. I don't even know if it was autonomous. It might have just been remotely driven or something like that. There's a great comic on how to build an MVP and it literally is someone building a car, but the first step is building like a skateboard and then you build a bicycle and then you build a car. So you can apply the same logic here, that if you're trying to figure out how to build something that's autonomous that works in these communities, maybe you start with an autonomous wheelchair. Like you just create, or one of those personal Hoover things, right? You start with that. And it still kind of accomplishes the overall goal of making something that's for retirement communities, for example, but much safer, much cheaper. That actually sounds like kind of a cool idea. Maybe it's a good one, overall. A couple other parts of this question. How do we generate sales before we launch? I actually think that that is...sales are hard. Generating letters of intent or agreements to pilot shouldn't be very hard if there's a lot of demand for this sort of thing. So being able just to get your customer to sign anything, even if it doesn't have a price on it, is evidence that you can sell to an investor and is often seen as more valuable than not having it. So some other things that people have done in this way is if your plan is to sell cars, maybe the first thing you do is you sell the service. So you don't have autonomous self-driving cars yet, but you do have yourself. So what if you ran a car sharing service in this retirement community to start? That would demonstrate to people that there are people who want to use smartphones to request cars and that kind of thing. And you could literally get started tomorrow doing that potentially. All right. What's next? We've got Ethan at Volley. We're Volley. We facilitate the servicing of users' vehicles so they do not need to leave the home or office. Servicing, that seems like an awkward way of saying we're a car mechanic that comes anywhere you are. I think this is a perfect example of the description requiring examples, because servicing does not put a picture in my head, as opposed to refueling, changing the tires, doing an annual checkup. All those things create pictures in my head as opposed to refueling, changing the tires, doing an annual checkup. All those things create pictures in my head. And also there's probably something that you're starting with. I imagine that you're not like servicing every end-to-end thing in the car to start. So some of the best pitches, like Michael said, they cause you to like visualize what the service does. But here's actually a problem that a lot of founders run into is they think that their one-liner or their short description has to encompass everything that they'll ever do under the ends of the earth because they think that investors only will get excited by these big dreams. But in reality, we're actually just trying to understand what your company is so that we could talk about something else. And so your description doesn't need to be this all-encompassing future vision. It's just like, we want to find out what you do quickly so that we can get to the next step. What do you want to do today as well? If you tell us what you want to do today, it's a lot easier to tell us what your vision is. So what's the question? My question is regards to a quick launch with a lean MVP. How do you launch fast while getting all of the legal taken care of to protect from liability? So, Ethan, the first question I would ask you before you even think about this is, have you studied every startup that has failed trying to do this idea? And do you understand why? If not, you are doomed to repeat their failure. So... You could start by looking in the YC database. We have funded this. So I really think that the real number one question is, do you understand something that everyone else doesn't know about this space? The other thing that I think is tricky is that, like, the population that has the most problem with their cars tends to also be the population that is extremely price sensitive about fixing their cars. And so make sure that you have some insight on how you can be offering the cheapest option. Because if you're, the kind of issue here is a lot of people like to go with luxury and high price first. But the problem is like you're solving my car breaking, which is way less common if I bought it a year ago. And so make sure that you're actually lining this up so you actually have a product that can have demand. So yeah, like to me there's some fundamental things you wanna make sure you knock out here. We've seen this idea die a number of times. We've seen it in every location as well. We have like. Yes, oh yes, we've seen it in other countries as well, yes. Let's see. In terms of the liability question, you've got to be extremely careful, especially when you're dealing with large, expensive items that people care about. The way that I like to think about this is trust your gut. You're usually not going to try to put yourself in a position where you're taking too much risk naturally. So like listen, listen to, listen to yourself and listen to other people when they, when they, when they kind of bring up problems that you, that they think you might encounter. All right. Okay. This one's okay. Can you pronounce that one? No. Are we doing high five? Are we doing, oh. Bien. Bien. Stop Can you pronounce that one? No. Are we doing high five? Are we doing, oh. Been. Been a stop. Been a stop. Lewis. Lewis. Okay, Lewis. We're been a stop. We build a home wellness service and products marketplace for people's wellness objectives. Okay. No idea. I don't really know what they do. Home wellness, I'm like thinking of Home Gym. I'm telling you, I don't even want to stretch my mind to try to figure out what this is. Because it's so much jargon. It is a unique name. Let's see. Let's see if the website has anything more. Oh, Binnest App. Should have figured that out. Oh. No, is it BNS app? BNS app. Okay. Services for your well-being at home. What kind of services? What kind of services? Request. Oh, exercise, dance, meditation, sports. When you say, like, yeah, like, your description on your front page is much better than your description to us. So, okay. back to the question. Great. Should we launch our MVP for free or is it better to charge people? Let's be clear. You have a service where you're actually like there is real cost, meaning like your service is helping someone exercise. There is cost to sending someone to that place. There's cost to recruiting them. There's a cost to their time. In any situation where you actually have real cost, you should be charging from day one. In a pure software play where you don't have any costs, maybe consider something that's freemium, but like you don't want to anchor, like the number one thing with these marketplaces that are actually moving humans around is that if you get into a situation where you're providing a dollar worth of value and you're only getting 75 cents back, you're going to get a lot of demand, but you're going to lose a lot of money. And when you actually equalize the demand and the price, you'll lose a lot of customers. Especially for something like this, where it's an existing service that people are already buying from other vendors. So you kind of don't need to validate that people want to have yoga classes or people want to have dance classes. What you want to validate is do they want to have them at their home? That's the thing that's kind of new and I think unique about this. So definitely charge for it. Yeah, my instinct is charge a lot. Charge more than you might feel comfortable so you can identify the people who are most desperate for it. Here's your crazy idea. Charge more than the existing solutions. Because, like, when I think about it, if I'm like, I want to have a private yoga class, that's expensive. I would have to schlep out to go to the studio. And I'm having it at home. Yeah. I mean, and that would actually charging more, it sounds a little bit weird, but it would like force, it would really force the question of like, are you building something that people really want? You would get an answer really quickly. If you were charging more than like the neighborhood yoga studio and people are still coming to you, then you're really onto something. If like you're constantly having to cut the price and run discounts and stuff like that, maybe they're only coming to you because it's slightly cheaper than the alternative. There you go. Yeah. Okay, now we're on to High Five. High Five is a local news website that helps you get invited to activities based on topics you enjoy discussing. We help people in their 20s and 30s meet new friends with similar hobbies, humor, and lifestyle. That sounds like two one-liners in one. Or three. Or three. Yeah, so once again, Vlad, something that a lot of people have tried before is both local news and interest-based social networks. And dating. And dating and meeting new people. Yeah. works and dating and dating and meeting new people yeah so like make sure that you're studying those products and you have a strong opinion about why they suck it's going to help you two reasons one it'll help you figure out what to make as a good product and two a very common investor question if you ever want to raise money is like well what about this everyone's always heard of like the other app that they funded they may have funded like five of them yeah and if your answer is like, well, what about this? Everyone's always heard of the other app that they funded. They may have funded like five of them. Yeah. And if your answer is like, oh, I don't know, then instantly you lose credibility. So make sure you're an expert on all of these various things you're covering. But my hunch here is that, Vlad, this might actually be a problem that you're solving for yourself, which is great. Like maybe you just moved to a new city and like you're experiencing this exact problem. So like, or, or yeah, or, or, or your friend has. So like the way that I would start building an MVP is kind of like what we mentioned at the beginning. It's taking what you already do on a regular basis. Like maybe you go to meetups, maybe you like are on Reddit for the subreddit of that, of that city. And like,. And think clearly about what are you doing today and what's the smallest thing that you could do that has an outsized impact. You want to add the least amount of new process to your weekly workflow that just has this outsized large impact. Yeah. All right. Okay. What do you do after you launch an MVP? Exciting. Okay. Next up, we've got Akiz from Small Scope. What are some steps after launch of an MVP that founders should follow? In the video, there are some examples of successful companies' MVPs. However, there's no discussion at all on how they iterated, what they learned, why they narrowed it down to those features. So Peter from segment.io actually had a talk at YC this week on this subject, which I think is really interesting. So we started with this depressing fact. Most startups are in the process of dying. And that's pressing fact one. And depressing fact two is that most startups have convinced themselves that they're right on the verge of product market fit. When in fact, they're actually in the process of dying. So if you set that as the environment that you live in, one of the things he said that I thought was really helpful is take your MVP and be a skeptic. Have someone in your company be the skeptic and basically ask the question, is this providing any value to my users? And not like, oh, well, if I built these 17 features then it would. Is my first MVP, the service that I can provide people today, is it providing any value to my users? Then, if the answer is no, go figure out who's in so much pain around this problem that they would use your MVP and get them to use it. And then ask that question again. Am I providing any value to those users? It turns out that it's too easy to go down a track where step one, you're not providing any value, and just to make it so that iteration one, you're providing no value. Iteration two, you're providing no value. Iteration three, you're providing no value. If your product, if your problem you're solving is severe enough, there should be some group of people who are willing to use a really bad product to help solve it. And so go find them. That's where I think the best folks that do MVPs go. And what they do is they literally take what they have today and they talk to different groups of users and they begin to kind of, instead of iterating on the product like building more features, they actually iterate on the market. So they'll find like, I mean it's always a great example, but the superhuman, Rahul, the founder of Superhuman, wrote a great blog post on how you iterate towards product market fit. And one of the things that he talks about is looking at, like, the demographics within the first hundred users. And he realized that, like, founders, salespeople were really taking advantage of the basic features that superhuman had. And then product managers and some other people who didn't deal with email on the same volume just did not get value and stopped using it. Another test to kind of your point of like, do people benefit from this very first version? One like kind of crazy out there test that I sometimes see people run is they kind of, they turn off their product and they see who complains. Like you don't really have to do this, but you can kind of figure out ways to simulate this. So for example, if you had an outage, if your servers went down like last week, look back at your email logs to see like did anyone care? So you might already have run this experiment by accident at some point. It's a perfect example of doing something that doesn't scale. Like a big company could never do that. And a small startup like... I mean, Reddit did that for a long time. Yeah. I mean, Twitter did too. But like small startup is something you totally can do. And if you think about the environment as like the greatest percentage chance of what I'm doing is death, then you should be willing to experiment with extreme things. Experiment with death? Yeah. That's weird. All right. What's next? I do remember a lot of farewells. Tons of farewells. And I always complain. Whenever Reddit would go down, I would complain to my friends when we were trying to figure out at work. I would text Steve. It would be funny. I'd be like, Steve, your website's down. I'm sure I'm the first person who's telling you this. But again, that's a massive sign that you're onto something. If people can't live without your website for five minutes, you've solved that. Next up, from Parshwa at Local B. My company Next up, from Parshwa at Local B, my company is a website for shopping from home base and small businesses around us. After evaluating what I do, I've realized that I have a small, I have users and traction, but we do not have product market fit. Now the question is, should I continue working on this, especially since margins are thin, or should I quit this and begin again and search for product market fit? You know, I think this is always the hardest question to answer because I see problems on both sides. There's a set of founders who, if they don't succeed immediately, their mental model is that their company is a failure. But then there's also a set of founders who, even after learning two years' worth of horrible facts, they still will not acknowledge that it's not working. I think the best strategy for this, the one that's easiest to execute, is to time bound it. So what I would say is like, hey we're gonna try everything as hard as possible to make this work for this period of time, probably no less than six months, and if we haven't figured it out then, then we're gonna be open ourselves up to pivoting. I find it's easier to time bound it because like you can, it's six months and if we haven't figured it out then then we're going to be open ourselves up to um pivoting i find it's easier to time bound it because like you can it's easier to be intellectually honest with yourself about like have i worked on this really hard for six months versus three versus have i tried all of my ideas like that's a really like if you're running out of ideas then yeah yeah like you like ideas are kind of thing... It's easy to trick yourself that you've tried all of your ideas. It's not easy to trick yourself, have I been working on this for six months. So some strategies that you can use during that six months are, like, put all the ideas that you still have up on a whiteboard and, like, pick the top one and spend a week working really hard on that. Because it's possible that you've been going through this for a couple months or a year, and you've gotten into this setup where you think you've tried everything, or you're not sure about a specific question that you might have, like, am I going after the right demographic? Do I have the right stores or small businesses on my platform? And you could test it. You could say, like, actually, we don't have product market fit. The founder of TaskRabbit was just speaking last night, and she was talking about how, like, different, like, at first, every single, like, TaskRabbit, you could just do anything with. But then they started realizing that, like, some people really just wanted IKEA furniture set up. that some people really just wanted Ikea furniture set up. And so one of the things that she said that she was looking back and she was like, I wish we tried this at the beginning, was saying, what if we just made a landing page that was just like, get your Ikea furniture set up. And so I could imagine something like this really forcing that issue. And the cool thing about that is you can do that in a week. You already have built all the framework for it. You could spin up a landing page that's like, I wanna, my hypothesis is that people really wanna buy, you know, baby stuff on like a really short term basis because they can't run out and get it. So I'm gonna use my existing website and the existing like whole thing that I've built and just test that one demographic with one use case. And then when to like, when to quit and start the search over again? What did Peter say about that? Because he did, like, they certainly. I think Peter said that, like, if you can convince the critic in the company, basically he was like, identify a critic in the company. Identify a sign that would even convince the critic that there's something here. If you can't hit that sign within a period of time, you should move. So don't trust the faith of the optimist. Try to assume the pessimist role and try to come up with an objective measure of demand. Even that person would be like, holy shit, we did it. Even the skeptic would be like, yeah, okay, I guess we have to work on this. Like that's what you're looking for. And like for him, he tells the story of Segment, which was really cool, which was that the idea of Segment he didn't believe in and his co-founder did. And his test was like, well, okay, put it on Hacker News, and let's see what, like, engineers think. And he thought it was, like, it was just going to not get any upvotes and move on to the next topic. And the next day I was to this front page of Hacker News, and he was like, oh, crap. Like, even as a skeptic, I must acknowledge that, like, there's way more demand for this than I ever thought. Like, a good mental framework. You have to get yourself out of tricking yourself that that it's working when it's not. Next up, Crystal at Sightful. Along our journey we've done surveys, interviews, and had many conversations with users. Once the MVP is live and we invite users to use and test our tool, what are the top methods you recommend for capturing and measuring feedback? I often think that startups try to scale this effort way too fast. The things that I've seen work really well are you call the users, yourself personally, you invite the users to your office, you host a dinner for your users, you put your initial users in a WhatsApp group that you can all talk with together, but things that absolutely don't scale. Another famous one was Airbnb, where customer service was one of the co-founders Joe's cell phone number. This is the perfect area where you want there to be so much information flow from the customers to you that you have to do things that don't scale. You shouldn't be thinking about, oh, how do I get my ideal intercom set up and my Zendesk set up? In the other days, you do not need that stuff. But let me unpack something there because it's easy to overlook, I think, why we talk about do things that don't scale. The reason in this case is actually you don't know the questions to ask yet. And so you want a really high bandwidth, a really wide, broad way of collecting feedback because you don't know the questions that you want to ask yet And so by having this like open-ended like the example They're gonna be very cool because they're literally just like talking like actually talking to users that have problems So you could ask questions like when they when they phone up and say like hey like can't get into my Airbnb You solve that and then while they're on the phone you, oh, by the way, how did you find us? How's your experience so far? Like to your friends, like you basically can like hack the system and instead of having to create like the perfect survey, the perfect, you just like talk. My recommendation is to write that all down and maybe on like a weekly basis, get together with you and your co-founders and kind of debrief about these conversations that you have because like some of the times like during office hours, I really like talking to founders that have had these conversations and we just kind of just talk through. I'm like, tell me about like this user's background. Like where do they work? How do they? And sometimes you can pull interesting insights out of this that can help you like tune and tweak your MVP to basically, kind of to the point that we were talking about before, about these experiments that you can run. You could say, well actually, a lot of singles are using this tool, and I've talked to three of them. Maybe we could try something that just goes after this demo. Yeah. Next up. MVP as part of your startup pitch. Well, let's see what Spencer has to say. From Spencer at CarNuba, we're CarNuba, the first online back office and field service management platform for independent car care professionals. Wow, that is a mouthful. Then you say mechanics, detailers, et cetera. Back office and field service. Field service management platform is jargon. That's something that probably they understand and a normal investor will not. Independent, I'm imagining like a one-off mechanic. Yeah, I don't know what an independent car care professional is either. Okay, here's what I think you do. You write software for mechanics shops and it helps them manage their... it like replaces the paper with... yeah. I'm still not totally there. Alright, so what's the question? Our end goal is to build an online marketplace to connect car owners with local independent car care professionals. You've got to change that. But our VP is the back office at Field Service Management Platform to build up our supply side of the marketplace. Should we be pitching to our investors our end goals or what we're working on now? Classic question. So here's how I would probably structure the pitch. Step one, what you're working on now. Step two, the traction. Step three, the business model. And then step four, the vision. It's a lot easier to sell me if I know what the hell is going on. And those first three, now I kind of know, okay, this is what you're doing today. I have a base of knowledge so I can basically, when you tell me the vision, I have context enough to see how where you are today connects with the vision. If you just sell me the vision, I'm going to be very confused that you, you know, if you're saying this marketplace, I'm imagining why aren't you just building the marketplace today? And then like, oh, actually we're doing this like B2B product. Now I'm just confused. So start with what you're doing today, then talk about the vision. Here's another reason why I really like when founders do that is I can evaluate, like I'm mostly at this early stage, I'm mostly just trying to like understand you and like, are you cool? Are you like, are you guys smart? Have you figured out a pain point? And by sharing like what you're doing and some metrics associated with it, I can actually evaluate like, are you actually like legit? Are you actually, you know, building something, finding users, all the good stuff that founders need to demonstrate. But if you just talk about this vision, I have no like metrics to evaluate you. You know, if you pitch your short-term goal, I can say like, well, you're like 75% of the way there. If you pitch this like take over the world vision, you're like nowhere. And I just can't really differentiate like are you a poser, are you just like talking a big idea thing or are you actually gonna deliver on this? All right, questions during the stream. Oh cool, we're gonna go into some YouTube questions. Let's see how this goes. Autumn at junk.io asks, says, my name is Autumn, and my business is a barter service that connects startup entrepreneurs with one another. Okay. Bartering. Okay. Bringing back the barter system. Once again, no pictures. Yeah. Maybe like an example. I don't know what they're trading. Are they trading desks? Are they trading computers? They're trading service providers? Software? Software. No trading desks, so the trading computers, the trading service providers, softwares. No idea. In consideration of getting an MVP up as soon as possible, what are the pros and cons of using white label services? So this really brings up kind of a classic thing. So I would say a couple of things to this point. One, if you're just trying to test any demand at all and a white label service can let you do that, great. But I'd argue that if you want to test any demand at all and a white label service can like let you do that great but i'd argue that like if you want to test any demand at all for this type of product probably like a google sheets spreadsheet could do it too and so if you're just looking to test is there any demand like go as simple as possible if you have seen demand and you're thinking to yourself okay i want to make this a company if you want to make it a software company that can scale, that can raise money, it's a lot easier if you're building your own software. What's next? Vivek at FleetCo.in asks, says FleetCo provides a business assistant for transport and logistics companies, which helps business owners to know how much their vehicles are making and profit a profit and loss so I don't know what a business assistant is is that like a might be an consultant is it an analyst it sounds like an Indian specific thing potentially so oftentimes like we you know are investing a lot in India right now and I think one of the things that I'm learning is that there are certain different facts in the Indian market. But as someone who lives in San Francisco, I can't visualize that as much. So some of the best Indian founders, they actually spend maybe a sentence or two bringing me up to speed on what's happening in their market so that I can begin to understand what that is. This question about pricing. Yeah. And so it's the same answer as we gave before. Price expensively. Make it so that you have a high bar for delivering great value and that you have a good verification that the person has a lot of pain. It's more often that people price underpriced than overpriced. So lean towards overpricing. Again, it forces the issue. Let's see what else we got. Let's do this one. Okay. Okay. DevHoot is an e-learning platform to help people learn software development. Okay. We've already launched our MVP. It's basically a publication, text, plus YouTube. We get about a thousand users on our channel monthly. Shall we focus on building new features and innovations, or should we go after currently implementable revenue sources like subscription? Oh, okay. So should we start charging for things that we're already offering, or should we build new free features? This is a tricky one, because it really goes to what your current situation is, a.k.a. do you need money, right? How big of a startup are you looking to build? If you're looking to build a lifestyle business, then like I would definitely charge right now. And kind of what your vision of what the product should be. And so like this one's hard to answer just straight away. If you're thinking, oh, I don't need this to be a venture scale business and I want it to be something I can do with all my time, so it needs to be able to make money so I can quit my job, then charge. Great. If you're thinking like, oh, I'm looking to build a free product for teaching people to learn software development because I want to monetize it in this other way, then I'm not so sure. And then in terms of building new features, that's a question for your users. What do your users want? How are they frustrated with your product today? I mean, you're also looking at engagement. Are people coming back and using your service on a regular basis? We often get questions like this that basically ask us for product insights when we're not the customer. And be very careful about asking any startup person who's not your customer for customer insight because they won't have them. It's a great point. Yeah. But they'll offer them. They will. They will offer them. Yes. Yeah. A bunch of recommendations that are based on no actual data. Okay. Now we're actually, we're going to get right into the YouTube comments. Oh, here's a good one. How do you deal with co-founders conflict with regards to company direction? I'm sure that this will never happen. Yeah. I think that step one is to have the conversation in a respectful way. I think oftentimes what happens is that people avoid this conversation until it becomes so problematic that it causes a founder breakup. And in the early days, just people being heard and conflict being heard actually helps dispel it. So that would be my first step. I think step two is we talk about kind of time-bounding and dealing with the skeptics. Let's say that your co-founder becomes a skeptic. Ask him, okay, what's the test that would prove that the direction we're going in right now is a good one? And what is the time period that we can all agree with to go after that? And then bam, we're running an experiment now. If we don't make it, we'll switch. If we do, well, you'll change your mind much easier way to what once you're having the conversation to kind of structure it that way as opposed to like You have to listen to me because I'm the product guy or I'm the CEO that that really works Well, you give this piece of advice at the beginning of YC that I really like which is to Get all the co-founders together in a room and plan the week or two To plan your two-week sprint. And then to ask everyone to put their ideas on the whiteboard. All ideas go up there. You don't start deleting ideas at this point. And then once the ideas are up, then you prioritize. And I think too often, especially developers, we're already internalizing how difficult things are going to be to build when we might not have understood the potential benefit from building this. It's always a trade-off. So go broad. Think of like entertain the idea of what you can build and then filter and then kind of like prioritize the list rather than just like preemptively shooting down ideas. Yeah, brainstorms turn into shooting down ideas so fast. Yeah. Let's see what we got. Got some more pricing questions. Hard tech. Is that the bottom of the list? No, I'm just looking through to see which ones. Oh, okay. We're not kind of like... Okay, here we go. Elias asks, how should I talk to my first B2B customers to let them know that I want them to sell, but also that they're part of like a beta test? So this is a fun one. I always think, and a lot of times founders ask these questions where it's basically like the answer is just be honest, right? Or the answer is you can just ask, right? And this comes up with investor conversations and customer conversations, right? You're looking for an early customer who is excited by the opportunity to work really closely with the founder, to be able to give feedback quickly, to be able to get changes quickly, and is not intimidated by something that's gonna be broken. Like that's actually a feature. Like for a lot of customers, that's, like, they would pay more for that. Yeah. And so you're looking for that customer, so be upfront about it. And it's the same thing with an investor, really. Like, a lot of times we get asked a question, like, what did the investor mean by this? Or what stage of the process am I in? Just ask the investor. It actually shows a level of sophistication to ask the question when you don't know as opposed to just nod as if you do know and then leave without any insights. And the failure mode here is if you don't bring this up now and you just present yourself as this big enterprise software company, they're going to be disappointed, you're going to be disappointed. Everyone's going to have a not fun time. So spin it in a positive. Like it's, again, you might even close the deal because you bring this up. Maybe don't call it a beta test. Just say like I'm going to work extremely closely with you to make this a success. Like I'm going to, I'll be awake 24-7 making this work because you will be awake 24-7. Boom. All right. What because you will be awake 24-7. All right. What else? Here we go. Oscar says, we're blue, a platform where housewives resell products from suppliers using WhatsApp. It's like Michaud for La Tam. I get that. Should we give incentives to our housewives to trust us like Uber did at the beginning? Incentives. incentives? So, interestingly enough, this is a common thing that happens where a startup thinks they know what happened at the beginning of a company, and sometimes they don't. So in the extreme beginning of Uber, what was so interesting was that it launched in San Francisco, and it launched as Uber Black, which is a really expensive product actually. It wasn't well subsidized. And the real value is that it was impossible to get a taxi in San Francisco, absolutely impossible. So they didn't have to incentivize people to use the first version very much because the alternative was you couldn't move around the city at all. Now as they expanded to new markets and they figured out how marketing worked and they figured out that they could accelerate penetrating into a new city if they gave away rewards, that was all stuff they did later. Much later. Yeah. So don't copy what you think someone did in the beginning when actually that wasn't what they did in the beginning. In the beginning they solved a really hilarious pain point. And if Uber had launched in New York City, it wouldn't have worked. Because the pain did not exist in New York City. The pain was so great in San Francisco that everyone was willing to use Uber Black. And they charged a lot. And they charged a ton of money. So they did the exact thing that we were talking about. They charged way too much. And they found a very specific pain point that certain very wealthy people had. I remember the first time I got an Uber. That was, yeah. It was great. I felt like a king. They had a limo in their first initial fleet. And every once in a while, you recall Uber and like a stretch limo would come and pick you up. Yeah. Like two people. It was crazy. Okay. They charged you for it. Yeah. Wait, you got charged extra for the... Not extra, but it was expensive. Okay, this is a really important next question. Yashri asks, if we're starting a technology service that has never been done before, is it important to get it patented before we release the MVP? I have some ideas on this, but I want to hear what you have to say. I usually stay far away from IP unless it's a buyout company, but you have more experience than I do. So this is such like, I started my company in a small town in Ontario, just outside of Toronto. I was not in the thick of startup world. And I'm trying to think back to how many people told me to patent that. This is like one of those things that people who are not in the startup world think is a critical piece of starting a business because they may have heard of like someone else who got screwed out of their idea or something like that. But if you're starting a startup, which is kind of defined as a technology company that's designed to grow rapidly, then the number one thing that you need to do is find something that people want and sell it to them and then iterate and grow. Patents are not a critical step necessarily in this path. In fact, a lot of times, like I had a conversation with the founder in YC and they were talking about how they needed to get their stuff patented before they launched as a YC company. And we just, I didn't dismiss it outright because there's always edge cases where it could be critical. But we talked through like, what are the benefits that you're like, that you expect to come from this patent? And most of them are for like circumstances that are after you've already hit product market fit. They're like projecting problems that they will have in the future. There are a multitude of problems that you may have. You need to keep focused on the problems like you actually have, which is you have no users, you have no product, and you have no revenue. You solve those ones, and you will have the pleasure of running into patent stuff later in the future. NICK ORLOVEILLE- Should we do one more? NICK ORLOVEILLE- Yeah. We've got time for one more. RICK VISCOMIUCCI- Last one. We already talked about design. There's one about platform risk. Where is that one? Scroll up. I think it was the YouTube platform risk one. There it is. OK. Rami asks, we have a project that solves a very critical and wide pain point, but it totally depends on YouTube. So if YouTube decides to block it, we will be out of business. Is it a good risk? Does this risk render the business worthless? Wow. I think this is something that's changed, that feels like it's changed over the last 15 years. I feel like when I came into the startup world, there were these, basically there were these systems that were open. And so Google felt like a very open system for finding websites that Google didn't have a whole bunch of other products that were competing with you. Messaging felt like a very open system. It was SMS. Email felt like a very open system. Most emails that were sent were received, it was SMS. Email felt like a very open system. Most emails that were sent were received, even promotional ones. The tricky thing now is that almost all of these systems are now closed. And almost all of these companies understand that they exploited an open system to get big and that if their system is open, if YouTube's system is open, if Facebook's system is open, they will be exploited by the next person. And so the problem is that you're not only competing with other players in your market, you're competing against the platform you're on. If this is a significant revenue opportunity for the platform you're on, they have every incentive to either buy you or kill it. And they're not gonna buy you for a lot of money because they have a lot of leverage over you. So the question I would ask you is like, is your dependence on YouTube today or is it dependence on YouTube forever? If it's that forever question, I'd be very, very cautious about building this into a business. I might consider making it a lifestyle business where you can monetize it quickly so that if it does go away, at least you've made money. And it brings in this like subscription revenue that hardcore YouTubers must have this and therefore they're willing to pay 50 or 100 bucks a month or something. Yeah, the only other way you can get away with this is kind of like the eBay PayPal case where your product becomes so mainstream on YouTube so quickly that if YouTube tried to shut it down, there'd be a mass revolt, which is hard. But interesting enough, do you remember Vine? Twitter shut down the Vine Periscope. And that was popular. That was popular with all the cool kids in San Francisco. And they still got kneecapped. So yeah. All right, cool. Everyone, thank you very much for asking all these excellent questions. We'll be back next Wednesday at 11 AM Pacific time to answer questions about next week's lectures. So thanks. See you later.