 That short, like long introductions are no good. Sam knows. All right, ready everybody? I'm not gonna ask if the mic is working like in every talk so far. I'll just assume it's working. No, fuck. All right, well make it work somebody. It works, it works. All right, all right. This is like some kind of class tradition. All right, well, make it work, somebody. It works, it works. All right, all right. This is like some kind of class tradition. All right, all right. I wrote out my talk and afterwards, in a couple days, I will turn it from a talk into an essay and put it online so you don't have to take notes, just listen. All right, so one of the advantages of having kids is that when you have to give advice to people, you can ask yourself, what would I tell my own kids? And actually, you find this really focuses you. So even though my kids are little, my two-year-old today, when asked what he was going to be after two, said a bat. The correct answer was three, but a bat is so much more interesting. So even though my kids are little, I already know what I would tell them about startups if they were in college. And so that is what I'm going to tell you. So you're literally getting what I would give my own kids, since most of you are young enough to be my own kids. All right, so startups are very counterintuitive. And I'm not sure exactly why. It could be simply because knowledge about them has not permeated our culture yet. But whatever the reason, this is an area where you cannot trust your intuitions all the time. It's like skiing in that way. Any of you guys learn to ski as adults? When you're skiing, when you first try skiing and you want to slow down, your first impulse is to lean back, just like in everything else. But lean back on skis and you fly down the hill out of control. So as I learned, so part of learning to ski is learning to suppress that impulse. Eventually you get new habits. But in the beginning, there's this list of things you're trying to remember as you start down the hill. You know, like alternate feet, make S turns, do not drag the inside foot, all this stuff. Well, startups are as unnatural as skiing, and there is a similar list of stuff you have to remember for startups. And what I'm gonna give you today is the beginning of the list. The list of the counterintuitive stuff you have to remember to, like, prevent your existing instincts from leading you astray. The first thing on it is the fact I just mentioned, that startups are so weird that if you follow your instincts, they will lead you astray. If you remember nothing more than that, when you're about to make a mistake, you may at least pause before making it. When I was running Y Combinator, we used to joke that our function was to tell founders things they would ignore. And it's really true. Batch after batch, the YC partners warn founders about mistakes they are about to make, and the founders ignore them. And they come back a year later and say, I wish we'd listened. But that dude is in their cap table, there's nothing they can do. Why do founders persistently ignore the partner's advice? Well, that's the thing about counterintuitive ideas. They contradict your intuitions. So they seem wrong. So of course your first impulse to ignore them is to ignore them. And in fact, that is not just the curse of Y Combinator, but to some extent our raison d'etre. You don't need people to give you advice that doesn't surprise you, right? If founders' existing intuitions gave them the right answers, they wouldn't need us. That's why there are a lot of ski instructors and not many running instructors, right? Like that, you don't see those two words together, running instructor, as much as you see ski instructor. It's because skiing is counterintuitive. So sort of what, what YC is, is like business ski instructors, except for going up slopes instead of down them. Well, ideally. You can, however, trust your instincts about people. You, your life so far hasn't been much like starting a startup, but all the interactions you've had with people are just like the interactions you have with people in the business world. So in fact, one of the big mistakes that founders make is not to trust their intuitions about people enough. They meet someone who seems impressive, but about whom they feel some misgivings. And then later, when things blow up, they tell them, they say, you know, I knew there was something wrong about that guy, but I ignored it because he seemed so impressive. And there's a specific sub-case in business, especially if you have come from an engineering background, as I believe you all do. You think business is supposed to be this sort of slightly distasteful thing. And so when you meet people who seem smart but somehow distasteful, you think well, okay, this must be normal for business. It's not. Just like pick people the way you would pick people if you were picking friends. This is one of those rare cases where it works to be self-indulgent. Work with people you genuinely like and respect and that you have known long enough to be sure. Because there's a lot of people who are really good at seeming likable for a while. Just wait until your interests are opposed and then you'll see. All right. Just wait till your interests are opposed and then you'll see. All right. The second counterintuitive point is that and this will, might come as a little bit of a disappointment. But what you need to succeed in a startup is not expertise in startups. That makes this class different from most other classes you take. If you take a French class, at the end of it, you will learn how to speak French, if you do the work. You may not sound exactly like a French person, but pretty close, right? This class can teach you about startups, but that is not what you need to know. What you need to know to succeed in a startup is not expertise in startups. What you need is expertise in your own users. Mark Zuckerberg did not succeed in Facebook because he was an expert in startups, he succeeded despite being a complete noob at startups. I mean, Facebook was first incorporated as a Florida LLC. Even you guys know better than that. He succeeded despite being a complete noob at startups because he understood his users very well. Most of you don't know the mechanics of raising an angel around, right? And if you feel bad about that, don't, because I can tell you Mark Zuckerberg probably doesn't know the mechanics of raising an angel around either. If he was even paying attention when Ron Conway wrote him the big check, he has probably forgotten about it by now. In fact, I worry it's not merely unnecessary for people to learn in detail about the mechanics of starting a startup, but possibly somewhat dangerous. Because another of the characteristic mistakes of young founders starting startups is to go through the motions of starting a startup. They come up with some plausible sounding idea. They raise funding at a nice valuation. They rent a nice office in Soma, hire a bunch of their friends. The next step after rent a nice office in Soma and hire a bunch of their friends is gradually realize how completely fucked they are because while imitating all the outward forms of starting a startup, they have neglected the one thing that's actually essential, which is to make something people want. By the way, that's the only use of that swear word except for the initial one that was involuntary. And I did check with Sam whether it would be okay. By the way, that's the only use of that swear word except for the initial one that was involuntary. And I did check with Sam whether it would be okay. He said he had done it several times. I mean, use the word. We saw this happen so often. No, I mean people going through the motions of starting a startup. That we made up a name for it, Playing House. Eventually, I realized why it was happening. The reason young founders go through the motions of starting a startup is because that is what they have been trained to do for their whole lives up to this point. Think about what it takes to get into college. Extracurricular activities. Check. Right? Even in college classes, most of the work you do is as artificial as running laps. And I am not attacking the educational system for being this way. Inevitably, the work that you do to learn something is going to have some amount of fakeness to it, and if you measure people's performance, they will inevitably exploit the difference to the degree that what you're measuring is largely an artifact of the fakeness. And I confess that I did this myself in college. In fact, here's a useful tip on getting good grades. I found that in a lot of classes, there might only be 20 or 30 ideas that actually had the right shape to make good exam questions. And so the way I studied for exams in these classes was not to master the material in the class, but to try and figure out what the exam questions would be and work out the answers in advance. And like, for me, the test was not like what my answers would be on the exam. For me, the test was which of my exam questions would turn up on the exam. Right? So I would, I would get my grade instantly. I would walk into the exam and look at the questions and see how many I got right, essentially. It works in a lot of classes, especially CS classes. I remember automata theory. There's only a few things that make sense to ask about automata theory. So, it's not surprising that after being effectively trained for their whole lives to play such games, young founders' first impulse on starting a startup is to figure out what the tricks are for this new game. What are the extracurricular activities of startups? What are the things I have to do? They always want to know. Since, since apparently the measure of success for a startup is fundraising, another new mistake. They always want to know what are the tricks for convincing investors. And we have to tell them the best way to convince investors is to start a startup that's actually doing well, meaning growing fast, and then simply tell investors so. So then they ask, okay, what are the tricks for growing fast? And this is exacerbated by the existence of this term growth hacks. Whenever you hear anybody talk about growth hacks, just mentally translate it in your mind into bullshit. Because what we tell them is the way to make your startup grow is to make something that users really love, right? And then tell them about it. So that's what you have to do. That's growth hacks right there. So, so many of the conversations the YC partners have with the founders begin with the founders saying a sentence that begins with, how do I, and the partners answering with a sentence that begins with, just. Why do they make things so complicated? The reason, I realized, after years of being puzzled by this, is they're looking for the trick. They've been trained to look for the trick. So this is the third thing, the third counterintuitive thing to remember about startups. Starting a startup is where gaming the system stops working. Gaming the system may continue to work if you go to work for a big company. Depending on how broken the company is, you may be able to succeed by sucking up to the right person, giving the impression of productivity by sending emails late at night, or if you're smart enough, changing the clock on your computer, cuz who's gonna check the headers, right? But I like an audience that I can tell jokes like that to and they laugh. Over in the business school, headers. Okay. God, this thing is being recorded. Over in the business school headers. Okay. God, this thing is being recorded. I just realized that. All right. From now on, we are sticking strictly to the script. All right. But in startups, that does not work. There is no boss to trick. There's no, how can you trick people. There's no boss to trick. There's no, how can you trick people if there's no one to trick? There's only users. And all users care about is that, is whether your software does what they want, right? They're like sharks. Sharks are like too stupid to fool. You can't like wave a red flag at a shark and fool it. It's like meat or no meat. So you have to have something that people want and you only prosper to the extent that you do. The dangerous thing is, particularly for you guys, the dangerous thing is that faking does work to some extent with investors. If you're really good at knowing what you're talking about, you can fool investors for one, maybe two rounds of funding. But it's not in your interest to, I mean, you're all doing this for equity. You're playing a confidence trick on yourself. You're wasting your own time because the startup is doomed. And all you're doing is you're just going to waste your time writing it down. So, stop looking for the trick. There are tricks in startups, as there are in any domain, but they are an order of magnitude less important than solving the real problem. Someone who knows zero about fundraising but has made something users really love will have an easier time raising money than someone who knows every trick in the book but has a flat usage graph. Though in a sense it's bad news that gaming the system stops working now. In the sense that you're deprived of one of your most powerful weapons, and after all, something you have spent 20 years mastering. It is something, I find it very exciting, that there even exist parts of the world where gaming the system is not how you win. I would have been really excited in college if I had explicitly realized that there are parts of the world where gaming the system matters less than others and some where it hardly matters at all. But there are, and this is one of the most important things to think about when you're planning your future. How do you win at each type of work and what do you want to win by doing? So that brings us to our fourth counterintuitive point. Startups are all consuming. If you start a startup, it will take over your life to a degree that you cannot imagine. And if it succeeds, it will take over your life for a long time. For several years at the very least, maybe a decade, maybe the rest of your working life. So there's a real opportunity cost here. It may seem to you that Larry Page has an enviable life, but there are parts of it that are definitely unenviable. The way the world looks to him is that he started running as fast as he could at age 25, and he has not stopped to catch his breath since. Every day, shit happens within the Google empire that only the emperor can deal with, and he, as the emperor, has to deal with it. If he goes on vacation for even a week, a whole backlog of shit accumulates, and he has to bear this uncomplainingly because number one, as the company's daddy, he can never show fear or weakness. And number two, if you're a billionaire, you get zero, actually less than zero sympathy if you complain about having a difficult life. Which has this strange side effect that the difficulty of being a successful startup founder is concealed from almost everyone who's done it. People who win the 100 meters in the Olympics, like they walk up to them and they're going like, right? And like Larry Page is doing that too, but you never get to see it. All right, where are we? Y Combinator has now funded several companies that could be called big successes. And in every single case, the founders say the same thing. It never gets any easier. The nature of the problems change. So you may be worrying about more glamorous problems like construction delays in your new London offices rather than the broken air conditioner in your studio apartment. But the total volume of worry never decreases. If anything, it increases. Starting a successful startup is similar to having kids in that it's like a button you press that changes your life irrevocably. And while it is, like, honestly the best thing in the world, having kids, if you take away one thing from this lecture, remember that. There are a lot of things that are easier to do before you have kids than after, many of which will make you a better parent when you do have kids. And so in rich countries, most people delay pushing the button for a while. And I'm sure you are all intimately familiar with that procedure. Yet, when it comes to starting startups, a lot of people seem to think they're supposed to start them in college. Are you crazy? And what are the universities thinking? They go out of their way to ensure that their students are well supplied with contraceptives, and yet they're starting up entrepreneurship programs and startup incubators left and right. To be fair, the universities have their hand forced here. A lot of incoming students are interested in startups. Universities are at least de facto supposed to prepare you for your career. And so if you're interested in startups, it seems like universities are supposed to teach you about startups. And if they don't, maybe they lose applicants to universities who do claim to do that. So, can universities teach you about startups? Well, not. What are we doing here? Yes and no. As I explained, they can teach you about startups, but this is not what you need to know. Essentially, if you want to learn French, universities can teach you linguistics. That's what this is. This is a linguistics class, right? We're teaching you about how to learn languages. And what you need to know is how to learn a particular language. What you need to know are the needs of your own users. You can't learn those until you actually start the company. And starting a company, which means that starting a startup is something, and you can intrinsically only learn by doing it. And you can't do that in college for the reason I just explained, that startups take over your entire life. If you start a startup in college, if you start up a startup as a student, you can't start a startup as a student, because if you start a startup, you're not a student anymore. You may be nominally a student, but you won't even be that for much longer. So, given this dichotomy, which of the two paths should you take? Be a real student and not start a startup? Or start a real startup and not be a student? Well, I can answer that one for you. I'm talking to my own kids here. Do not start a startup in college. Uh, I hope I'm not disappointing anyone. Seriously, honestly, um, starting a startup could be a component of a good life for a lot of ambitious people, but this is just part of a much bigger problem that you're trying to solve, how to have a good life, right? And though starting a startup could be a good thing to do at some point, 20 is not the optimal time to do it. There are things that that you can't, there are things you can do in your early 20s that you cannot do as well before or after. Like plunge deeply into projects on a whim that seem like they'll have no payoff or travel super cheaply with no sense of a deadline. In fact, those are really just isomorphic shapes in different domains. For unambitious people, this sort of thing can be the dreaded failure to launch. But for the ambitious ones, it's a really valuable sort of exploration. And if you start a startup at 20 and you're sufficiently successful, you will never get to do it. Mark Zuckerberg will never get to bum around a foreign country. He can, if he goes to a foreign country, it's either as a de facto state visit, or like he's hiding out incognito at the George, the George Sank in Paris, right? But he's never gonna get to just like backpack around Thailand, if that's still what people do. Do people still backpack around Thailand? Okay. Well, it's, there, that's the first real sign of enthusiasm I've seen from this audience. I should have given this talk in Thailand. Alright. He can do things that you can't do, like charter jets to fly him to foreign countries. Really big jets. But success has taken a lot of the serendipity out of his life. He Facebook is running him as much as he's running Facebook. And while it can be really cool to be in the grip of some project you consider your life's work there are advantages to serendipity. And among other things, it gives you more options to choose your life's work from. There's not even a trade off here. You're not sacrificing anything if you forgo starting a startup at 20, cuz you'll be more likely to succeed if you wait. In the unlikely case that you're 20, like astronomically unlikely case, that you're 20 and you have some side project that takes off like Facebook did, then you face a choice of either running with it or not and maybe it's reasonable to run with it. But usually the way startups take off is for the founders to make them take off and it's gratuitously stupid to do that at 20. So should you do it at any age? I realize I've made starting a startup sound kind of hard. If I haven't, let me try again. Starting a startup is really hard. What if it's too hard? What if you're not up to this challenge? The answer is the fifth counterintuitive point. You can't tell. Your life so far has given you some idea what your prospects might be if you wanted to become a mathematician or a professional football player. And boy, it's not every audience you could say that to. But unless you have had a very strange life indeed, you have not done much that's like starting a startup. Meaning starting a startup will change you a lot if it works out. So what you're trying to estimate is not just what you are, but what you could become and who can do that. Well, not me. For the last nine years, it was my job to try and guess whether people would guess. I wrote predict in here and it came out as guess. That's a very informative Freudian slip. Seriously, in here and it came out as guess. That's a very informative Freudian slip. Seriously, it's easy to tell how smart people are in 10 minutes. You know, hit a few tennis balls over the net, and do they hit them back at you or into the net? But the hard part was, and the most important part, was predicting how tough and ambitious they would become. There may be no one at this point who has more experience than me at doing this, and I can tell you how much an expert can know about that. The answer is not much. I learned from experience to keep a completely open mind about which startup in each batch, which startups would turn out to be the stars. The founders sometimes thought they knew. Some arrived feeling confident that they would ace Y Combinator just as they had aced every one of the few easy artificial tests they had faced in life so far. Others arrived wondering what mistake had caused them to be admitted and hoping that no one would discover it. But there is little to no correlation between these attitudes and how things turn out. I've read the same is true in the military, that the swaggering recruits are no more likely to turn out to be really tough than the quiet ones. And probably for the same reason, that the tests are so different from the tests in people's previous lives. If you're absolutely terrified of starting a startup, you probably shouldn't do it, unless you're one of those people who gets off on doing things you're afraid of. Otherwise, if you're merely unsure of whether you're going to be able to do it, the only way to find out is to try. Just not now. So, if you want to start up one day, if you want to start a startup one day, what do you do now in college? There are only two things you need initially, an idea and co-founders. And the MO for getting them both is the same, which leads to our sixth, sixth and last counterintuitive point. The way to get startup ideas is not to try to think of startup ideas. I've written a whole essay on this and I'm not going to repeat the whole thing here. But the short version is that if you make a conscious effort to try and think of startup ideas, you will think of ideas that are not only bad, but bad and plausible sounding, meaning you and everybody else will be fooled by them and you'll waste a lot of time before realizing they're no good. The way to come up with good startup ideas is to take a step back. Instead of trying to make a conscious effort to think of startup ideas, turn your brain into the type that has startup ideas unconsciously. In fact, so unconsciously that you don't even realize at first that there's startup ideas. This is not only possible, Yahoo, Google, Facebook, and Apple all got started this way. None of these companies were even supposed to be companies at first. They were all just side projects. The very best ideas almost have to start as side projects because they're always such outliers that your conscious mind would reject them as ideas for companies. Okay, so how do you turn your mind into the kind that has startup ideas unconsciously? One, learn a lot about things that matter. Two, work on problems that interest you. Three, with people you like and respect. That third part incidentally is how you get co-founders at the same time as the idea. The first time I wrote that paragraph, instead of learn a lot about things that matter, I wrote, become good at some technology. But that prescription, though sufficient, is too narrow. What was special about Brian Chesky and Joe Gebbia from Airbnb was not that they were experts in technology. They went to art school. They were experts in design and perhaps even more importantly, they were really good at organizing people and getting projects done. So you don't have to work on technology per se so long as you work on things that stretch you. What kind of things are those? Now that is very hard to answer in the general case. History is full of examples of young people who were working on problems that no one else at the time thought were important. And in particular, that their parents didn't think they were, were important. Um, on the other hand, history is even fuller of examples of parents who thought their kids were wasting their time and who were right. So, how do you know if you're working on real stuff? I, I mean, when Twitch TV switched from being Justin.TV to switch Twitch TV and they were going to broadcast people playing video games. I was like, what? But, turned out to be a good business. Well, I know how I know real problems are interesting. And I'm self indulgent. I like, I'm always interested in working on interesting things, even if no one else cares about them. And I find it very hard to make myself work on boring things, even if they're supposed to be important. My life is full of case after case where I worked on things just because I was interested, and they turned out to be useful later in some worldly way. Y Combinator itself is something I only did because it seemed interesting. So I seem to have some sort of internal compass that helps me out. But this is for you, not me, and I don't know what you have in your heads. Maybe if I think more about it, I could come up with some heuristics for recognizing genuinely interesting ideas. But for now, all I can give you is the hopelessly question begging advice. Incidentally, this is the actual meaning of the phrase begging the question. The hopelessly question begging advice that if you're interested in genuinely interesting problems, gratifying your interest energetically is the best way to prepare yourself for a startup, and for that matter, probably the best way to live. But although I can't explain in the general case what counts as an interesting problem, I can tell you about a large subset of them. If you think of technology as something that's spreading like a sort of fractal stain, every point on the edge that's moving represents an interesting problem. Steam engines, not so much. Although maybe, you never know. So one guaranteed way to turn your mind into the type that startup ideas form in unconsciously is to get yourself to the leading edge of some technology to, as Paul Buchheit put it, live in the future. And when you get there, ideas that seem uncannily prescient to other people will seem obvious to you. You may not realize they're startup ideas, but you'll know they're something that ought to exist. For example, back at Harvard back back in the mid 90s, a fellow grad student of my friends Robert and Trevor wrote his own voice over IP software. It wasn't meant to be a startup. He never tried to turn it into one. He just wanted to talk to his girlfriend in Taiwan without paying for long distance calls. And since he was an expert on networks, it seemed obvious to him that the thing to do was turn the sound into packets and ship them over the internet for free. Why didn't everybody do this? Well, because they weren't good at writing that kind of software. He never did anything with this. He never tried to turn it into a startup. But that is how all the best startups tend to happen. So strangely enough, the optimal thing to do in college, to a startup, but that is how all the best startups tend to happen. So strangely enough, the optimal thing to do in college if you want to be a successful startup founder is not some sort of new vocational version of college focused on entrepreneurship. It's the classic version of college is education for its own sake. If you want to start a startup, what you should do in college is learn powerful things. And if you have genuine intellectual curiosity, that's what you'll naturally tend to do if you just follow your own inclinations. The component of entrepreneurship, I can never quite say that word with a straight face, that really matters is domain expertise. Larry Page is Larry Page because he was an expert on search. And the way he became an expert on search was because he was genuinely interested in it, not because of some ulterior motive. At its best, starting a startup is merely an ulterior motive for curiosity. And you'll do it best if you introduce the ulterior motive at the end of the process. So here is the ultimateterior motive at the end of the process. So here is the ultimate advice for young would-be startup founders, reduced to two words. Just learn. All right, how much time do we have left? 18 minutes. 18 minutes of questions. Good god. Do you guys have the questions? Sure, we'll start with two questions online, or we can start with audience. You guys are in charge, whatever you want to do. Okay. So to start with online questions, the most voted question today was- Do I have to repeat them by the way? Yeah. Okay. How can a non-technical founder most effectively contribute to a startup? How can a non-technical founder most effectively contribute to a startup? How can a non-technical founder most effectively contribute to a startup? Well, if the startup is, if the startup is working in some domain, if it's not a pure technology startup, but is working in some very specific domain, like if it's Uber, right? And, and then, and the non-technical founder was an expert in the limo business, then actually the non-technical founder are probably doing most of the work, recruiting drivers and doing whatever else Uber has to do, right? And the technical founder would be just writing the iPhone app, which is probably less, well, iPhone and Android app. Which is less than half of it. If it's a purely technology startup, the non-technical founder does sales and brings coffee and cheeseburgers to the programmer. Okay. Oh, audience. Okay. Audience. Yes. Do you see any value in business school for people who want to pursue entrepreneurship? Do I see any value in business school for people who want to pursue entrepreneurship? Do I see any value in- Or if so, what value? I'm hoping that some- We probably won't have to get to the second question. Which I suppose is the answer to your first question. Okay, so the question is, is there any value in business school if you're interested in entrepreneurship, and if so, what? So, basically no. I mean, it sounds undiplomatic, but the, the point, biz, what business school was designed for is to teach people management, right? And management is a problem that you only have in a startup if you're sufficiently successful. So really, what you need to, what you need to know early on to make a startup successful is developing products. You'd be better off going to design school if you want to go to some sort of school. Although frankly, the way to learn how to do it is just to do it, you know? One of the things I got wrong early on is that I advised people who were interested in starting a startup to go work for some other company for a few years before starting their own. But honestly, the best way to learn how to start a startup is just to try and start it. You may not be successful, but you'll learn faster if you just do it. So, not really. Business schools are trying really hard to do this, but honestly, like, they were, they were designed to train the officer core of large companies, right? Which is what business seemed to be back when it was a choice of either the officer core of large companies or Joe's shoe store. And then there was this new thing, Apple, which started out as small as Joe's shoe store and then like turns into this giant mega company. But they weren't designed for that world. And like let, they're good at what they're good at. They should just be, do that and screw this whole entrepreneurship thing. Just cuz it's cool. Yes? You said management is a problem that you have only when you're successful. Yeah. So what about those first two or three people as a founder that you try to manage? Okay, so management is a problem only if you're successful. What about those first two or three people? Well, ideally, you're successful before you even hire two or three people, right? Didn't you say, Sam, that Airbnb took five months to hire their first employee? So ideally, you don't have even two or three people for quite a while. So ideally, you don't have even two or three people for quite a while. When you do, you can sort of, the first hires in a startup are almost like founders. They should be motivated by the same things. They can't be people, they can't be people you have to like manage, right? This is like that, this is not like the office or something like that. These are your, these have to be your peers really. You shouldn't have to manage them much. So is it just a big no-no, like if someone has to be managed, no way that they can be on the founding team? Well, never say never. The, I should repeat all these questions. So if someone has to manage, no way they should be on the founding team. In the case where you're doing something where you need some sort of super advanced technical thing, and there's some boffin, if you know that word, who knows this thing and nothing else in the world, including like how to wipe his mouth, then it may be to your advantage to hire said boffin and wipe his mouth for him. Um, but, uh, as a general rule, you want people who are, um, sort of self-motivated early on. They should be just like founders. Yes, questions? In the far back. Do you think we're currently in a bubble? Do I think we're currently in a bubble? Do I think we're currently in a bubble? Okay, so I'll give you two answers to this question. One, ask me questions that are useful to this audience, because these people are here to learn how to start startups. And I have in my head, like, more data about that than anybody else. And you're asking me the kind of questions a reporter does, because they can't think of anything interesting to ask. But I will answer your question. There is a difference between prices merely being high and a bubble. A bubble is a very specific form of prices being high, where people knowingly pay high prices for something in the hope that they will be able to unload it later on some greater fool. And that's what happened in the late 90s. Like, VCs knowingly invested in bullshit startups, thinking that they would be able to take those things public and unload them on the retail investors before everything blew up. And I was there. I was there for that at the epicenter of it all. And that is not what's happening today. Prices are high, valuations are high, but valuations being high does not mean a bubble. Every, every commodity has prices that go up and down in some sort of sine wave. Definitely prices are high. And so we tell people if you raise money, don't think the next time you raise money it's gonna be so easy. Who knows, maybe between now and then the Chinese economy will have exploded and there's another giant disastrous recession. Who knows? Assume the worst. But bubble, no. Yes? I'm noticing a trend among young people and successful entrepreneurs where they don't want to start one more great company. They want to start like 20. And so you're starting to see the rise of these labs attempts where they're gonna try to launch a bunch of stuff. I, I don't know of a really stellar example yet, but do you see- You mean like, like IDEO? Like, no, like, like, like IDEO Lab, like, uh, Garrett Camp's new one, there's North, yeah. Oh, yeah, yeah, okay. So there's this new thing where people start labs that are supposed to spin off startups. It might work. That's how Twitter started. In fact, I meant Idealab, not IDEO. That was another Freudian slip. Because Twitter was not Twitter at first. Twitter was this side project. Side project at a company called IDEO that was supposed to be in the podcasting business, and you're like, podcasting business, do those words even grammatically fit together? The answer turned out to be no, as Evan discovered. But like, as a side project, they spun off Twitter, and boy, was that a dog wagging tail. So people are starting these things that are supposed to spin off startups. Will it work? Quite possibly, quite possibly, if the right people do it. You can't do it yet though, because you have to do it with your own money. Yes, far back. I hate to step into sort of a gendered pitfall, but what advice do you have for female co-founders who are pursuing funding? Female co-founders when you're pursuing funding. Well, it probably is true that women have a harder time raising money, right? I've noticed this empirically and Jessica's just about to publish a bunch of interviews with female founders and a lot of them said that they thought they had a hard time, a harder time raising money too. So, what I would, you remember I said like the way to raise money? Make your startup actually do well? Well, that's just especially true in that case. If you have any, if you, if you miss the ideal target from the VC's point of view in any respect, the way to solve that problem is make the startup do really well. So in fact, there was a point like a year or two ago when I tweeted this growth graph of this company and I didn't say who they were. But I knew it would start people asking. And it was actually a female founded startup that was having trouble raising money, but their growth graph was stupendous. And so I tweeted it knowing that like all these VCs would start asking me, who is that, right? And like growth graphs have no gender, right? So if they see the growth graph first, let them fall in love with that. Right? So do well, which is good advice for startups generally. Yes? What would you learn in college right now? What, what? What would you learn in college right now? What would I learn in college? Hmm. Hmm. Literary theory? No, just kidding. Let's see. Well, you know, honestly, I think I might try and study physics. I feel, that's the thing I feel like I missed. For some reason, like, I was all excited. When I was a kid, computers were the thing. Maybe they still are, right? So I sort of got very excited about writing code. And you could do things with, you could do, you could write real programs in your bedroom. You can't like build real linear accelerators. Maybe you can. So maybe, maybe physics. I feel kind of, I always, I sort of look, I notice I sort of look longingly at physics. So maybe. But I don't know if that's, what am I saying? I'm saying, I was about to say, I don't know if that's going to be helpful starting a startup. And I've just told you to follow your own curiosity. So who cares if it's helpful? It'll turn out to be helpful. Questions? Another question online. What are your recurring systems in your work and personal life that make you efficient? Ah, boy. Okay, so what are my recurring systems in my work and personal life that make me efficient? Well, having kids is a good way to be efficient. because you have no time left. So if you want to get anything done, the amount of done you do per time is high. So, actually, many parents, many startup founders who have kids have made that point explicitly. it causes you to focus, because you have no choice. Let's see, but that's not, I wouldn't actually recommend having kids just to make you more focused. So, let's see. You know, I don't think I'm very efficient. I have two ways of getting work done. One is like during Y Combinator, the way I worked on Y Combinator is I was forced to, right? Like there were, there was an app, I had to set the application deadline. And then people would apply, and then there would be all these applications that I had to respond to by a certain time. So I had to read them, and I knew if I read them badly, we would get bad startups. So I tried really hard to read them well, right? And so I set up this situation that forced me to work. The other kind of work I do is like writing essays. And I do that involuntarily. I'm like walking down the street and the essay starts writing itself in my head. And so really, I either force myself to work on less exciting things or I can't help working less exciting things. Um, or the, I can't help working on, um, on exciting things and I don't, I don't have any useful techniques for making myself efficient. Sorry. Um, if you work on things you like, you don't have to force yourself to be efficient. Yes? When is a good time to turn a side project into a real start-up? When is a good time to turn a side project into a real startup? When is a good time to turn a side project into a startup? You will know, right? . It starts, you, you, when you, okay, so the question is, when do you turn a startup into a side project into a real startup? You will know that it's becoming a real startup when it takes over an alarming percentage of your life. Right? Like when you find, like my God, I've just spent all day working on this thing that's supposed to be a side project, I'm gonna fail all my classes, what am I gonna do? Right? Then maybe it's turning into a startup. Yes, wait, I already answered your question. I should ask, I should let somebody else ask, but I may get back to you. Yes? I, I know you talked a lot earlier about, you'll know when your startup is doing extremely well. But I feel like in a lot of cases, it's just a bit of a gray line where it's like, you know, you have some users but maybe not. It's explosive growth, chart isn't up to the right. How, what would you do, or what would you recommend doing in those situations considering you're allocating time and resources? How do you balance in and Okay, when a startup is sort of growing but not much. Mm-hm. Didn't you tell them they were supposed to read Do Things That Don't Scale? Yeah. You, sir, have not done the readings and you are busted therefore. Because I wrote a whole essay in answer to that question and that is it. Do things that don't scale. So just go read that. because I can't remember everything I said. But it's about exactly that problem. Yes, back there. What kind of startup should not go through incubation, in your opinion? What kind of, you mean, do you mean incubation a la YC? No, yeah, YC or. What kind of startup should not go through YC? Definitely any that will fail. And, or if you'll succeed but you're an intolerable, intolerable person. That also Sam would probably sooner do without. Short of that, I, I cannot think of any. Because a large percentage, founders are often surprised by how large a percentage of the problems that startups have are the same regardless of what type of thing they're working on. And those tend to be the kind of problems that YC helps with the most, not the ones that are domain specific. So I can't, is there, do you, can you think of a class of startups that YC wouldn't work for? I can't. I mean, we had like fission and fusion startups in the last batch. Or that they had. Yes? You mentioned that it's good advice to learn a lot about something that matters. Yeah. Or some good strategies to figure out what matters. Well, if you think of, okay, so how do you figure out what matters? If you think of technology as something that's spreading as a sort of fractal stain, anything on the edge represents an interesting idea. Sounds familiar. So how do you figure out, like I said, that was the problem. You have correctly identified the thing where I didn't really answer the question, where I gave this question begging answer. I said, like, that I just, like, I'm interested in interesting things. If you're interested in interesting things, work on them, and things will all work out, right? But how do you tell what is a real problem? I don't know. That's like important enough to write a whole essay about. And I don't know the answer. I probably should write something about that. But I don't know. I don't know. I figured out a technique for detecting whether you have a taste for genuinely interesting problems, which is whether you find working on boring things intolerable, right? And there are known boring things, like literary theory and working in middle management in some large company. So if you could tolerate those things, then you must not, you must either have stupendous self-discipline or you don't have a taste for genuinely interesting problems, and vice versa. Yes? One more question. Okay, one more question. It better be good. I was just wondering how, makes money on plans to use it in the future. Snapchat? What do I know about Snapchat? We didn't fund them. Can I have another question? All right. Go ahead. So you talked about hiring people in the play, but it seems like that could lead to a monoculture. There are a lot of benefits maybe of a monoculture, but how do you deal with the blind spots that arise? Okay, so if you hire people you like, you might get a monoculture. And how do you deal with the blind spots that arise? Starting a startup is something where many things will be going wrong. You can't expect it to be perfect. And the advantages of, of hiring people that you know and like are far greater than the, you know, the small disadvantage of, disadvantages of having some monoculture. You look at it empirically, all the most successful startups, someone just like hires all their pals out of college. All right you guys, thank you. Gracias.